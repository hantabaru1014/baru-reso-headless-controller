// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: hdlctrl/v1/controller.proto

package hdlctrlv1

import (
	v1 "github.com/hantabaru1014/baru-reso-headless-controller/pbgen/headless/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HeadlessHostStatus int32

const (
	HeadlessHostStatus_HEADLESS_HOST_STATUS_UNKNOWN  HeadlessHostStatus = 0
	HeadlessHostStatus_HEADLESS_HOST_STATUS_STARTING HeadlessHostStatus = 1
	HeadlessHostStatus_HEADLESS_HOST_STATUS_RUNNING  HeadlessHostStatus = 2
	HeadlessHostStatus_HEADLESS_HOST_STATUS_STOPPING HeadlessHostStatus = 3
	HeadlessHostStatus_HEADLESS_HOST_STATUS_EXITED   HeadlessHostStatus = 4
	HeadlessHostStatus_HEADLESS_HOST_STATUS_CRASHED  HeadlessHostStatus = 5
)

// Enum value maps for HeadlessHostStatus.
var (
	HeadlessHostStatus_name = map[int32]string{
		0: "HEADLESS_HOST_STATUS_UNKNOWN",
		1: "HEADLESS_HOST_STATUS_STARTING",
		2: "HEADLESS_HOST_STATUS_RUNNING",
		3: "HEADLESS_HOST_STATUS_STOPPING",
		4: "HEADLESS_HOST_STATUS_EXITED",
		5: "HEADLESS_HOST_STATUS_CRASHED",
	}
	HeadlessHostStatus_value = map[string]int32{
		"HEADLESS_HOST_STATUS_UNKNOWN":  0,
		"HEADLESS_HOST_STATUS_STARTING": 1,
		"HEADLESS_HOST_STATUS_RUNNING":  2,
		"HEADLESS_HOST_STATUS_STOPPING": 3,
		"HEADLESS_HOST_STATUS_EXITED":   4,
		"HEADLESS_HOST_STATUS_CRASHED":  5,
	}
)

func (x HeadlessHostStatus) Enum() *HeadlessHostStatus {
	p := new(HeadlessHostStatus)
	*p = x
	return p
}

func (x HeadlessHostStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeadlessHostStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_hdlctrl_v1_controller_proto_enumTypes[0].Descriptor()
}

func (HeadlessHostStatus) Type() protoreflect.EnumType {
	return &file_hdlctrl_v1_controller_proto_enumTypes[0]
}

func (x HeadlessHostStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeadlessHostStatus.Descriptor instead.
func (HeadlessHostStatus) EnumDescriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{0}
}

type SessionStatus int32

const (
	SessionStatus_SESSION_STATUS_UNKNOWN  SessionStatus = 0
	SessionStatus_SESSION_STATUS_STARTING SessionStatus = 1
	SessionStatus_SESSION_STATUS_RUNNING  SessionStatus = 2
	SessionStatus_SESSION_STATUS_ENDED    SessionStatus = 3
	SessionStatus_SESSION_STATUS_CRASHED  SessionStatus = 4
)

// Enum value maps for SessionStatus.
var (
	SessionStatus_name = map[int32]string{
		0: "SESSION_STATUS_UNKNOWN",
		1: "SESSION_STATUS_STARTING",
		2: "SESSION_STATUS_RUNNING",
		3: "SESSION_STATUS_ENDED",
		4: "SESSION_STATUS_CRASHED",
	}
	SessionStatus_value = map[string]int32{
		"SESSION_STATUS_UNKNOWN":  0,
		"SESSION_STATUS_STARTING": 1,
		"SESSION_STATUS_RUNNING":  2,
		"SESSION_STATUS_ENDED":    3,
		"SESSION_STATUS_CRASHED":  4,
	}
)

func (x SessionStatus) Enum() *SessionStatus {
	p := new(SessionStatus)
	*p = x
	return p
}

func (x SessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_hdlctrl_v1_controller_proto_enumTypes[1].Descriptor()
}

func (SessionStatus) Type() protoreflect.EnumType {
	return &file_hdlctrl_v1_controller_proto_enumTypes[1]
}

func (x SessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionStatus.Descriptor instead.
func (SessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{1}
}

type StartHeadlessHostRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HeadlessAccountId string                 `protobuf:"bytes,2,opt,name=headless_account_id,json=headlessAccountId,proto3" json:"headless_account_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StartHeadlessHostRequest) Reset() {
	*x = StartHeadlessHostRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartHeadlessHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartHeadlessHostRequest) ProtoMessage() {}

func (x *StartHeadlessHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartHeadlessHostRequest.ProtoReflect.Descriptor instead.
func (*StartHeadlessHostRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{0}
}

func (x *StartHeadlessHostRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartHeadlessHostRequest) GetHeadlessAccountId() string {
	if x != nil {
		return x.HeadlessAccountId
	}
	return ""
}

type StartHeadlessHostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartHeadlessHostResponse) Reset() {
	*x = StartHeadlessHostResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartHeadlessHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartHeadlessHostResponse) ProtoMessage() {}

func (x *StartHeadlessHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartHeadlessHostResponse.ProtoReflect.Descriptor instead.
func (*StartHeadlessHostResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{1}
}

func (x *StartHeadlessHostResponse) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type CreateHeadlessAccountRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ResoniteUserId string                 `protobuf:"bytes,1,opt,name=resonite_user_id,json=resoniteUserId,proto3" json:"resonite_user_id,omitempty"`
	Credential     string                 `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	Password       string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateHeadlessAccountRequest) Reset() {
	*x = CreateHeadlessAccountRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHeadlessAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHeadlessAccountRequest) ProtoMessage() {}

func (x *CreateHeadlessAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHeadlessAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateHeadlessAccountRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{2}
}

func (x *CreateHeadlessAccountRequest) GetResoniteUserId() string {
	if x != nil {
		return x.ResoniteUserId
	}
	return ""
}

func (x *CreateHeadlessAccountRequest) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

func (x *CreateHeadlessAccountRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CreateHeadlessAccountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateHeadlessAccountResponse) Reset() {
	*x = CreateHeadlessAccountResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHeadlessAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHeadlessAccountResponse) ProtoMessage() {}

func (x *CreateHeadlessAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHeadlessAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateHeadlessAccountResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{3}
}

type ListHeadlessAccountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHeadlessAccountsRequest) Reset() {
	*x = ListHeadlessAccountsRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHeadlessAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHeadlessAccountsRequest) ProtoMessage() {}

func (x *ListHeadlessAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHeadlessAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListHeadlessAccountsRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{4}
}

type ListHeadlessAccountsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accounts      []*HeadlessAccount     `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHeadlessAccountsResponse) Reset() {
	*x = ListHeadlessAccountsResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHeadlessAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHeadlessAccountsResponse) ProtoMessage() {}

func (x *ListHeadlessAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHeadlessAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListHeadlessAccountsResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{5}
}

func (x *ListHeadlessAccountsResponse) GetAccounts() []*HeadlessAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type AcceptFriendRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	UserIds       []string               `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptFriendRequestsRequest) Reset() {
	*x = AcceptFriendRequestsRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptFriendRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendRequestsRequest) ProtoMessage() {}

func (x *AcceptFriendRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendRequestsRequest.ProtoReflect.Descriptor instead.
func (*AcceptFriendRequestsRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{6}
}

func (x *AcceptFriendRequestsRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *AcceptFriendRequestsRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type AcceptFriendRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptFriendRequestsResponse) Reset() {
	*x = AcceptFriendRequestsResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptFriendRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendRequestsResponse) ProtoMessage() {}

func (x *AcceptFriendRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendRequestsResponse.ProtoReflect.Descriptor instead.
func (*AcceptFriendRequestsResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{7}
}

type GetFriendRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendRequestsRequest) Reset() {
	*x = GetFriendRequestsRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestsRequest) ProtoMessage() {}

func (x *GetFriendRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetFriendRequestsRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{8}
}

func (x *GetFriendRequestsRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type RestartHeadlessHostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	WithUpdate    bool                   `protobuf:"varint,2,opt,name=with_update,json=withUpdate,proto3" json:"with_update,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartHeadlessHostRequest) Reset() {
	*x = RestartHeadlessHostRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartHeadlessHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartHeadlessHostRequest) ProtoMessage() {}

func (x *RestartHeadlessHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartHeadlessHostRequest.ProtoReflect.Descriptor instead.
func (*RestartHeadlessHostRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{9}
}

func (x *RestartHeadlessHostRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *RestartHeadlessHostRequest) GetWithUpdate() bool {
	if x != nil {
		return x.WithUpdate
	}
	return false
}

type RestartHeadlessHostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewHostId     *string                `protobuf:"bytes,1,opt,name=new_host_id,json=newHostId,proto3,oneof" json:"new_host_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartHeadlessHostResponse) Reset() {
	*x = RestartHeadlessHostResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartHeadlessHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartHeadlessHostResponse) ProtoMessage() {}

func (x *RestartHeadlessHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartHeadlessHostResponse.ProtoReflect.Descriptor instead.
func (*RestartHeadlessHostResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{10}
}

func (x *RestartHeadlessHostResponse) GetNewHostId() string {
	if x != nil && x.NewHostId != nil {
		return *x.NewHostId
	}
	return ""
}

type PullLatestHostImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullLatestHostImageRequest) Reset() {
	*x = PullLatestHostImageRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullLatestHostImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullLatestHostImageRequest) ProtoMessage() {}

func (x *PullLatestHostImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullLatestHostImageRequest.ProtoReflect.Descriptor instead.
func (*PullLatestHostImageRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{11}
}

type PullLatestHostImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          string                 `protobuf:"bytes,1,opt,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullLatestHostImageResponse) Reset() {
	*x = PullLatestHostImageResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullLatestHostImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullLatestHostImageResponse) ProtoMessage() {}

func (x *PullLatestHostImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullLatestHostImageResponse.ProtoReflect.Descriptor instead.
func (*PullLatestHostImageResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{12}
}

func (x *PullLatestHostImageResponse) GetLogs() string {
	if x != nil {
		return x.Logs
	}
	return ""
}

type UpdateHeadlessHostSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateHeadlessHostSettingsRequest) Reset() {
	*x = UpdateHeadlessHostSettingsRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHeadlessHostSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHeadlessHostSettingsRequest) ProtoMessage() {}

func (x *UpdateHeadlessHostSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHeadlessHostSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateHeadlessHostSettingsRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateHeadlessHostSettingsRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *UpdateHeadlessHostSettingsRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateHeadlessHostSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateHeadlessHostSettingsResponse) Reset() {
	*x = UpdateHeadlessHostSettingsResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHeadlessHostSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHeadlessHostSettingsResponse) ProtoMessage() {}

func (x *UpdateHeadlessHostSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHeadlessHostSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateHeadlessHostSettingsResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{14}
}

type ShutdownHeadlessHostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownHeadlessHostRequest) Reset() {
	*x = ShutdownHeadlessHostRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownHeadlessHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownHeadlessHostRequest) ProtoMessage() {}

func (x *ShutdownHeadlessHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownHeadlessHostRequest.ProtoReflect.Descriptor instead.
func (*ShutdownHeadlessHostRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{15}
}

func (x *ShutdownHeadlessHostRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type ShutdownHeadlessHostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownHeadlessHostResponse) Reset() {
	*x = ShutdownHeadlessHostResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownHeadlessHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownHeadlessHostResponse) ProtoMessage() {}

func (x *ShutdownHeadlessHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownHeadlessHostResponse.ProtoReflect.Descriptor instead.
func (*ShutdownHeadlessHostResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{16}
}

type GetHeadlessHostLogsRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	HostId string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	// Types that are valid to be assigned to Query:
	//
	//	*GetHeadlessHostLogsRequest_Limit
	//	*GetHeadlessHostLogsRequest_Until
	//	*GetHeadlessHostLogsRequest_Since
	Query         isGetHeadlessHostLogsRequest_Query `protobuf_oneof:"query"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHeadlessHostLogsRequest) Reset() {
	*x = GetHeadlessHostLogsRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHeadlessHostLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHeadlessHostLogsRequest) ProtoMessage() {}

func (x *GetHeadlessHostLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHeadlessHostLogsRequest.ProtoReflect.Descriptor instead.
func (*GetHeadlessHostLogsRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{17}
}

func (x *GetHeadlessHostLogsRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *GetHeadlessHostLogsRequest) GetQuery() isGetHeadlessHostLogsRequest_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *GetHeadlessHostLogsRequest) GetLimit() int32 {
	if x != nil {
		if x, ok := x.Query.(*GetHeadlessHostLogsRequest_Limit); ok {
			return x.Limit
		}
	}
	return 0
}

func (x *GetHeadlessHostLogsRequest) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Query.(*GetHeadlessHostLogsRequest_Until); ok {
			return x.Until
		}
	}
	return nil
}

func (x *GetHeadlessHostLogsRequest) GetSince() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Query.(*GetHeadlessHostLogsRequest_Since); ok {
			return x.Since
		}
	}
	return nil
}

type isGetHeadlessHostLogsRequest_Query interface {
	isGetHeadlessHostLogsRequest_Query()
}

type GetHeadlessHostLogsRequest_Limit struct {
	// limit が指定されている場合は、最新のログから limit 件取得する
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3,oneof"`
}

type GetHeadlessHostLogsRequest_Until struct {
	// until が指定されている場合は、until 以前のログを全て取得する
	Until *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=until,proto3,oneof"`
}

type GetHeadlessHostLogsRequest_Since struct {
	// since が指定されている場合は、since 以降のログを全て取得する
	Since *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=since,proto3,oneof"`
}

func (*GetHeadlessHostLogsRequest_Limit) isGetHeadlessHostLogsRequest_Query() {}

func (*GetHeadlessHostLogsRequest_Until) isGetHeadlessHostLogsRequest_Query() {}

func (*GetHeadlessHostLogsRequest_Since) isGetHeadlessHostLogsRequest_Query() {}

type GetHeadlessHostLogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 時系列に並んだログ
	Logs          []*GetHeadlessHostLogsResponse_Log `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHeadlessHostLogsResponse) Reset() {
	*x = GetHeadlessHostLogsResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHeadlessHostLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHeadlessHostLogsResponse) ProtoMessage() {}

func (x *GetHeadlessHostLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHeadlessHostLogsResponse.ProtoReflect.Descriptor instead.
func (*GetHeadlessHostLogsResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{18}
}

func (x *GetHeadlessHostLogsResponse) GetLogs() []*GetHeadlessHostLogsResponse_Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

type SearchUserInfoRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	HostId        string                    `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Parameters    *v1.SearchUserInfoRequest `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUserInfoRequest) Reset() {
	*x = SearchUserInfoRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserInfoRequest) ProtoMessage() {}

func (x *SearchUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserInfoRequest.ProtoReflect.Descriptor instead.
func (*SearchUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{19}
}

func (x *SearchUserInfoRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *SearchUserInfoRequest) GetParameters() *v1.SearchUserInfoRequest {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type KickUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Parameters    *v1.KickUserRequest    `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KickUserRequest) Reset() {
	*x = KickUserRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickUserRequest) ProtoMessage() {}

func (x *KickUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickUserRequest.ProtoReflect.Descriptor instead.
func (*KickUserRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{20}
}

func (x *KickUserRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *KickUserRequest) GetParameters() *v1.KickUserRequest {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type KickUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KickUserResponse) Reset() {
	*x = KickUserResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickUserResponse) ProtoMessage() {}

func (x *KickUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickUserResponse.ProtoReflect.Descriptor instead.
func (*KickUserResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{21}
}

type BanUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Parameters    *v1.BanUserRequest     `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanUserRequest) Reset() {
	*x = BanUserRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserRequest) ProtoMessage() {}

func (x *BanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserRequest.ProtoReflect.Descriptor instead.
func (*BanUserRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{22}
}

func (x *BanUserRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *BanUserRequest) GetParameters() *v1.BanUserRequest {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type BanUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanUserResponse) Reset() {
	*x = BanUserResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserResponse) ProtoMessage() {}

func (x *BanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserResponse.ProtoReflect.Descriptor instead.
func (*BanUserResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{23}
}

type FetchWorldInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchWorldInfoRequest) Reset() {
	*x = FetchWorldInfoRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchWorldInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchWorldInfoRequest) ProtoMessage() {}

func (x *FetchWorldInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchWorldInfoRequest.ProtoReflect.Descriptor instead.
func (*FetchWorldInfoRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{24}
}

func (x *FetchWorldInfoRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *FetchWorldInfoRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ListHeadlessHostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHeadlessHostRequest) Reset() {
	*x = ListHeadlessHostRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHeadlessHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHeadlessHostRequest) ProtoMessage() {}

func (x *ListHeadlessHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHeadlessHostRequest.ProtoReflect.Descriptor instead.
func (*ListHeadlessHostRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{25}
}

type ListHeadlessHostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hosts         []*HeadlessHost        `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHeadlessHostResponse) Reset() {
	*x = ListHeadlessHostResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHeadlessHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHeadlessHostResponse) ProtoMessage() {}

func (x *ListHeadlessHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHeadlessHostResponse.ProtoReflect.Descriptor instead.
func (*ListHeadlessHostResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{26}
}

func (x *ListHeadlessHostResponse) GetHosts() []*HeadlessHost {
	if x != nil {
		return x.Hosts
	}
	return nil
}

type GetHeadlessHostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHeadlessHostRequest) Reset() {
	*x = GetHeadlessHostRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHeadlessHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHeadlessHostRequest) ProtoMessage() {}

func (x *GetHeadlessHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHeadlessHostRequest.ProtoReflect.Descriptor instead.
func (*GetHeadlessHostRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{27}
}

func (x *GetHeadlessHostRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type GetHeadlessHostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          *HeadlessHost          `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHeadlessHostResponse) Reset() {
	*x = GetHeadlessHostResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHeadlessHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHeadlessHostResponse) ProtoMessage() {}

func (x *GetHeadlessHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHeadlessHostResponse.ProtoReflect.Descriptor instead.
func (*GetHeadlessHostResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{28}
}

func (x *GetHeadlessHostResponse) GetHost() *HeadlessHost {
	if x != nil {
		return x.Host
	}
	return nil
}

type AddHeadlessHostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddHeadlessHostRequest) Reset() {
	*x = AddHeadlessHostRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddHeadlessHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHeadlessHostRequest) ProtoMessage() {}

func (x *AddHeadlessHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHeadlessHostRequest.ProtoReflect.Descriptor instead.
func (*AddHeadlessHostRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{29}
}

func (x *AddHeadlessHostRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddHeadlessHostRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AddHeadlessHostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          *HeadlessHost          `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddHeadlessHostResponse) Reset() {
	*x = AddHeadlessHostResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddHeadlessHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHeadlessHostResponse) ProtoMessage() {}

func (x *AddHeadlessHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHeadlessHostResponse.ProtoReflect.Descriptor instead.
func (*AddHeadlessHostResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{30}
}

func (x *AddHeadlessHostResponse) GetHost() *HeadlessHost {
	if x != nil {
		return x.Host
	}
	return nil
}

type SearchSessionsRequest struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Parameters    *SearchSessionsRequest_SearchParameters `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchSessionsRequest) Reset() {
	*x = SearchSessionsRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSessionsRequest) ProtoMessage() {}

func (x *SearchSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSessionsRequest.ProtoReflect.Descriptor instead.
func (*SearchSessionsRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{31}
}

func (x *SearchSessionsRequest) GetParameters() *SearchSessionsRequest_SearchParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type SearchSessionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*Session             `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchSessionsResponse) Reset() {
	*x = SearchSessionsResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSessionsResponse) ProtoMessage() {}

func (x *SearchSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSessionsResponse.ProtoReflect.Descriptor instead.
func (*SearchSessionsResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{32}
}

func (x *SearchSessionsResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type GetSessionDetailsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in hdlctrl/v1/controller.proto.
	HostId        string `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"` // 指定不要
	SessionId     string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionDetailsRequest) Reset() {
	*x = GetSessionDetailsRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionDetailsRequest) ProtoMessage() {}

func (x *GetSessionDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetSessionDetailsRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{33}
}

// Deprecated: Marked as deprecated in hdlctrl/v1/controller.proto.
func (x *GetSessionDetailsRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *GetSessionDetailsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetSessionDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *Session               `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionDetailsResponse) Reset() {
	*x = GetSessionDetailsResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionDetailsResponse) ProtoMessage() {}

func (x *GetSessionDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetSessionDetailsResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{34}
}

func (x *GetSessionDetailsResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type StartWorldRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	HostId        string                     `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Parameters    *v1.WorldStartupParameters `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartWorldRequest) Reset() {
	*x = StartWorldRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorldRequest) ProtoMessage() {}

func (x *StartWorldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorldRequest.ProtoReflect.Descriptor instead.
func (*StartWorldRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{35}
}

func (x *StartWorldRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *StartWorldRequest) GetParameters() *v1.WorldStartupParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type StartWorldResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpenedSession *Session               `protobuf:"bytes,1,opt,name=opened_session,json=openedSession,proto3" json:"opened_session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartWorldResponse) Reset() {
	*x = StartWorldResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorldResponse) ProtoMessage() {}

func (x *StartWorldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorldResponse.ProtoReflect.Descriptor instead.
func (*StartWorldResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{36}
}

func (x *StartWorldResponse) GetOpenedSession() *Session {
	if x != nil {
		return x.OpenedSession
	}
	return nil
}

type StopSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSessionRequest) Reset() {
	*x = StopSessionRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionRequest) ProtoMessage() {}

func (x *StopSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionRequest.ProtoReflect.Descriptor instead.
func (*StopSessionRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{37}
}

func (x *StopSessionRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *StopSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type StopSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSessionResponse) Reset() {
	*x = StopSessionResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionResponse) ProtoMessage() {}

func (x *StopSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionResponse.ProtoReflect.Descriptor instead.
func (*StopSessionResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{38}
}

type SaveSessionWorldRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveSessionWorldRequest) Reset() {
	*x = SaveSessionWorldRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveSessionWorldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSessionWorldRequest) ProtoMessage() {}

func (x *SaveSessionWorldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSessionWorldRequest.ProtoReflect.Descriptor instead.
func (*SaveSessionWorldRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{39}
}

func (x *SaveSessionWorldRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *SaveSessionWorldRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type SaveSessionWorldResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveSessionWorldResponse) Reset() {
	*x = SaveSessionWorldResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveSessionWorldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSessionWorldResponse) ProtoMessage() {}

func (x *SaveSessionWorldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSessionWorldResponse.ProtoReflect.Descriptor instead.
func (*SaveSessionWorldResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{40}
}

type InviteUserRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	HostId    string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	SessionId string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are valid to be assigned to User:
	//
	//	*InviteUserRequest_UserId
	//	*InviteUserRequest_UserName
	User          isInviteUserRequest_User `protobuf_oneof:"user"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteUserRequest) Reset() {
	*x = InviteUserRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserRequest) ProtoMessage() {}

func (x *InviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserRequest.ProtoReflect.Descriptor instead.
func (*InviteUserRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{41}
}

func (x *InviteUserRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *InviteUserRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *InviteUserRequest) GetUser() isInviteUserRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *InviteUserRequest) GetUserId() string {
	if x != nil {
		if x, ok := x.User.(*InviteUserRequest_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *InviteUserRequest) GetUserName() string {
	if x != nil {
		if x, ok := x.User.(*InviteUserRequest_UserName); ok {
			return x.UserName
		}
	}
	return ""
}

type isInviteUserRequest_User interface {
	isInviteUserRequest_User()
}

type InviteUserRequest_UserId struct {
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof"`
}

type InviteUserRequest_UserName struct {
	UserName string `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3,oneof"`
}

func (*InviteUserRequest_UserId) isInviteUserRequest_User() {}

func (*InviteUserRequest_UserName) isInviteUserRequest_User() {}

type InviteUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteUserResponse) Reset() {
	*x = InviteUserResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserResponse) ProtoMessage() {}

func (x *InviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserResponse.ProtoReflect.Descriptor instead.
func (*InviteUserResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{42}
}

type UpdateUserRoleRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	HostId        string                    `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Parameters    *v1.UpdateUserRoleRequest `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRoleRequest) Reset() {
	*x = UpdateUserRoleRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleRequest) ProtoMessage() {}

func (x *UpdateUserRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateUserRoleRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *UpdateUserRoleRequest) GetParameters() *v1.UpdateUserRoleRequest {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type UpdateUserRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRoleResponse) Reset() {
	*x = UpdateUserRoleResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleResponse) ProtoMessage() {}

func (x *UpdateUserRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateUserRoleResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type UpdateSessionParametersRequest struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	HostId        string                             `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Parameters    *v1.UpdateSessionParametersRequest `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSessionParametersRequest) Reset() {
	*x = UpdateSessionParametersRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSessionParametersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionParametersRequest) ProtoMessage() {}

func (x *UpdateSessionParametersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionParametersRequest.ProtoReflect.Descriptor instead.
func (*UpdateSessionParametersRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateSessionParametersRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *UpdateSessionParametersRequest) GetParameters() *v1.UpdateSessionParametersRequest {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type UpdateSessionParametersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSessionParametersResponse) Reset() {
	*x = UpdateSessionParametersResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSessionParametersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionParametersResponse) ProtoMessage() {}

func (x *UpdateSessionParametersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionParametersResponse.ProtoReflect.Descriptor instead.
func (*UpdateSessionParametersResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{46}
}

type ListUsersInSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        string                 `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersInSessionRequest) Reset() {
	*x = ListUsersInSessionRequest{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersInSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersInSessionRequest) ProtoMessage() {}

func (x *ListUsersInSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersInSessionRequest.ProtoReflect.Descriptor instead.
func (*ListUsersInSessionRequest) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{47}
}

func (x *ListUsersInSessionRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *ListUsersInSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ListUsersInSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*v1.UserInSession    `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersInSessionResponse) Reset() {
	*x = ListUsersInSessionResponse{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersInSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersInSessionResponse) ProtoMessage() {}

func (x *ListUsersInSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersInSessionResponse.ProtoReflect.Descriptor instead.
func (*ListUsersInSessionResponse) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{48}
}

func (x *ListUsersInSessionResponse) GetUsers() []*v1.UserInSession {
	if x != nil {
		return x.Users
	}
	return nil
}

type HeadlessHost struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address           string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	ResoniteVersion   string                 `protobuf:"bytes,4,opt,name=resonite_version,json=resoniteVersion,proto3" json:"resonite_version,omitempty"`
	AccountId         string                 `protobuf:"bytes,5,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountName       string                 `protobuf:"bytes,6,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	Fps               float32                `protobuf:"fixed32,7,opt,name=fps,proto3" json:"fps,omitempty"`
	StorageQuotaBytes int64                  `protobuf:"varint,8,opt,name=storage_quota_bytes,json=storageQuotaBytes,proto3" json:"storage_quota_bytes,omitempty"`
	StorageUsedBytes  int64                  `protobuf:"varint,9,opt,name=storage_used_bytes,json=storageUsedBytes,proto3" json:"storage_used_bytes,omitempty"`
	Status            HeadlessHostStatus     `protobuf:"varint,10,opt,name=status,proto3,enum=hdlctrl.v1.HeadlessHostStatus" json:"status,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HeadlessHost) Reset() {
	*x = HeadlessHost{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadlessHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadlessHost) ProtoMessage() {}

func (x *HeadlessHost) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadlessHost.ProtoReflect.Descriptor instead.
func (*HeadlessHost) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{49}
}

func (x *HeadlessHost) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HeadlessHost) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HeadlessHost) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *HeadlessHost) GetResoniteVersion() string {
	if x != nil {
		return x.ResoniteVersion
	}
	return ""
}

func (x *HeadlessHost) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *HeadlessHost) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *HeadlessHost) GetFps() float32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *HeadlessHost) GetStorageQuotaBytes() int64 {
	if x != nil {
		return x.StorageQuotaBytes
	}
	return 0
}

func (x *HeadlessHost) GetStorageUsedBytes() int64 {
	if x != nil {
		return x.StorageUsedBytes
	}
	return 0
}

func (x *HeadlessHost) GetStatus() HeadlessHostStatus {
	if x != nil {
		return x.Status
	}
	return HeadlessHostStatus_HEADLESS_HOST_STATUS_UNKNOWN
}

type Session struct {
	state             protoimpl.MessageState     `protogen:"open.v1"`
	Id                string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	HostId            string                     `protobuf:"bytes,3,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Status            SessionStatus              `protobuf:"varint,4,opt,name=status,proto3,enum=hdlctrl.v1.SessionStatus" json:"status,omitempty"`
	StartedAt         *timestamppb.Timestamp     `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt           *timestamppb.Timestamp     `protobuf:"bytes,6,opt,name=ended_at,json=endedAt,proto3,oneof" json:"ended_at,omitempty"`
	StartupParameters *v1.WorldStartupParameters `protobuf:"bytes,7,opt,name=startup_parameters,json=startupParameters,proto3" json:"startup_parameters,omitempty"`
	CurrentState      *v1.Session                `protobuf:"bytes,8,opt,name=current_state,json=currentState,proto3,oneof" json:"current_state,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{50}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Session) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *Session) GetStatus() SessionStatus {
	if x != nil {
		return x.Status
	}
	return SessionStatus_SESSION_STATUS_UNKNOWN
}

func (x *Session) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Session) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

func (x *Session) GetStartupParameters() *v1.WorldStartupParameters {
	if x != nil {
		return x.StartupParameters
	}
	return nil
}

func (x *Session) GetCurrentState() *v1.Session {
	if x != nil {
		return x.CurrentState
	}
	return nil
}

type HeadlessAccount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	IconUrl       string                 `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeadlessAccount) Reset() {
	*x = HeadlessAccount{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadlessAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadlessAccount) ProtoMessage() {}

func (x *HeadlessAccount) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadlessAccount.ProtoReflect.Descriptor instead.
func (*HeadlessAccount) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{51}
}

func (x *HeadlessAccount) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HeadlessAccount) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *HeadlessAccount) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

type GetHeadlessHostLogsResponse_Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsError       bool                   `protobuf:"varint,2,opt,name=is_error,json=isError,proto3" json:"is_error,omitempty"`
	Body          string                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHeadlessHostLogsResponse_Log) Reset() {
	*x = GetHeadlessHostLogsResponse_Log{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHeadlessHostLogsResponse_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHeadlessHostLogsResponse_Log) ProtoMessage() {}

func (x *GetHeadlessHostLogsResponse_Log) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHeadlessHostLogsResponse_Log.ProtoReflect.Descriptor instead.
func (*GetHeadlessHostLogsResponse_Log) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{18, 0}
}

func (x *GetHeadlessHostLogsResponse_Log) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GetHeadlessHostLogsResponse_Log) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *GetHeadlessHostLogsResponse_Log) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type SearchSessionsRequest_SearchParameters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostId        *string                `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3,oneof" json:"host_id,omitempty"`
	Status        *SessionStatus         `protobuf:"varint,2,opt,name=status,proto3,enum=hdlctrl.v1.SessionStatus,oneof" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchSessionsRequest_SearchParameters) Reset() {
	*x = SearchSessionsRequest_SearchParameters{}
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchSessionsRequest_SearchParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSessionsRequest_SearchParameters) ProtoMessage() {}

func (x *SearchSessionsRequest_SearchParameters) ProtoReflect() protoreflect.Message {
	mi := &file_hdlctrl_v1_controller_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSessionsRequest_SearchParameters.ProtoReflect.Descriptor instead.
func (*SearchSessionsRequest_SearchParameters) Descriptor() ([]byte, []int) {
	return file_hdlctrl_v1_controller_proto_rawDescGZIP(), []int{31, 0}
}

func (x *SearchSessionsRequest_SearchParameters) GetHostId() string {
	if x != nil && x.HostId != nil {
		return *x.HostId
	}
	return ""
}

func (x *SearchSessionsRequest_SearchParameters) GetStatus() SessionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return SessionStatus_SESSION_STATUS_UNKNOWN
}

var File_hdlctrl_v1_controller_proto protoreflect.FileDescriptor

const file_hdlctrl_v1_controller_proto_rawDesc = "" +
	"\n" +
	"\x1bhdlctrl/v1/controller.proto\x12\n" +
	"hdlctrl.v1\x1a\x1aheadless/v1/headless.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"^\n" +
	"\x18StartHeadlessHostRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12.\n" +
	"\x13headless_account_id\x18\x02 \x01(\tR\x11headlessAccountId\"4\n" +
	"\x19StartHeadlessHostResponse\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\"\x84\x01\n" +
	"\x1cCreateHeadlessAccountRequest\x12(\n" +
	"\x10resonite_user_id\x18\x01 \x01(\tR\x0eresoniteUserId\x12\x1e\n" +
	"\n" +
	"credential\x18\x02 \x01(\tR\n" +
	"credential\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\"\x1f\n" +
	"\x1dCreateHeadlessAccountResponse\"\x1d\n" +
	"\x1bListHeadlessAccountsRequest\"W\n" +
	"\x1cListHeadlessAccountsResponse\x127\n" +
	"\baccounts\x18\x01 \x03(\v2\x1b.hdlctrl.v1.HeadlessAccountR\baccounts\"Q\n" +
	"\x1bAcceptFriendRequestsRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x19\n" +
	"\buser_ids\x18\x02 \x03(\tR\auserIds\"\x1e\n" +
	"\x1cAcceptFriendRequestsResponse\"3\n" +
	"\x18GetFriendRequestsRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\"V\n" +
	"\x1aRestartHeadlessHostRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x1f\n" +
	"\vwith_update\x18\x02 \x01(\bR\n" +
	"withUpdate\"R\n" +
	"\x1bRestartHeadlessHostResponse\x12#\n" +
	"\vnew_host_id\x18\x01 \x01(\tH\x00R\tnewHostId\x88\x01\x01B\x0e\n" +
	"\f_new_host_id\"\x1c\n" +
	"\x1aPullLatestHostImageRequest\"1\n" +
	"\x1bPullLatestHostImageResponse\x12\x12\n" +
	"\x04logs\x18\x01 \x01(\tR\x04logs\"^\n" +
	"!UpdateHeadlessHostSettingsRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01B\a\n" +
	"\x05_name\"$\n" +
	"\"UpdateHeadlessHostSettingsResponse\"6\n" +
	"\x1bShutdownHeadlessHostRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\"\x1e\n" +
	"\x1cShutdownHeadlessHostResponse\"\xbe\x01\n" +
	"\x1aGetHeadlessHostLogsRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x16\n" +
	"\x05limit\x18\x02 \x01(\x05H\x00R\x05limit\x122\n" +
	"\x05until\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x05until\x122\n" +
	"\x05since\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\x05sinceB\a\n" +
	"\x05query\"\xce\x01\n" +
	"\x1bGetHeadlessHostLogsResponse\x12?\n" +
	"\x04logs\x18\x01 \x03(\v2+.hdlctrl.v1.GetHeadlessHostLogsResponse.LogR\x04logs\x1an\n" +
	"\x03Log\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x19\n" +
	"\bis_error\x18\x02 \x01(\bR\aisError\x12\x12\n" +
	"\x04body\x18\x03 \x01(\tR\x04body\"t\n" +
	"\x15SearchUserInfoRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12B\n" +
	"\n" +
	"parameters\x18\x02 \x01(\v2\".headless.v1.SearchUserInfoRequestR\n" +
	"parameters\"h\n" +
	"\x0fKickUserRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12<\n" +
	"\n" +
	"parameters\x18\x02 \x01(\v2\x1c.headless.v1.KickUserRequestR\n" +
	"parameters\"\x12\n" +
	"\x10KickUserResponse\"f\n" +
	"\x0eBanUserRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12;\n" +
	"\n" +
	"parameters\x18\x02 \x01(\v2\x1b.headless.v1.BanUserRequestR\n" +
	"parameters\"\x11\n" +
	"\x0fBanUserResponse\"B\n" +
	"\x15FetchWorldInfoRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"\x19\n" +
	"\x17ListHeadlessHostRequest\"J\n" +
	"\x18ListHeadlessHostResponse\x12.\n" +
	"\x05hosts\x18\x01 \x03(\v2\x18.hdlctrl.v1.HeadlessHostR\x05hosts\"1\n" +
	"\x16GetHeadlessHostRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\"G\n" +
	"\x17GetHeadlessHostResponse\x12,\n" +
	"\x04host\x18\x01 \x01(\v2\x18.hdlctrl.v1.HeadlessHostR\x04host\"F\n" +
	"\x16AddHeadlessHostRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"G\n" +
	"\x17AddHeadlessHostResponse\x12,\n" +
	"\x04host\x18\x01 \x01(\v2\x18.hdlctrl.v1.HeadlessHostR\x04host\"\xec\x01\n" +
	"\x15SearchSessionsRequest\x12R\n" +
	"\n" +
	"parameters\x18\x01 \x01(\v22.hdlctrl.v1.SearchSessionsRequest.SearchParametersR\n" +
	"parameters\x1a\x7f\n" +
	"\x10SearchParameters\x12\x1c\n" +
	"\ahost_id\x18\x01 \x01(\tH\x00R\x06hostId\x88\x01\x01\x126\n" +
	"\x06status\x18\x02 \x01(\x0e2\x19.hdlctrl.v1.SessionStatusH\x01R\x06status\x88\x01\x01B\n" +
	"\n" +
	"\b_host_idB\t\n" +
	"\a_status\"I\n" +
	"\x16SearchSessionsResponse\x12/\n" +
	"\bsessions\x18\x01 \x03(\v2\x13.hdlctrl.v1.SessionR\bsessions\"V\n" +
	"\x18GetSessionDetailsRequest\x12\x1b\n" +
	"\ahost_id\x18\x01 \x01(\tB\x02\x18\x01R\x06hostId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\"J\n" +
	"\x19GetSessionDetailsResponse\x12-\n" +
	"\asession\x18\x01 \x01(\v2\x13.hdlctrl.v1.SessionR\asession\"q\n" +
	"\x11StartWorldRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12C\n" +
	"\n" +
	"parameters\x18\x02 \x01(\v2#.headless.v1.WorldStartupParametersR\n" +
	"parameters\"P\n" +
	"\x12StartWorldResponse\x12:\n" +
	"\x0eopened_session\x18\x01 \x01(\v2\x13.hdlctrl.v1.SessionR\ropenedSession\"L\n" +
	"\x12StopSessionRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\"\x15\n" +
	"\x13StopSessionResponse\"Q\n" +
	"\x17SaveSessionWorldRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\"\x1a\n" +
	"\x18SaveSessionWorldResponse\"\x8d\x01\n" +
	"\x11InviteUserRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x19\n" +
	"\auser_id\x18\x03 \x01(\tH\x00R\x06userId\x12\x1d\n" +
	"\tuser_name\x18\x04 \x01(\tH\x00R\buserNameB\x06\n" +
	"\x04user\"\x14\n" +
	"\x12InviteUserResponse\"t\n" +
	"\x15UpdateUserRoleRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12B\n" +
	"\n" +
	"parameters\x18\x02 \x01(\v2\".headless.v1.UpdateUserRoleRequestR\n" +
	"parameters\",\n" +
	"\x16UpdateUserRoleResponse\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\"\x86\x01\n" +
	"\x1eUpdateSessionParametersRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12K\n" +
	"\n" +
	"parameters\x18\x02 \x01(\v2+.headless.v1.UpdateSessionParametersRequestR\n" +
	"parameters\"!\n" +
	"\x1fUpdateSessionParametersResponse\"S\n" +
	"\x19ListUsersInSessionRequest\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\"N\n" +
	"\x1aListUsersInSessionResponse\x120\n" +
	"\x05users\x18\x01 \x03(\v2\x1a.headless.v1.UserInSessionR\x05users\"\xe1\x02\n" +
	"\fHeadlessHost\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12)\n" +
	"\x10resonite_version\x18\x04 \x01(\tR\x0fresoniteVersion\x12\x1d\n" +
	"\n" +
	"account_id\x18\x05 \x01(\tR\taccountId\x12!\n" +
	"\faccount_name\x18\x06 \x01(\tR\vaccountName\x12\x10\n" +
	"\x03fps\x18\a \x01(\x02R\x03fps\x12.\n" +
	"\x13storage_quota_bytes\x18\b \x01(\x03R\x11storageQuotaBytes\x12,\n" +
	"\x12storage_used_bytes\x18\t \x01(\x03R\x10storageUsedBytes\x126\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x1e.hdlctrl.v1.HeadlessHostStatusR\x06status\"\xa3\x03\n" +
	"\aSession\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\ahost_id\x18\x03 \x01(\tR\x06hostId\x121\n" +
	"\x06status\x18\x04 \x01(\x0e2\x19.hdlctrl.v1.SessionStatusR\x06status\x129\n" +
	"\n" +
	"started_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12:\n" +
	"\bended_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\aendedAt\x88\x01\x01\x12R\n" +
	"\x12startup_parameters\x18\a \x01(\v2#.headless.v1.WorldStartupParametersR\x11startupParameters\x12>\n" +
	"\rcurrent_state\x18\b \x01(\v2\x14.headless.v1.SessionH\x01R\fcurrentState\x88\x01\x01B\v\n" +
	"\t_ended_atB\x10\n" +
	"\x0e_current_state\"b\n" +
	"\x0fHeadlessAccount\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\x12\x19\n" +
	"\bicon_url\x18\x03 \x01(\tR\aiconUrl*\xe1\x01\n" +
	"\x12HeadlessHostStatus\x12 \n" +
	"\x1cHEADLESS_HOST_STATUS_UNKNOWN\x10\x00\x12!\n" +
	"\x1dHEADLESS_HOST_STATUS_STARTING\x10\x01\x12 \n" +
	"\x1cHEADLESS_HOST_STATUS_RUNNING\x10\x02\x12!\n" +
	"\x1dHEADLESS_HOST_STATUS_STOPPING\x10\x03\x12\x1f\n" +
	"\x1bHEADLESS_HOST_STATUS_EXITED\x10\x04\x12 \n" +
	"\x1cHEADLESS_HOST_STATUS_CRASHED\x10\x05*\x9a\x01\n" +
	"\rSessionStatus\x12\x1a\n" +
	"\x16SESSION_STATUS_UNKNOWN\x10\x00\x12\x1b\n" +
	"\x17SESSION_STATUS_STARTING\x10\x01\x12\x1a\n" +
	"\x16SESSION_STATUS_RUNNING\x10\x02\x12\x18\n" +
	"\x14SESSION_STATUS_ENDED\x10\x03\x12\x1a\n" +
	"\x16SESSION_STATUS_CRASHED\x10\x042\xec\x12\n" +
	"\x11ControllerService\x12]\n" +
	"\x10ListHeadlessHost\x12#.hdlctrl.v1.ListHeadlessHostRequest\x1a$.hdlctrl.v1.ListHeadlessHostResponse\x12Z\n" +
	"\x0fGetHeadlessHost\x12\".hdlctrl.v1.GetHeadlessHostRequest\x1a#.hdlctrl.v1.GetHeadlessHostResponse\x12f\n" +
	"\x13GetHeadlessHostLogs\x12&.hdlctrl.v1.GetHeadlessHostLogsRequest\x1a'.hdlctrl.v1.GetHeadlessHostLogsResponse\x12i\n" +
	"\x14ShutdownHeadlessHost\x12'.hdlctrl.v1.ShutdownHeadlessHostRequest\x1a(.hdlctrl.v1.ShutdownHeadlessHostResponse\x12{\n" +
	"\x1aUpdateHeadlessHostSettings\x12-.hdlctrl.v1.UpdateHeadlessHostSettingsRequest\x1a..hdlctrl.v1.UpdateHeadlessHostSettingsResponse\x12f\n" +
	"\x13PullLatestHostImage\x12&.hdlctrl.v1.PullLatestHostImageRequest\x1a'.hdlctrl.v1.PullLatestHostImageResponse\x12f\n" +
	"\x13RestartHeadlessHost\x12&.hdlctrl.v1.RestartHeadlessHostRequest\x1a'.hdlctrl.v1.RestartHeadlessHostResponse\x12`\n" +
	"\x11StartHeadlessHost\x12$.hdlctrl.v1.StartHeadlessHostRequest\x1a%.hdlctrl.v1.StartHeadlessHostResponse\x12l\n" +
	"\x15CreateHeadlessAccount\x12(.hdlctrl.v1.CreateHeadlessAccountRequest\x1a).hdlctrl.v1.CreateHeadlessAccountResponse\x12i\n" +
	"\x14ListHeadlessAccounts\x12'.hdlctrl.v1.ListHeadlessAccountsRequest\x1a(.hdlctrl.v1.ListHeadlessAccountsResponse\x12X\n" +
	"\x0eFetchWorldInfo\x12!.hdlctrl.v1.FetchWorldInfoRequest\x1a#.headless.v1.FetchWorldInfoResponse\x12X\n" +
	"\x0eSearchUserInfo\x12!.hdlctrl.v1.SearchUserInfoRequest\x1a#.headless.v1.SearchUserInfoResponse\x12a\n" +
	"\x11GetFriendRequests\x12$.hdlctrl.v1.GetFriendRequestsRequest\x1a&.headless.v1.GetFriendRequestsResponse\x12i\n" +
	"\x14AcceptFriendRequests\x12'.hdlctrl.v1.AcceptFriendRequestsRequest\x1a(.hdlctrl.v1.AcceptFriendRequestsResponse\x12W\n" +
	"\x0eSearchSessions\x12!.hdlctrl.v1.SearchSessionsRequest\x1a\".hdlctrl.v1.SearchSessionsResponse\x12`\n" +
	"\x11GetSessionDetails\x12$.hdlctrl.v1.GetSessionDetailsRequest\x1a%.hdlctrl.v1.GetSessionDetailsResponse\x12K\n" +
	"\n" +
	"StartWorld\x12\x1d.hdlctrl.v1.StartWorldRequest\x1a\x1e.hdlctrl.v1.StartWorldResponse\x12N\n" +
	"\vStopSession\x12\x1e.hdlctrl.v1.StopSessionRequest\x1a\x1f.hdlctrl.v1.StopSessionResponse\x12]\n" +
	"\x10SaveSessionWorld\x12#.hdlctrl.v1.SaveSessionWorldRequest\x1a$.hdlctrl.v1.SaveSessionWorldResponse\x12K\n" +
	"\n" +
	"InviteUser\x12\x1d.hdlctrl.v1.InviteUserRequest\x1a\x1e.hdlctrl.v1.InviteUserResponse\x12W\n" +
	"\x0eUpdateUserRole\x12!.hdlctrl.v1.UpdateUserRoleRequest\x1a\".hdlctrl.v1.UpdateUserRoleResponse\x12r\n" +
	"\x17UpdateSessionParameters\x12*.hdlctrl.v1.UpdateSessionParametersRequest\x1a+.hdlctrl.v1.UpdateSessionParametersResponse\x12c\n" +
	"\x12ListUsersInSession\x12%.hdlctrl.v1.ListUsersInSessionRequest\x1a&.hdlctrl.v1.ListUsersInSessionResponse\x12E\n" +
	"\bKickUser\x12\x1b.hdlctrl.v1.KickUserRequest\x1a\x1c.hdlctrl.v1.KickUserResponse\x12B\n" +
	"\aBanUser\x12\x1a.hdlctrl.v1.BanUserRequest\x1a\x1b.hdlctrl.v1.BanUserResponseB\xbd\x01\n" +
	"\x0ecom.hdlctrl.v1B\x0fControllerProtoP\x01ZQgithub.com/hantabaru1014/baru-reso-headless-controller/pbgen/hdlctrl/v1;hdlctrlv1\xa2\x02\x03HXX\xaa\x02\n" +
	"Hdlctrl.V1\xca\x02\n" +
	"Hdlctrl\\V1\xe2\x02\x16Hdlctrl\\V1\\GPBMetadata\xea\x02\vHdlctrl::V1b\x06proto3"

var (
	file_hdlctrl_v1_controller_proto_rawDescOnce sync.Once
	file_hdlctrl_v1_controller_proto_rawDescData []byte
)

func file_hdlctrl_v1_controller_proto_rawDescGZIP() []byte {
	file_hdlctrl_v1_controller_proto_rawDescOnce.Do(func() {
		file_hdlctrl_v1_controller_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_hdlctrl_v1_controller_proto_rawDesc), len(file_hdlctrl_v1_controller_proto_rawDesc)))
	})
	return file_hdlctrl_v1_controller_proto_rawDescData
}

var file_hdlctrl_v1_controller_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_hdlctrl_v1_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_hdlctrl_v1_controller_proto_goTypes = []any{
	(HeadlessHostStatus)(0),                        // 0: hdlctrl.v1.HeadlessHostStatus
	(SessionStatus)(0),                             // 1: hdlctrl.v1.SessionStatus
	(*StartHeadlessHostRequest)(nil),               // 2: hdlctrl.v1.StartHeadlessHostRequest
	(*StartHeadlessHostResponse)(nil),              // 3: hdlctrl.v1.StartHeadlessHostResponse
	(*CreateHeadlessAccountRequest)(nil),           // 4: hdlctrl.v1.CreateHeadlessAccountRequest
	(*CreateHeadlessAccountResponse)(nil),          // 5: hdlctrl.v1.CreateHeadlessAccountResponse
	(*ListHeadlessAccountsRequest)(nil),            // 6: hdlctrl.v1.ListHeadlessAccountsRequest
	(*ListHeadlessAccountsResponse)(nil),           // 7: hdlctrl.v1.ListHeadlessAccountsResponse
	(*AcceptFriendRequestsRequest)(nil),            // 8: hdlctrl.v1.AcceptFriendRequestsRequest
	(*AcceptFriendRequestsResponse)(nil),           // 9: hdlctrl.v1.AcceptFriendRequestsResponse
	(*GetFriendRequestsRequest)(nil),               // 10: hdlctrl.v1.GetFriendRequestsRequest
	(*RestartHeadlessHostRequest)(nil),             // 11: hdlctrl.v1.RestartHeadlessHostRequest
	(*RestartHeadlessHostResponse)(nil),            // 12: hdlctrl.v1.RestartHeadlessHostResponse
	(*PullLatestHostImageRequest)(nil),             // 13: hdlctrl.v1.PullLatestHostImageRequest
	(*PullLatestHostImageResponse)(nil),            // 14: hdlctrl.v1.PullLatestHostImageResponse
	(*UpdateHeadlessHostSettingsRequest)(nil),      // 15: hdlctrl.v1.UpdateHeadlessHostSettingsRequest
	(*UpdateHeadlessHostSettingsResponse)(nil),     // 16: hdlctrl.v1.UpdateHeadlessHostSettingsResponse
	(*ShutdownHeadlessHostRequest)(nil),            // 17: hdlctrl.v1.ShutdownHeadlessHostRequest
	(*ShutdownHeadlessHostResponse)(nil),           // 18: hdlctrl.v1.ShutdownHeadlessHostResponse
	(*GetHeadlessHostLogsRequest)(nil),             // 19: hdlctrl.v1.GetHeadlessHostLogsRequest
	(*GetHeadlessHostLogsResponse)(nil),            // 20: hdlctrl.v1.GetHeadlessHostLogsResponse
	(*SearchUserInfoRequest)(nil),                  // 21: hdlctrl.v1.SearchUserInfoRequest
	(*KickUserRequest)(nil),                        // 22: hdlctrl.v1.KickUserRequest
	(*KickUserResponse)(nil),                       // 23: hdlctrl.v1.KickUserResponse
	(*BanUserRequest)(nil),                         // 24: hdlctrl.v1.BanUserRequest
	(*BanUserResponse)(nil),                        // 25: hdlctrl.v1.BanUserResponse
	(*FetchWorldInfoRequest)(nil),                  // 26: hdlctrl.v1.FetchWorldInfoRequest
	(*ListHeadlessHostRequest)(nil),                // 27: hdlctrl.v1.ListHeadlessHostRequest
	(*ListHeadlessHostResponse)(nil),               // 28: hdlctrl.v1.ListHeadlessHostResponse
	(*GetHeadlessHostRequest)(nil),                 // 29: hdlctrl.v1.GetHeadlessHostRequest
	(*GetHeadlessHostResponse)(nil),                // 30: hdlctrl.v1.GetHeadlessHostResponse
	(*AddHeadlessHostRequest)(nil),                 // 31: hdlctrl.v1.AddHeadlessHostRequest
	(*AddHeadlessHostResponse)(nil),                // 32: hdlctrl.v1.AddHeadlessHostResponse
	(*SearchSessionsRequest)(nil),                  // 33: hdlctrl.v1.SearchSessionsRequest
	(*SearchSessionsResponse)(nil),                 // 34: hdlctrl.v1.SearchSessionsResponse
	(*GetSessionDetailsRequest)(nil),               // 35: hdlctrl.v1.GetSessionDetailsRequest
	(*GetSessionDetailsResponse)(nil),              // 36: hdlctrl.v1.GetSessionDetailsResponse
	(*StartWorldRequest)(nil),                      // 37: hdlctrl.v1.StartWorldRequest
	(*StartWorldResponse)(nil),                     // 38: hdlctrl.v1.StartWorldResponse
	(*StopSessionRequest)(nil),                     // 39: hdlctrl.v1.StopSessionRequest
	(*StopSessionResponse)(nil),                    // 40: hdlctrl.v1.StopSessionResponse
	(*SaveSessionWorldRequest)(nil),                // 41: hdlctrl.v1.SaveSessionWorldRequest
	(*SaveSessionWorldResponse)(nil),               // 42: hdlctrl.v1.SaveSessionWorldResponse
	(*InviteUserRequest)(nil),                      // 43: hdlctrl.v1.InviteUserRequest
	(*InviteUserResponse)(nil),                     // 44: hdlctrl.v1.InviteUserResponse
	(*UpdateUserRoleRequest)(nil),                  // 45: hdlctrl.v1.UpdateUserRoleRequest
	(*UpdateUserRoleResponse)(nil),                 // 46: hdlctrl.v1.UpdateUserRoleResponse
	(*UpdateSessionParametersRequest)(nil),         // 47: hdlctrl.v1.UpdateSessionParametersRequest
	(*UpdateSessionParametersResponse)(nil),        // 48: hdlctrl.v1.UpdateSessionParametersResponse
	(*ListUsersInSessionRequest)(nil),              // 49: hdlctrl.v1.ListUsersInSessionRequest
	(*ListUsersInSessionResponse)(nil),             // 50: hdlctrl.v1.ListUsersInSessionResponse
	(*HeadlessHost)(nil),                           // 51: hdlctrl.v1.HeadlessHost
	(*Session)(nil),                                // 52: hdlctrl.v1.Session
	(*HeadlessAccount)(nil),                        // 53: hdlctrl.v1.HeadlessAccount
	(*GetHeadlessHostLogsResponse_Log)(nil),        // 54: hdlctrl.v1.GetHeadlessHostLogsResponse.Log
	(*SearchSessionsRequest_SearchParameters)(nil), // 55: hdlctrl.v1.SearchSessionsRequest.SearchParameters
	(*timestamppb.Timestamp)(nil),                  // 56: google.protobuf.Timestamp
	(*v1.SearchUserInfoRequest)(nil),               // 57: headless.v1.SearchUserInfoRequest
	(*v1.KickUserRequest)(nil),                     // 58: headless.v1.KickUserRequest
	(*v1.BanUserRequest)(nil),                      // 59: headless.v1.BanUserRequest
	(*v1.WorldStartupParameters)(nil),              // 60: headless.v1.WorldStartupParameters
	(*v1.UpdateUserRoleRequest)(nil),               // 61: headless.v1.UpdateUserRoleRequest
	(*v1.UpdateSessionParametersRequest)(nil),      // 62: headless.v1.UpdateSessionParametersRequest
	(*v1.UserInSession)(nil),                       // 63: headless.v1.UserInSession
	(*v1.Session)(nil),                             // 64: headless.v1.Session
	(*v1.FetchWorldInfoResponse)(nil),              // 65: headless.v1.FetchWorldInfoResponse
	(*v1.SearchUserInfoResponse)(nil),              // 66: headless.v1.SearchUserInfoResponse
	(*v1.GetFriendRequestsResponse)(nil),           // 67: headless.v1.GetFriendRequestsResponse
}
var file_hdlctrl_v1_controller_proto_depIdxs = []int32{
	53, // 0: hdlctrl.v1.ListHeadlessAccountsResponse.accounts:type_name -> hdlctrl.v1.HeadlessAccount
	56, // 1: hdlctrl.v1.GetHeadlessHostLogsRequest.until:type_name -> google.protobuf.Timestamp
	56, // 2: hdlctrl.v1.GetHeadlessHostLogsRequest.since:type_name -> google.protobuf.Timestamp
	54, // 3: hdlctrl.v1.GetHeadlessHostLogsResponse.logs:type_name -> hdlctrl.v1.GetHeadlessHostLogsResponse.Log
	57, // 4: hdlctrl.v1.SearchUserInfoRequest.parameters:type_name -> headless.v1.SearchUserInfoRequest
	58, // 5: hdlctrl.v1.KickUserRequest.parameters:type_name -> headless.v1.KickUserRequest
	59, // 6: hdlctrl.v1.BanUserRequest.parameters:type_name -> headless.v1.BanUserRequest
	51, // 7: hdlctrl.v1.ListHeadlessHostResponse.hosts:type_name -> hdlctrl.v1.HeadlessHost
	51, // 8: hdlctrl.v1.GetHeadlessHostResponse.host:type_name -> hdlctrl.v1.HeadlessHost
	51, // 9: hdlctrl.v1.AddHeadlessHostResponse.host:type_name -> hdlctrl.v1.HeadlessHost
	55, // 10: hdlctrl.v1.SearchSessionsRequest.parameters:type_name -> hdlctrl.v1.SearchSessionsRequest.SearchParameters
	52, // 11: hdlctrl.v1.SearchSessionsResponse.sessions:type_name -> hdlctrl.v1.Session
	52, // 12: hdlctrl.v1.GetSessionDetailsResponse.session:type_name -> hdlctrl.v1.Session
	60, // 13: hdlctrl.v1.StartWorldRequest.parameters:type_name -> headless.v1.WorldStartupParameters
	52, // 14: hdlctrl.v1.StartWorldResponse.opened_session:type_name -> hdlctrl.v1.Session
	61, // 15: hdlctrl.v1.UpdateUserRoleRequest.parameters:type_name -> headless.v1.UpdateUserRoleRequest
	62, // 16: hdlctrl.v1.UpdateSessionParametersRequest.parameters:type_name -> headless.v1.UpdateSessionParametersRequest
	63, // 17: hdlctrl.v1.ListUsersInSessionResponse.users:type_name -> headless.v1.UserInSession
	0,  // 18: hdlctrl.v1.HeadlessHost.status:type_name -> hdlctrl.v1.HeadlessHostStatus
	1,  // 19: hdlctrl.v1.Session.status:type_name -> hdlctrl.v1.SessionStatus
	56, // 20: hdlctrl.v1.Session.started_at:type_name -> google.protobuf.Timestamp
	56, // 21: hdlctrl.v1.Session.ended_at:type_name -> google.protobuf.Timestamp
	60, // 22: hdlctrl.v1.Session.startup_parameters:type_name -> headless.v1.WorldStartupParameters
	64, // 23: hdlctrl.v1.Session.current_state:type_name -> headless.v1.Session
	56, // 24: hdlctrl.v1.GetHeadlessHostLogsResponse.Log.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 25: hdlctrl.v1.SearchSessionsRequest.SearchParameters.status:type_name -> hdlctrl.v1.SessionStatus
	27, // 26: hdlctrl.v1.ControllerService.ListHeadlessHost:input_type -> hdlctrl.v1.ListHeadlessHostRequest
	29, // 27: hdlctrl.v1.ControllerService.GetHeadlessHost:input_type -> hdlctrl.v1.GetHeadlessHostRequest
	19, // 28: hdlctrl.v1.ControllerService.GetHeadlessHostLogs:input_type -> hdlctrl.v1.GetHeadlessHostLogsRequest
	17, // 29: hdlctrl.v1.ControllerService.ShutdownHeadlessHost:input_type -> hdlctrl.v1.ShutdownHeadlessHostRequest
	15, // 30: hdlctrl.v1.ControllerService.UpdateHeadlessHostSettings:input_type -> hdlctrl.v1.UpdateHeadlessHostSettingsRequest
	13, // 31: hdlctrl.v1.ControllerService.PullLatestHostImage:input_type -> hdlctrl.v1.PullLatestHostImageRequest
	11, // 32: hdlctrl.v1.ControllerService.RestartHeadlessHost:input_type -> hdlctrl.v1.RestartHeadlessHostRequest
	2,  // 33: hdlctrl.v1.ControllerService.StartHeadlessHost:input_type -> hdlctrl.v1.StartHeadlessHostRequest
	4,  // 34: hdlctrl.v1.ControllerService.CreateHeadlessAccount:input_type -> hdlctrl.v1.CreateHeadlessAccountRequest
	6,  // 35: hdlctrl.v1.ControllerService.ListHeadlessAccounts:input_type -> hdlctrl.v1.ListHeadlessAccountsRequest
	26, // 36: hdlctrl.v1.ControllerService.FetchWorldInfo:input_type -> hdlctrl.v1.FetchWorldInfoRequest
	21, // 37: hdlctrl.v1.ControllerService.SearchUserInfo:input_type -> hdlctrl.v1.SearchUserInfoRequest
	10, // 38: hdlctrl.v1.ControllerService.GetFriendRequests:input_type -> hdlctrl.v1.GetFriendRequestsRequest
	8,  // 39: hdlctrl.v1.ControllerService.AcceptFriendRequests:input_type -> hdlctrl.v1.AcceptFriendRequestsRequest
	33, // 40: hdlctrl.v1.ControllerService.SearchSessions:input_type -> hdlctrl.v1.SearchSessionsRequest
	35, // 41: hdlctrl.v1.ControllerService.GetSessionDetails:input_type -> hdlctrl.v1.GetSessionDetailsRequest
	37, // 42: hdlctrl.v1.ControllerService.StartWorld:input_type -> hdlctrl.v1.StartWorldRequest
	39, // 43: hdlctrl.v1.ControllerService.StopSession:input_type -> hdlctrl.v1.StopSessionRequest
	41, // 44: hdlctrl.v1.ControllerService.SaveSessionWorld:input_type -> hdlctrl.v1.SaveSessionWorldRequest
	43, // 45: hdlctrl.v1.ControllerService.InviteUser:input_type -> hdlctrl.v1.InviteUserRequest
	45, // 46: hdlctrl.v1.ControllerService.UpdateUserRole:input_type -> hdlctrl.v1.UpdateUserRoleRequest
	47, // 47: hdlctrl.v1.ControllerService.UpdateSessionParameters:input_type -> hdlctrl.v1.UpdateSessionParametersRequest
	49, // 48: hdlctrl.v1.ControllerService.ListUsersInSession:input_type -> hdlctrl.v1.ListUsersInSessionRequest
	22, // 49: hdlctrl.v1.ControllerService.KickUser:input_type -> hdlctrl.v1.KickUserRequest
	24, // 50: hdlctrl.v1.ControllerService.BanUser:input_type -> hdlctrl.v1.BanUserRequest
	28, // 51: hdlctrl.v1.ControllerService.ListHeadlessHost:output_type -> hdlctrl.v1.ListHeadlessHostResponse
	30, // 52: hdlctrl.v1.ControllerService.GetHeadlessHost:output_type -> hdlctrl.v1.GetHeadlessHostResponse
	20, // 53: hdlctrl.v1.ControllerService.GetHeadlessHostLogs:output_type -> hdlctrl.v1.GetHeadlessHostLogsResponse
	18, // 54: hdlctrl.v1.ControllerService.ShutdownHeadlessHost:output_type -> hdlctrl.v1.ShutdownHeadlessHostResponse
	16, // 55: hdlctrl.v1.ControllerService.UpdateHeadlessHostSettings:output_type -> hdlctrl.v1.UpdateHeadlessHostSettingsResponse
	14, // 56: hdlctrl.v1.ControllerService.PullLatestHostImage:output_type -> hdlctrl.v1.PullLatestHostImageResponse
	12, // 57: hdlctrl.v1.ControllerService.RestartHeadlessHost:output_type -> hdlctrl.v1.RestartHeadlessHostResponse
	3,  // 58: hdlctrl.v1.ControllerService.StartHeadlessHost:output_type -> hdlctrl.v1.StartHeadlessHostResponse
	5,  // 59: hdlctrl.v1.ControllerService.CreateHeadlessAccount:output_type -> hdlctrl.v1.CreateHeadlessAccountResponse
	7,  // 60: hdlctrl.v1.ControllerService.ListHeadlessAccounts:output_type -> hdlctrl.v1.ListHeadlessAccountsResponse
	65, // 61: hdlctrl.v1.ControllerService.FetchWorldInfo:output_type -> headless.v1.FetchWorldInfoResponse
	66, // 62: hdlctrl.v1.ControllerService.SearchUserInfo:output_type -> headless.v1.SearchUserInfoResponse
	67, // 63: hdlctrl.v1.ControllerService.GetFriendRequests:output_type -> headless.v1.GetFriendRequestsResponse
	9,  // 64: hdlctrl.v1.ControllerService.AcceptFriendRequests:output_type -> hdlctrl.v1.AcceptFriendRequestsResponse
	34, // 65: hdlctrl.v1.ControllerService.SearchSessions:output_type -> hdlctrl.v1.SearchSessionsResponse
	36, // 66: hdlctrl.v1.ControllerService.GetSessionDetails:output_type -> hdlctrl.v1.GetSessionDetailsResponse
	38, // 67: hdlctrl.v1.ControllerService.StartWorld:output_type -> hdlctrl.v1.StartWorldResponse
	40, // 68: hdlctrl.v1.ControllerService.StopSession:output_type -> hdlctrl.v1.StopSessionResponse
	42, // 69: hdlctrl.v1.ControllerService.SaveSessionWorld:output_type -> hdlctrl.v1.SaveSessionWorldResponse
	44, // 70: hdlctrl.v1.ControllerService.InviteUser:output_type -> hdlctrl.v1.InviteUserResponse
	46, // 71: hdlctrl.v1.ControllerService.UpdateUserRole:output_type -> hdlctrl.v1.UpdateUserRoleResponse
	48, // 72: hdlctrl.v1.ControllerService.UpdateSessionParameters:output_type -> hdlctrl.v1.UpdateSessionParametersResponse
	50, // 73: hdlctrl.v1.ControllerService.ListUsersInSession:output_type -> hdlctrl.v1.ListUsersInSessionResponse
	23, // 74: hdlctrl.v1.ControllerService.KickUser:output_type -> hdlctrl.v1.KickUserResponse
	25, // 75: hdlctrl.v1.ControllerService.BanUser:output_type -> hdlctrl.v1.BanUserResponse
	51, // [51:76] is the sub-list for method output_type
	26, // [26:51] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_hdlctrl_v1_controller_proto_init() }
func file_hdlctrl_v1_controller_proto_init() {
	if File_hdlctrl_v1_controller_proto != nil {
		return
	}
	file_hdlctrl_v1_controller_proto_msgTypes[10].OneofWrappers = []any{}
	file_hdlctrl_v1_controller_proto_msgTypes[13].OneofWrappers = []any{}
	file_hdlctrl_v1_controller_proto_msgTypes[17].OneofWrappers = []any{
		(*GetHeadlessHostLogsRequest_Limit)(nil),
		(*GetHeadlessHostLogsRequest_Until)(nil),
		(*GetHeadlessHostLogsRequest_Since)(nil),
	}
	file_hdlctrl_v1_controller_proto_msgTypes[41].OneofWrappers = []any{
		(*InviteUserRequest_UserId)(nil),
		(*InviteUserRequest_UserName)(nil),
	}
	file_hdlctrl_v1_controller_proto_msgTypes[50].OneofWrappers = []any{}
	file_hdlctrl_v1_controller_proto_msgTypes[53].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hdlctrl_v1_controller_proto_rawDesc), len(file_hdlctrl_v1_controller_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hdlctrl_v1_controller_proto_goTypes,
		DependencyIndexes: file_hdlctrl_v1_controller_proto_depIdxs,
		EnumInfos:         file_hdlctrl_v1_controller_proto_enumTypes,
		MessageInfos:      file_hdlctrl_v1_controller_proto_msgTypes,
	}.Build()
	File_hdlctrl_v1_controller_proto = out.File
	file_hdlctrl_v1_controller_proto_goTypes = nil
	file_hdlctrl_v1_controller_proto_depIdxs = nil
}
