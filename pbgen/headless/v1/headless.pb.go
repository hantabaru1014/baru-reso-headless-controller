// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: headless/v1/headless.proto

package headlessv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccessLevel int32

const (
	AccessLevel_ACCESS_LEVEL_UNSPECIFIED      AccessLevel = 0
	AccessLevel_ACCESS_LEVEL_PRIVATE          AccessLevel = 1
	AccessLevel_ACCESS_LEVEL_LAN              AccessLevel = 2
	AccessLevel_ACCESS_LEVEL_CONTACTS         AccessLevel = 3
	AccessLevel_ACCESS_LEVEL_CONTACTS_PLUS    AccessLevel = 4
	AccessLevel_ACCESS_LEVEL_REGISTERED_USERS AccessLevel = 5
	AccessLevel_ACCESS_LEVEL_ANYONE           AccessLevel = 6
)

// Enum value maps for AccessLevel.
var (
	AccessLevel_name = map[int32]string{
		0: "ACCESS_LEVEL_UNSPECIFIED",
		1: "ACCESS_LEVEL_PRIVATE",
		2: "ACCESS_LEVEL_LAN",
		3: "ACCESS_LEVEL_CONTACTS",
		4: "ACCESS_LEVEL_CONTACTS_PLUS",
		5: "ACCESS_LEVEL_REGISTERED_USERS",
		6: "ACCESS_LEVEL_ANYONE",
	}
	AccessLevel_value = map[string]int32{
		"ACCESS_LEVEL_UNSPECIFIED":      0,
		"ACCESS_LEVEL_PRIVATE":          1,
		"ACCESS_LEVEL_LAN":              2,
		"ACCESS_LEVEL_CONTACTS":         3,
		"ACCESS_LEVEL_CONTACTS_PLUS":    4,
		"ACCESS_LEVEL_REGISTERED_USERS": 5,
		"ACCESS_LEVEL_ANYONE":           6,
	}
)

func (x AccessLevel) Enum() *AccessLevel {
	p := new(AccessLevel)
	*p = x
	return p
}

func (x AccessLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_headless_v1_headless_proto_enumTypes[0].Descriptor()
}

func (AccessLevel) Type() protoreflect.EnumType {
	return &file_headless_v1_headless_proto_enumTypes[0]
}

func (x AccessLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessLevel.Descriptor instead.
func (AccessLevel) EnumDescriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{0}
}

type ContactChatMessageType int32

const (
	ContactChatMessageType_CONTACT_CHAT_MESSAGE_TYPE_UNSPECIFIED    ContactChatMessageType = 0
	ContactChatMessageType_CONTACT_CHAT_MESSAGE_TYPE_TEXT           ContactChatMessageType = 1
	ContactChatMessageType_CONTACT_CHAT_MESSAGE_TYPE_OBJECT         ContactChatMessageType = 2
	ContactChatMessageType_CONTACT_CHAT_MESSAGE_TYPE_SOUND          ContactChatMessageType = 3
	ContactChatMessageType_CONTACT_CHAT_MESSAGE_TYPE_SESSION_INVITE ContactChatMessageType = 4
)

// Enum value maps for ContactChatMessageType.
var (
	ContactChatMessageType_name = map[int32]string{
		0: "CONTACT_CHAT_MESSAGE_TYPE_UNSPECIFIED",
		1: "CONTACT_CHAT_MESSAGE_TYPE_TEXT",
		2: "CONTACT_CHAT_MESSAGE_TYPE_OBJECT",
		3: "CONTACT_CHAT_MESSAGE_TYPE_SOUND",
		4: "CONTACT_CHAT_MESSAGE_TYPE_SESSION_INVITE",
	}
	ContactChatMessageType_value = map[string]int32{
		"CONTACT_CHAT_MESSAGE_TYPE_UNSPECIFIED":    0,
		"CONTACT_CHAT_MESSAGE_TYPE_TEXT":           1,
		"CONTACT_CHAT_MESSAGE_TYPE_OBJECT":         2,
		"CONTACT_CHAT_MESSAGE_TYPE_SOUND":          3,
		"CONTACT_CHAT_MESSAGE_TYPE_SESSION_INVITE": 4,
	}
)

func (x ContactChatMessageType) Enum() *ContactChatMessageType {
	p := new(ContactChatMessageType)
	*p = x
	return p
}

func (x ContactChatMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactChatMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_headless_v1_headless_proto_enumTypes[1].Descriptor()
}

func (ContactChatMessageType) Type() protoreflect.EnumType {
	return &file_headless_v1_headless_proto_enumTypes[1]
}

func (x ContactChatMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactChatMessageType.Descriptor instead.
func (ContactChatMessageType) EnumDescriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{1}
}

type ListContactsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContactsRequest) Reset() {
	*x = ListContactsRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContactsRequest) ProtoMessage() {}

func (x *ListContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContactsRequest.ProtoReflect.Descriptor instead.
func (*ListContactsRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{0}
}

func (x *ListContactsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListContactsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*UserInfo            `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContactsResponse) Reset() {
	*x = ListContactsResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContactsResponse) ProtoMessage() {}

func (x *ListContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContactsResponse.ProtoReflect.Descriptor instead.
func (*ListContactsResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{1}
}

func (x *ListContactsResponse) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetContactMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContactMessagesRequest) Reset() {
	*x = GetContactMessagesRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContactMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactMessagesRequest) ProtoMessage() {}

func (x *GetContactMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetContactMessagesRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{2}
}

func (x *GetContactMessagesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetContactMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetContactMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ContactChatMessage  `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContactMessagesResponse) Reset() {
	*x = GetContactMessagesResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContactMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactMessagesResponse) ProtoMessage() {}

func (x *GetContactMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetContactMessagesResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{3}
}

func (x *GetContactMessagesResponse) GetMessages() []*ContactChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SendContactMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendContactMessageRequest) Reset() {
	*x = SendContactMessageRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendContactMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactMessageRequest) ProtoMessage() {}

func (x *SendContactMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactMessageRequest.ProtoReflect.Descriptor instead.
func (*SendContactMessageRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{4}
}

func (x *SendContactMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendContactMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendContactMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendContactMessageResponse) Reset() {
	*x = SendContactMessageResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendContactMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendContactMessageResponse) ProtoMessage() {}

func (x *SendContactMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendContactMessageResponse.ProtoReflect.Descriptor instead.
func (*SendContactMessageResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{5}
}

type AcceptFriendRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIds       []string               `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptFriendRequestsRequest) Reset() {
	*x = AcceptFriendRequestsRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptFriendRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendRequestsRequest) ProtoMessage() {}

func (x *AcceptFriendRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendRequestsRequest.ProtoReflect.Descriptor instead.
func (*AcceptFriendRequestsRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{6}
}

func (x *AcceptFriendRequestsRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type AcceptFriendRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptFriendRequestsResponse) Reset() {
	*x = AcceptFriendRequestsResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptFriendRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendRequestsResponse) ProtoMessage() {}

func (x *AcceptFriendRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendRequestsResponse.ProtoReflect.Descriptor instead.
func (*AcceptFriendRequestsResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{7}
}

type GetFriendRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendRequestsRequest) Reset() {
	*x = GetFriendRequestsRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestsRequest) ProtoMessage() {}

func (x *GetFriendRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetFriendRequestsRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{8}
}

type GetFriendRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*UserInfo            `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendRequestsResponse) Reset() {
	*x = GetFriendRequestsResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestsResponse) ProtoMessage() {}

func (x *GetFriendRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestsResponse.ProtoReflect.Descriptor instead.
func (*GetFriendRequestsResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{9}
}

func (x *GetFriendRequestsResponse) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type KickUserRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are valid to be assigned to User:
	//
	//	*KickUserRequest_UserId
	//	*KickUserRequest_UserName
	User          isKickUserRequest_User `protobuf_oneof:"user"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KickUserRequest) Reset() {
	*x = KickUserRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickUserRequest) ProtoMessage() {}

func (x *KickUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickUserRequest.ProtoReflect.Descriptor instead.
func (*KickUserRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{10}
}

func (x *KickUserRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *KickUserRequest) GetUser() isKickUserRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *KickUserRequest) GetUserId() string {
	if x != nil {
		if x, ok := x.User.(*KickUserRequest_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *KickUserRequest) GetUserName() string {
	if x != nil {
		if x, ok := x.User.(*KickUserRequest_UserName); ok {
			return x.UserName
		}
	}
	return ""
}

type isKickUserRequest_User interface {
	isKickUserRequest_User()
}

type KickUserRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type KickUserRequest_UserName struct {
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3,oneof"`
}

func (*KickUserRequest_UserId) isKickUserRequest_User() {}

func (*KickUserRequest_UserName) isKickUserRequest_User() {}

type KickUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KickUserResponse) Reset() {
	*x = KickUserResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickUserResponse) ProtoMessage() {}

func (x *KickUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickUserResponse.ProtoReflect.Descriptor instead.
func (*KickUserResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{11}
}

type BanUserRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are valid to be assigned to User:
	//
	//	*BanUserRequest_UserId
	//	*BanUserRequest_UserName
	User          isBanUserRequest_User `protobuf_oneof:"user"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanUserRequest) Reset() {
	*x = BanUserRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserRequest) ProtoMessage() {}

func (x *BanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserRequest.ProtoReflect.Descriptor instead.
func (*BanUserRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{12}
}

func (x *BanUserRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *BanUserRequest) GetUser() isBanUserRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *BanUserRequest) GetUserId() string {
	if x != nil {
		if x, ok := x.User.(*BanUserRequest_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *BanUserRequest) GetUserName() string {
	if x != nil {
		if x, ok := x.User.(*BanUserRequest_UserName); ok {
			return x.UserName
		}
	}
	return ""
}

type isBanUserRequest_User interface {
	isBanUserRequest_User()
}

type BanUserRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type BanUserRequest_UserName struct {
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3,oneof"`
}

func (*BanUserRequest_UserId) isBanUserRequest_User() {}

func (*BanUserRequest_UserName) isBanUserRequest_User() {}

type BanUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanUserResponse) Reset() {
	*x = BanUserResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserResponse) ProtoMessage() {}

func (x *BanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserResponse.ProtoReflect.Descriptor instead.
func (*BanUserResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{13}
}

type SearchUserInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to User:
	//
	//	*SearchUserInfoRequest_UserId
	//	*SearchUserInfoRequest_UserName
	User           isSearchUserInfoRequest_User `protobuf_oneof:"user"`
	OnlyInContacts bool                         `protobuf:"varint,3,opt,name=only_in_contacts,json=onlyInContacts,proto3" json:"only_in_contacts,omitempty"`
	PartialMatch   bool                         `protobuf:"varint,4,opt,name=partial_match,json=partialMatch,proto3" json:"partial_match,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SearchUserInfoRequest) Reset() {
	*x = SearchUserInfoRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserInfoRequest) ProtoMessage() {}

func (x *SearchUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserInfoRequest.ProtoReflect.Descriptor instead.
func (*SearchUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{14}
}

func (x *SearchUserInfoRequest) GetUser() isSearchUserInfoRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SearchUserInfoRequest) GetUserId() string {
	if x != nil {
		if x, ok := x.User.(*SearchUserInfoRequest_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *SearchUserInfoRequest) GetUserName() string {
	if x != nil {
		if x, ok := x.User.(*SearchUserInfoRequest_UserName); ok {
			return x.UserName
		}
	}
	return ""
}

func (x *SearchUserInfoRequest) GetOnlyInContacts() bool {
	if x != nil {
		return x.OnlyInContacts
	}
	return false
}

func (x *SearchUserInfoRequest) GetPartialMatch() bool {
	if x != nil {
		return x.PartialMatch
	}
	return false
}

type isSearchUserInfoRequest_User interface {
	isSearchUserInfoRequest_User()
}

type SearchUserInfoRequest_UserId struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof"`
}

type SearchUserInfoRequest_UserName struct {
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3,oneof"`
}

func (*SearchUserInfoRequest_UserId) isSearchUserInfoRequest_User() {}

func (*SearchUserInfoRequest_UserName) isSearchUserInfoRequest_User() {}

type SearchUserInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*UserInfo            `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUserInfoResponse) Reset() {
	*x = SearchUserInfoResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserInfoResponse) ProtoMessage() {}

func (x *SearchUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserInfoResponse.ProtoReflect.Descriptor instead.
func (*SearchUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{15}
}

func (x *SearchUserInfoResponse) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetAccountInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountInfoRequest) Reset() {
	*x = GetAccountInfoRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountInfoRequest) ProtoMessage() {}

func (x *GetAccountInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAccountInfoRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{16}
}

type GetAccountInfoResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DisplayName       string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	StorageQuotaBytes int64                  `protobuf:"varint,3,opt,name=storage_quota_bytes,json=storageQuotaBytes,proto3" json:"storage_quota_bytes,omitempty"`
	StorageUsedBytes  int64                  `protobuf:"varint,4,opt,name=storage_used_bytes,json=storageUsedBytes,proto3" json:"storage_used_bytes,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetAccountInfoResponse) Reset() {
	*x = GetAccountInfoResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountInfoResponse) ProtoMessage() {}

func (x *GetAccountInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAccountInfoResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{17}
}

func (x *GetAccountInfoResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAccountInfoResponse) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *GetAccountInfoResponse) GetStorageQuotaBytes() int64 {
	if x != nil {
		return x.StorageQuotaBytes
	}
	return 0
}

func (x *GetAccountInfoResponse) GetStorageUsedBytes() int64 {
	if x != nil {
		return x.StorageUsedBytes
	}
	return 0
}

type FetchWorldInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchWorldInfoRequest) Reset() {
	*x = FetchWorldInfoRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchWorldInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchWorldInfoRequest) ProtoMessage() {}

func (x *FetchWorldInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchWorldInfoRequest.ProtoReflect.Descriptor instead.
func (*FetchWorldInfoRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{18}
}

func (x *FetchWorldInfoRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type FetchWorldInfoResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ThumbnailUrl    string                 `protobuf:"bytes,3,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	DefaultMaxUsers int32                  `protobuf:"varint,4,opt,name=default_max_users,json=defaultMaxUsers,proto3" json:"default_max_users,omitempty"`
	OwnerId         string                 `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	IsPublic        bool                   `protobuf:"varint,6,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	CanModify       bool                   `protobuf:"varint,7,opt,name=can_modify,json=canModify,proto3" json:"can_modify,omitempty"`
	IsReadonly      bool                   `protobuf:"varint,8,opt,name=is_readonly,json=isReadonly,proto3" json:"is_readonly,omitempty"`
	Tags            []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FetchWorldInfoResponse) Reset() {
	*x = FetchWorldInfoResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchWorldInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchWorldInfoResponse) ProtoMessage() {}

func (x *FetchWorldInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchWorldInfoResponse.ProtoReflect.Descriptor instead.
func (*FetchWorldInfoResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{19}
}

func (x *FetchWorldInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FetchWorldInfoResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FetchWorldInfoResponse) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *FetchWorldInfoResponse) GetDefaultMaxUsers() int32 {
	if x != nil {
		return x.DefaultMaxUsers
	}
	return 0
}

func (x *FetchWorldInfoResponse) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *FetchWorldInfoResponse) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *FetchWorldInfoResponse) GetCanModify() bool {
	if x != nil {
		return x.CanModify
	}
	return false
}

func (x *FetchWorldInfoResponse) GetIsReadonly() bool {
	if x != nil {
		return x.IsReadonly
	}
	return false
}

func (x *FetchWorldInfoResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetAboutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAboutRequest) Reset() {
	*x = GetAboutRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAboutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAboutRequest) ProtoMessage() {}

func (x *GetAboutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAboutRequest.ProtoReflect.Descriptor instead.
func (*GetAboutRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{20}
}

type GetAboutResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AppVersion      string                 `protobuf:"bytes,1,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	ResoniteVersion string                 `protobuf:"bytes,2,opt,name=resonite_version,json=resoniteVersion,proto3" json:"resonite_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetAboutResponse) Reset() {
	*x = GetAboutResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAboutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAboutResponse) ProtoMessage() {}

func (x *GetAboutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAboutResponse.ProtoReflect.Descriptor instead.
func (*GetAboutResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{21}
}

func (x *GetAboutResponse) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *GetAboutResponse) GetResoniteVersion() string {
	if x != nil {
		return x.ResoniteVersion
	}
	return ""
}

type GetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{22}
}

type GetStatusResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Fps                   float32                `protobuf:"fixed32,1,opt,name=fps,proto3" json:"fps,omitempty"`
	TotalEngineUpdateTime float32                `protobuf:"fixed32,2,opt,name=total_engine_update_time,json=totalEngineUpdateTime,proto3" json:"total_engine_update_time,omitempty"`
	SyncingRecordsCount   int32                  `protobuf:"varint,3,opt,name=syncing_records_count,json=syncingRecordsCount,proto3" json:"syncing_records_count,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{23}
}

func (x *GetStatusResponse) GetFps() float32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *GetStatusResponse) GetTotalEngineUpdateTime() float32 {
	if x != nil {
		return x.TotalEngineUpdateTime
	}
	return 0
}

func (x *GetStatusResponse) GetSyncingRecordsCount() int32 {
	if x != nil {
		return x.SyncingRecordsCount
	}
	return 0
}

type ShutdownRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownRequest) Reset() {
	*x = ShutdownRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRequest) ProtoMessage() {}

func (x *ShutdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRequest.ProtoReflect.Descriptor instead.
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{24}
}

type ShutdownResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownResponse) Reset() {
	*x = ShutdownResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownResponse) ProtoMessage() {}

func (x *ShutdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownResponse.ProtoReflect.Descriptor instead.
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{25}
}

type ListSessionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsRequest) Reset() {
	*x = ListSessionsRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsRequest) ProtoMessage() {}

func (x *ListSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListSessionsRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{26}
}

type ListSessionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*Session             `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsResponse) Reset() {
	*x = ListSessionsResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse) ProtoMessage() {}

func (x *ListSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{27}
}

func (x *ListSessionsResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type GetSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{28}
}

func (x *GetSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *Session               `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{29}
}

func (x *GetSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type StartWorldRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Parameters    *WorldStartupParameters `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartWorldRequest) Reset() {
	*x = StartWorldRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorldRequest) ProtoMessage() {}

func (x *StartWorldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorldRequest.ProtoReflect.Descriptor instead.
func (*StartWorldRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{30}
}

func (x *StartWorldRequest) GetParameters() *WorldStartupParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type StartWorldResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpenedSession *Session               `protobuf:"bytes,1,opt,name=opened_session,json=openedSession,proto3" json:"opened_session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartWorldResponse) Reset() {
	*x = StartWorldResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorldResponse) ProtoMessage() {}

func (x *StartWorldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorldResponse.ProtoReflect.Descriptor instead.
func (*StartWorldResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{31}
}

func (x *StartWorldResponse) GetOpenedSession() *Session {
	if x != nil {
		return x.OpenedSession
	}
	return nil
}

type StopSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSessionRequest) Reset() {
	*x = StopSessionRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionRequest) ProtoMessage() {}

func (x *StopSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionRequest.ProtoReflect.Descriptor instead.
func (*StopSessionRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{32}
}

func (x *StopSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type StopSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSessionResponse) Reset() {
	*x = StopSessionResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionResponse) ProtoMessage() {}

func (x *StopSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionResponse.ProtoReflect.Descriptor instead.
func (*StopSessionResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{33}
}

type SaveSessionWorldRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveSessionWorldRequest) Reset() {
	*x = SaveSessionWorldRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveSessionWorldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSessionWorldRequest) ProtoMessage() {}

func (x *SaveSessionWorldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSessionWorldRequest.ProtoReflect.Descriptor instead.
func (*SaveSessionWorldRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{34}
}

func (x *SaveSessionWorldRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type SaveSessionWorldResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveSessionWorldResponse) Reset() {
	*x = SaveSessionWorldResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveSessionWorldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSessionWorldResponse) ProtoMessage() {}

func (x *SaveSessionWorldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSessionWorldResponse.ProtoReflect.Descriptor instead.
func (*SaveSessionWorldResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{35}
}

type InviteUserRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are valid to be assigned to User:
	//
	//	*InviteUserRequest_UserId
	//	*InviteUserRequest_UserName
	User          isInviteUserRequest_User `protobuf_oneof:"user"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteUserRequest) Reset() {
	*x = InviteUserRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserRequest) ProtoMessage() {}

func (x *InviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserRequest.ProtoReflect.Descriptor instead.
func (*InviteUserRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{36}
}

func (x *InviteUserRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *InviteUserRequest) GetUser() isInviteUserRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *InviteUserRequest) GetUserId() string {
	if x != nil {
		if x, ok := x.User.(*InviteUserRequest_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *InviteUserRequest) GetUserName() string {
	if x != nil {
		if x, ok := x.User.(*InviteUserRequest_UserName); ok {
			return x.UserName
		}
	}
	return ""
}

type isInviteUserRequest_User interface {
	isInviteUserRequest_User()
}

type InviteUserRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type InviteUserRequest_UserName struct {
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3,oneof"`
}

func (*InviteUserRequest_UserId) isInviteUserRequest_User() {}

func (*InviteUserRequest_UserName) isInviteUserRequest_User() {}

type InviteUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteUserResponse) Reset() {
	*x = InviteUserResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserResponse) ProtoMessage() {}

func (x *InviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserResponse.ProtoReflect.Descriptor instead.
func (*InviteUserResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{37}
}

type UpdateUserRoleRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are valid to be assigned to User:
	//
	//	*UpdateUserRoleRequest_UserId
	//	*UpdateUserRoleRequest_UserName
	User          isUpdateUserRoleRequest_User `protobuf_oneof:"user"`
	Role          string                       `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRoleRequest) Reset() {
	*x = UpdateUserRoleRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleRequest) ProtoMessage() {}

func (x *UpdateUserRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateUserRoleRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdateUserRoleRequest) GetUser() isUpdateUserRoleRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateUserRoleRequest) GetUserId() string {
	if x != nil {
		if x, ok := x.User.(*UpdateUserRoleRequest_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *UpdateUserRoleRequest) GetUserName() string {
	if x != nil {
		if x, ok := x.User.(*UpdateUserRoleRequest_UserName); ok {
			return x.UserName
		}
	}
	return ""
}

func (x *UpdateUserRoleRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type isUpdateUserRoleRequest_User interface {
	isUpdateUserRoleRequest_User()
}

type UpdateUserRoleRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type UpdateUserRoleRequest_UserName struct {
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3,oneof"`
}

func (*UpdateUserRoleRequest_UserId) isUpdateUserRoleRequest_User() {}

func (*UpdateUserRoleRequest_UserName) isUpdateUserRoleRequest_User() {}

type UpdateUserRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 変更後のロール(無効なロールを指定した場合そのままの可能性)
	Role          string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRoleResponse) Reset() {
	*x = UpdateUserRoleResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleResponse) ProtoMessage() {}

func (x *UpdateUserRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateUserRoleResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type UpdateSessionParametersRequest struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	SessionId                  string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Name                       *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description                *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	MaxUsers                   *int32                 `protobuf:"varint,4,opt,name=max_users,json=maxUsers,proto3,oneof" json:"max_users,omitempty"`
	AccessLevel                *AccessLevel           `protobuf:"varint,5,opt,name=access_level,json=accessLevel,proto3,enum=headless.v1.AccessLevel,oneof" json:"access_level,omitempty"`
	AwayKickMinutes            *float32               `protobuf:"fixed32,6,opt,name=away_kick_minutes,json=awayKickMinutes,proto3,oneof" json:"away_kick_minutes,omitempty"`
	IdleRestartIntervalSeconds *int32                 `protobuf:"varint,7,opt,name=idle_restart_interval_seconds,json=idleRestartIntervalSeconds,proto3,oneof" json:"idle_restart_interval_seconds,omitempty"`
	SaveOnExit                 *bool                  `protobuf:"varint,8,opt,name=save_on_exit,json=saveOnExit,proto3,oneof" json:"save_on_exit,omitempty"`
	AutoSaveIntervalSeconds    *int32                 `protobuf:"varint,9,opt,name=auto_save_interval_seconds,json=autoSaveIntervalSeconds,proto3,oneof" json:"auto_save_interval_seconds,omitempty"`
	AutoSleep                  *bool                  `protobuf:"varint,10,opt,name=auto_sleep,json=autoSleep,proto3,oneof" json:"auto_sleep,omitempty"`
	HideFromPublicListing      *bool                  `protobuf:"varint,11,opt,name=hide_from_public_listing,json=hideFromPublicListing,proto3,oneof" json:"hide_from_public_listing,omitempty"`
	UpdateTags                 bool                   `protobuf:"varint,12,opt,name=update_tags,json=updateTags,proto3" json:"update_tags,omitempty"`
	Tags                       []string               `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *UpdateSessionParametersRequest) Reset() {
	*x = UpdateSessionParametersRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSessionParametersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionParametersRequest) ProtoMessage() {}

func (x *UpdateSessionParametersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionParametersRequest.ProtoReflect.Descriptor instead.
func (*UpdateSessionParametersRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateSessionParametersRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdateSessionParametersRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateSessionParametersRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateSessionParametersRequest) GetMaxUsers() int32 {
	if x != nil && x.MaxUsers != nil {
		return *x.MaxUsers
	}
	return 0
}

func (x *UpdateSessionParametersRequest) GetAccessLevel() AccessLevel {
	if x != nil && x.AccessLevel != nil {
		return *x.AccessLevel
	}
	return AccessLevel_ACCESS_LEVEL_UNSPECIFIED
}

func (x *UpdateSessionParametersRequest) GetAwayKickMinutes() float32 {
	if x != nil && x.AwayKickMinutes != nil {
		return *x.AwayKickMinutes
	}
	return 0
}

func (x *UpdateSessionParametersRequest) GetIdleRestartIntervalSeconds() int32 {
	if x != nil && x.IdleRestartIntervalSeconds != nil {
		return *x.IdleRestartIntervalSeconds
	}
	return 0
}

func (x *UpdateSessionParametersRequest) GetSaveOnExit() bool {
	if x != nil && x.SaveOnExit != nil {
		return *x.SaveOnExit
	}
	return false
}

func (x *UpdateSessionParametersRequest) GetAutoSaveIntervalSeconds() int32 {
	if x != nil && x.AutoSaveIntervalSeconds != nil {
		return *x.AutoSaveIntervalSeconds
	}
	return 0
}

func (x *UpdateSessionParametersRequest) GetAutoSleep() bool {
	if x != nil && x.AutoSleep != nil {
		return *x.AutoSleep
	}
	return false
}

func (x *UpdateSessionParametersRequest) GetHideFromPublicListing() bool {
	if x != nil && x.HideFromPublicListing != nil {
		return *x.HideFromPublicListing
	}
	return false
}

func (x *UpdateSessionParametersRequest) GetUpdateTags() bool {
	if x != nil {
		return x.UpdateTags
	}
	return false
}

func (x *UpdateSessionParametersRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateSessionParametersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSessionParametersResponse) Reset() {
	*x = UpdateSessionParametersResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSessionParametersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionParametersResponse) ProtoMessage() {}

func (x *UpdateSessionParametersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionParametersResponse.ProtoReflect.Descriptor instead.
func (*UpdateSessionParametersResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{41}
}

type ListUsersInSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersInSessionRequest) Reset() {
	*x = ListUsersInSessionRequest{}
	mi := &file_headless_v1_headless_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersInSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersInSessionRequest) ProtoMessage() {}

func (x *ListUsersInSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersInSessionRequest.ProtoReflect.Descriptor instead.
func (*ListUsersInSessionRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{42}
}

func (x *ListUsersInSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ListUsersInSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*UserInSession       `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersInSessionResponse) Reset() {
	*x = ListUsersInSessionResponse{}
	mi := &file_headless_v1_headless_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersInSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersInSessionResponse) ProtoMessage() {}

func (x *ListUsersInSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersInSessionResponse.ProtoReflect.Descriptor instead.
func (*ListUsersInSessionResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{43}
}

func (x *ListUsersInSessionResponse) GetUsers() []*UserInSession {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserInSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Role          string                 `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	IsPresent     bool                   `protobuf:"varint,4,opt,name=is_present,json=isPresent,proto3" json:"is_present,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInSession) Reset() {
	*x = UserInSession{}
	mi := &file_headless_v1_headless_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInSession) ProtoMessage() {}

func (x *UserInSession) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInSession.ProtoReflect.Descriptor instead.
func (*UserInSession) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{44}
}

func (x *UserInSession) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInSession) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInSession) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UserInSession) GetIsPresent() bool {
	if x != nil {
		return x.IsPresent
	}
	return false
}

type UserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IconUrl       string                 `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_headless_v1_headless_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{45}
}

func (x *UserInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

type Session struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	Id                string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description       string                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AccessLevel       AccessLevel             `protobuf:"varint,4,opt,name=access_level,json=accessLevel,proto3,enum=headless.v1.AccessLevel" json:"access_level,omitempty"`
	UsersCount        int32                   `protobuf:"varint,7,opt,name=users_count,json=usersCount,proto3" json:"users_count,omitempty"`
	MaxUsers          int32                   `protobuf:"varint,8,opt,name=max_users,json=maxUsers,proto3" json:"max_users,omitempty"`
	ThumbnailUrl      *string                 `protobuf:"bytes,5,opt,name=thumbnail_url,json=thumbnailUrl,proto3,oneof" json:"thumbnail_url,omitempty"`
	StartupParameters *WorldStartupParameters `protobuf:"bytes,6,opt,name=startup_parameters,json=startupParameters,proto3" json:"startup_parameters,omitempty"`
	SessionUrl        string                  `protobuf:"bytes,9,opt,name=session_url,json=sessionUrl,proto3" json:"session_url,omitempty"`
	// Deprecated: Marked as deprecated in headless/v1/headless.proto.
	TimeRunningMs              int32                  `protobuf:"varint,10,opt,name=time_running_ms,json=timeRunningMs,proto3" json:"time_running_ms,omitempty"`
	AwayKickMinutes            float32                `protobuf:"fixed32,11,opt,name=away_kick_minutes,json=awayKickMinutes,proto3" json:"away_kick_minutes,omitempty"`
	IdleRestartIntervalSeconds int32                  `protobuf:"varint,12,opt,name=idle_restart_interval_seconds,json=idleRestartIntervalSeconds,proto3" json:"idle_restart_interval_seconds,omitempty"`
	SaveOnExit                 bool                   `protobuf:"varint,13,opt,name=save_on_exit,json=saveOnExit,proto3" json:"save_on_exit,omitempty"`
	AutoSaveIntervalSeconds    int32                  `protobuf:"varint,14,opt,name=auto_save_interval_seconds,json=autoSaveIntervalSeconds,proto3" json:"auto_save_interval_seconds,omitempty"`
	AutoSleep                  bool                   `protobuf:"varint,15,opt,name=auto_sleep,json=autoSleep,proto3" json:"auto_sleep,omitempty"`
	HideFromPublicListing      bool                   `protobuf:"varint,16,opt,name=hide_from_public_listing,json=hideFromPublicListing,proto3" json:"hide_from_public_listing,omitempty"`
	Tags                       []string               `protobuf:"bytes,17,rep,name=tags,proto3" json:"tags,omitempty"`
	LastSavedAt                *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=last_saved_at,json=lastSavedAt,proto3" json:"last_saved_at,omitempty"`
	CanSave                    bool                   `protobuf:"varint,19,opt,name=can_save,json=canSave,proto3" json:"can_save,omitempty"`
	WorldUrl                   string                 `protobuf:"bytes,20,opt,name=world_url,json=worldUrl,proto3" json:"world_url,omitempty"`
	StartedAt                  *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_headless_v1_headless_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{46}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Session) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Session) GetAccessLevel() AccessLevel {
	if x != nil {
		return x.AccessLevel
	}
	return AccessLevel_ACCESS_LEVEL_UNSPECIFIED
}

func (x *Session) GetUsersCount() int32 {
	if x != nil {
		return x.UsersCount
	}
	return 0
}

func (x *Session) GetMaxUsers() int32 {
	if x != nil {
		return x.MaxUsers
	}
	return 0
}

func (x *Session) GetThumbnailUrl() string {
	if x != nil && x.ThumbnailUrl != nil {
		return *x.ThumbnailUrl
	}
	return ""
}

func (x *Session) GetStartupParameters() *WorldStartupParameters {
	if x != nil {
		return x.StartupParameters
	}
	return nil
}

func (x *Session) GetSessionUrl() string {
	if x != nil {
		return x.SessionUrl
	}
	return ""
}

// Deprecated: Marked as deprecated in headless/v1/headless.proto.
func (x *Session) GetTimeRunningMs() int32 {
	if x != nil {
		return x.TimeRunningMs
	}
	return 0
}

func (x *Session) GetAwayKickMinutes() float32 {
	if x != nil {
		return x.AwayKickMinutes
	}
	return 0
}

func (x *Session) GetIdleRestartIntervalSeconds() int32 {
	if x != nil {
		return x.IdleRestartIntervalSeconds
	}
	return 0
}

func (x *Session) GetSaveOnExit() bool {
	if x != nil {
		return x.SaveOnExit
	}
	return false
}

func (x *Session) GetAutoSaveIntervalSeconds() int32 {
	if x != nil {
		return x.AutoSaveIntervalSeconds
	}
	return 0
}

func (x *Session) GetAutoSleep() bool {
	if x != nil {
		return x.AutoSleep
	}
	return false
}

func (x *Session) GetHideFromPublicListing() bool {
	if x != nil {
		return x.HideFromPublicListing
	}
	return false
}

func (x *Session) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Session) GetLastSavedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSavedAt
	}
	return nil
}

func (x *Session) GetCanSave() bool {
	if x != nil {
		return x.CanSave
	}
	return false
}

func (x *Session) GetWorldUrl() string {
	if x != nil {
		return x.WorldUrl
	}
	return ""
}

func (x *Session) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

type DefaultUserRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DefaultUserRole) Reset() {
	*x = DefaultUserRole{}
	mi := &file_headless_v1_headless_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DefaultUserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultUserRole) ProtoMessage() {}

func (x *DefaultUserRole) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultUserRole.ProtoReflect.Descriptor instead.
func (*DefaultUserRole) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{47}
}

func (x *DefaultUserRole) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *DefaultUserRole) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type WorldStartupParameters struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            *string                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	CustomSessionId *string                `protobuf:"bytes,2,opt,name=custom_session_id,json=customSessionId,proto3,oneof" json:"custom_session_id,omitempty"`
	Description     *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Tags            []string               `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	MaxUsers        *int32                 `protobuf:"varint,4,opt,name=max_users,json=maxUsers,proto3,oneof" json:"max_users,omitempty"`
	AccessLevel     AccessLevel            `protobuf:"varint,5,opt,name=access_level,json=accessLevel,proto3,enum=headless.v1.AccessLevel" json:"access_level,omitempty"`
	// Types that are valid to be assigned to LoadWorld:
	//
	//	*WorldStartupParameters_LoadWorldUrl
	//	*WorldStartupParameters_LoadWorldPresetName
	LoadWorld                     isWorldStartupParameters_LoadWorld `protobuf_oneof:"load_world"`
	AutoInviteUsernames           []string                           `protobuf:"bytes,8,rep,name=auto_invite_usernames,json=autoInviteUsernames,proto3" json:"auto_invite_usernames,omitempty"`
	HideFromPublicListing         bool                               `protobuf:"varint,9,opt,name=hide_from_public_listing,json=hideFromPublicListing,proto3" json:"hide_from_public_listing,omitempty"`
	DefaultUserRoles              []*DefaultUserRole                 `protobuf:"bytes,11,rep,name=default_user_roles,json=defaultUserRoles,proto3" json:"default_user_roles,omitempty"`
	AwayKickMinutes               float32                            `protobuf:"fixed32,12,opt,name=away_kick_minutes,json=awayKickMinutes,proto3" json:"away_kick_minutes,omitempty"`
	IdleRestartIntervalSeconds    int32                              `protobuf:"varint,13,opt,name=idle_restart_interval_seconds,json=idleRestartIntervalSeconds,proto3" json:"idle_restart_interval_seconds,omitempty"`
	SaveOnExit                    bool                               `protobuf:"varint,14,opt,name=save_on_exit,json=saveOnExit,proto3" json:"save_on_exit,omitempty"`
	AutoSaveIntervalSeconds       int32                              `protobuf:"varint,15,opt,name=auto_save_interval_seconds,json=autoSaveIntervalSeconds,proto3" json:"auto_save_interval_seconds,omitempty"`
	AutoSleep                     bool                               `protobuf:"varint,16,opt,name=auto_sleep,json=autoSleep,proto3" json:"auto_sleep,omitempty"`
	InviteRequestHandlerUsernames []string                           `protobuf:"bytes,17,rep,name=invite_request_handler_usernames,json=inviteRequestHandlerUsernames,proto3" json:"invite_request_handler_usernames,omitempty"`
	ForcePort                     uint32                             `protobuf:"varint,18,opt,name=force_port,json=forcePort,proto3" json:"force_port,omitempty"`
	ParentSessionIds              []string                           `protobuf:"bytes,19,rep,name=parent_session_ids,json=parentSessionIds,proto3" json:"parent_session_ids,omitempty"`
	AutoRecover                   bool                               `protobuf:"varint,20,opt,name=auto_recover,json=autoRecover,proto3" json:"auto_recover,omitempty"`
	ForcedRestartIntervalSeconds  int32                              `protobuf:"varint,21,opt,name=forced_restart_interval_seconds,json=forcedRestartIntervalSeconds,proto3" json:"forced_restart_interval_seconds,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *WorldStartupParameters) Reset() {
	*x = WorldStartupParameters{}
	mi := &file_headless_v1_headless_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldStartupParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldStartupParameters) ProtoMessage() {}

func (x *WorldStartupParameters) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldStartupParameters.ProtoReflect.Descriptor instead.
func (*WorldStartupParameters) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{48}
}

func (x *WorldStartupParameters) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *WorldStartupParameters) GetCustomSessionId() string {
	if x != nil && x.CustomSessionId != nil {
		return *x.CustomSessionId
	}
	return ""
}

func (x *WorldStartupParameters) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *WorldStartupParameters) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *WorldStartupParameters) GetMaxUsers() int32 {
	if x != nil && x.MaxUsers != nil {
		return *x.MaxUsers
	}
	return 0
}

func (x *WorldStartupParameters) GetAccessLevel() AccessLevel {
	if x != nil {
		return x.AccessLevel
	}
	return AccessLevel_ACCESS_LEVEL_UNSPECIFIED
}

func (x *WorldStartupParameters) GetLoadWorld() isWorldStartupParameters_LoadWorld {
	if x != nil {
		return x.LoadWorld
	}
	return nil
}

func (x *WorldStartupParameters) GetLoadWorldUrl() string {
	if x != nil {
		if x, ok := x.LoadWorld.(*WorldStartupParameters_LoadWorldUrl); ok {
			return x.LoadWorldUrl
		}
	}
	return ""
}

func (x *WorldStartupParameters) GetLoadWorldPresetName() string {
	if x != nil {
		if x, ok := x.LoadWorld.(*WorldStartupParameters_LoadWorldPresetName); ok {
			return x.LoadWorldPresetName
		}
	}
	return ""
}

func (x *WorldStartupParameters) GetAutoInviteUsernames() []string {
	if x != nil {
		return x.AutoInviteUsernames
	}
	return nil
}

func (x *WorldStartupParameters) GetHideFromPublicListing() bool {
	if x != nil {
		return x.HideFromPublicListing
	}
	return false
}

func (x *WorldStartupParameters) GetDefaultUserRoles() []*DefaultUserRole {
	if x != nil {
		return x.DefaultUserRoles
	}
	return nil
}

func (x *WorldStartupParameters) GetAwayKickMinutes() float32 {
	if x != nil {
		return x.AwayKickMinutes
	}
	return 0
}

func (x *WorldStartupParameters) GetIdleRestartIntervalSeconds() int32 {
	if x != nil {
		return x.IdleRestartIntervalSeconds
	}
	return 0
}

func (x *WorldStartupParameters) GetSaveOnExit() bool {
	if x != nil {
		return x.SaveOnExit
	}
	return false
}

func (x *WorldStartupParameters) GetAutoSaveIntervalSeconds() int32 {
	if x != nil {
		return x.AutoSaveIntervalSeconds
	}
	return 0
}

func (x *WorldStartupParameters) GetAutoSleep() bool {
	if x != nil {
		return x.AutoSleep
	}
	return false
}

func (x *WorldStartupParameters) GetInviteRequestHandlerUsernames() []string {
	if x != nil {
		return x.InviteRequestHandlerUsernames
	}
	return nil
}

func (x *WorldStartupParameters) GetForcePort() uint32 {
	if x != nil {
		return x.ForcePort
	}
	return 0
}

func (x *WorldStartupParameters) GetParentSessionIds() []string {
	if x != nil {
		return x.ParentSessionIds
	}
	return nil
}

func (x *WorldStartupParameters) GetAutoRecover() bool {
	if x != nil {
		return x.AutoRecover
	}
	return false
}

func (x *WorldStartupParameters) GetForcedRestartIntervalSeconds() int32 {
	if x != nil {
		return x.ForcedRestartIntervalSeconds
	}
	return 0
}

type isWorldStartupParameters_LoadWorld interface {
	isWorldStartupParameters_LoadWorld()
}

type WorldStartupParameters_LoadWorldUrl struct {
	LoadWorldUrl string `protobuf:"bytes,6,opt,name=load_world_url,json=loadWorldUrl,proto3,oneof"`
}

type WorldStartupParameters_LoadWorldPresetName struct {
	LoadWorldPresetName string `protobuf:"bytes,7,opt,name=load_world_preset_name,json=loadWorldPresetName,proto3,oneof"`
}

func (*WorldStartupParameters_LoadWorldUrl) isWorldStartupParameters_LoadWorld() {}

func (*WorldStartupParameters_LoadWorldPresetName) isWorldStartupParameters_LoadWorld() {}

type ContactChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          ContactChatMessageType `protobuf:"varint,2,opt,name=type,proto3,enum=headless.v1.ContactChatMessageType" json:"type,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	SendTime      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	ReadTime      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=read_time,json=readTime,proto3,oneof" json:"read_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContactChatMessage) Reset() {
	*x = ContactChatMessage{}
	mi := &file_headless_v1_headless_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContactChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactChatMessage) ProtoMessage() {}

func (x *ContactChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactChatMessage.ProtoReflect.Descriptor instead.
func (*ContactChatMessage) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{49}
}

func (x *ContactChatMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContactChatMessage) GetType() ContactChatMessageType {
	if x != nil {
		return x.Type
	}
	return ContactChatMessageType_CONTACT_CHAT_MESSAGE_TYPE_UNSPECIFIED
}

func (x *ContactChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ContactChatMessage) GetSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SendTime
	}
	return nil
}

func (x *ContactChatMessage) GetReadTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadTime
	}
	return nil
}

var File_headless_v1_headless_proto protoreflect.FileDescriptor

const file_headless_v1_headless_proto_rawDesc = "" +
	"\n" +
	"\x1aheadless/v1/headless.proto\x12\vheadless.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"+\n" +
	"\x13ListContactsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\"C\n" +
	"\x14ListContactsResponse\x12+\n" +
	"\x05users\x18\x01 \x03(\v2\x15.headless.v1.UserInfoR\x05users\"J\n" +
	"\x19GetContactMessagesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"Y\n" +
	"\x1aGetContactMessagesResponse\x12;\n" +
	"\bmessages\x18\x01 \x03(\v2\x1f.headless.v1.ContactChatMessageR\bmessages\"N\n" +
	"\x19SendContactMessageRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x1c\n" +
	"\x1aSendContactMessageResponse\"8\n" +
	"\x1bAcceptFriendRequestsRequest\x12\x19\n" +
	"\buser_ids\x18\x01 \x03(\tR\auserIds\"\x1e\n" +
	"\x1cAcceptFriendRequestsResponse\"\x1a\n" +
	"\x18GetFriendRequestsRequest\"H\n" +
	"\x19GetFriendRequestsResponse\x12+\n" +
	"\x05users\x18\x01 \x03(\v2\x15.headless.v1.UserInfoR\x05users\"r\n" +
	"\x0fKickUserRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x19\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x12\x1d\n" +
	"\tuser_name\x18\x03 \x01(\tH\x00R\buserNameB\x06\n" +
	"\x04user\"\x12\n" +
	"\x10KickUserResponse\"q\n" +
	"\x0eBanUserRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x19\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x12\x1d\n" +
	"\tuser_name\x18\x03 \x01(\tH\x00R\buserNameB\x06\n" +
	"\x04user\"\x11\n" +
	"\x0fBanUserResponse\"\xa8\x01\n" +
	"\x15SearchUserInfoRequest\x12\x19\n" +
	"\auser_id\x18\x01 \x01(\tH\x00R\x06userId\x12\x1d\n" +
	"\tuser_name\x18\x02 \x01(\tH\x00R\buserName\x12(\n" +
	"\x10only_in_contacts\x18\x03 \x01(\bR\x0eonlyInContacts\x12#\n" +
	"\rpartial_match\x18\x04 \x01(\bR\fpartialMatchB\x06\n" +
	"\x04user\"E\n" +
	"\x16SearchUserInfoResponse\x12+\n" +
	"\x05users\x18\x01 \x03(\v2\x15.headless.v1.UserInfoR\x05users\"\x17\n" +
	"\x15GetAccountInfoRequest\"\xb2\x01\n" +
	"\x16GetAccountInfoResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12.\n" +
	"\x13storage_quota_bytes\x18\x03 \x01(\x03R\x11storageQuotaBytes\x12,\n" +
	"\x12storage_used_bytes\x18\x04 \x01(\x03R\x10storageUsedBytes\")\n" +
	"\x15FetchWorldInfoRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"\xab\x02\n" +
	"\x16FetchWorldInfoResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12#\n" +
	"\rthumbnail_url\x18\x03 \x01(\tR\fthumbnailUrl\x12*\n" +
	"\x11default_max_users\x18\x04 \x01(\x05R\x0fdefaultMaxUsers\x12\x19\n" +
	"\bowner_id\x18\x05 \x01(\tR\aownerId\x12\x1b\n" +
	"\tis_public\x18\x06 \x01(\bR\bisPublic\x12\x1d\n" +
	"\n" +
	"can_modify\x18\a \x01(\bR\tcanModify\x12\x1f\n" +
	"\vis_readonly\x18\b \x01(\bR\n" +
	"isReadonly\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\"\x11\n" +
	"\x0fGetAboutRequest\"^\n" +
	"\x10GetAboutResponse\x12\x1f\n" +
	"\vapp_version\x18\x01 \x01(\tR\n" +
	"appVersion\x12)\n" +
	"\x10resonite_version\x18\x02 \x01(\tR\x0fresoniteVersion\"\x12\n" +
	"\x10GetStatusRequest\"\x92\x01\n" +
	"\x11GetStatusResponse\x12\x10\n" +
	"\x03fps\x18\x01 \x01(\x02R\x03fps\x127\n" +
	"\x18total_engine_update_time\x18\x02 \x01(\x02R\x15totalEngineUpdateTime\x122\n" +
	"\x15syncing_records_count\x18\x03 \x01(\x05R\x13syncingRecordsCount\"\x11\n" +
	"\x0fShutdownRequest\"\x12\n" +
	"\x10ShutdownResponse\"\x15\n" +
	"\x13ListSessionsRequest\"H\n" +
	"\x14ListSessionsResponse\x120\n" +
	"\bsessions\x18\x01 \x03(\v2\x14.headless.v1.SessionR\bsessions\"2\n" +
	"\x11GetSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"D\n" +
	"\x12GetSessionResponse\x12.\n" +
	"\asession\x18\x01 \x01(\v2\x14.headless.v1.SessionR\asession\"X\n" +
	"\x11StartWorldRequest\x12C\n" +
	"\n" +
	"parameters\x18\x01 \x01(\v2#.headless.v1.WorldStartupParametersR\n" +
	"parameters\"Q\n" +
	"\x12StartWorldResponse\x12;\n" +
	"\x0eopened_session\x18\x01 \x01(\v2\x14.headless.v1.SessionR\ropenedSession\"3\n" +
	"\x12StopSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\x15\n" +
	"\x13StopSessionResponse\"8\n" +
	"\x17SaveSessionWorldRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"\x1a\n" +
	"\x18SaveSessionWorldResponse\"t\n" +
	"\x11InviteUserRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x19\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x12\x1d\n" +
	"\tuser_name\x18\x03 \x01(\tH\x00R\buserNameB\x06\n" +
	"\x04user\"\x14\n" +
	"\x12InviteUserResponse\"\x8c\x01\n" +
	"\x15UpdateUserRoleRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x19\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x12\x1d\n" +
	"\tuser_name\x18\x03 \x01(\tH\x00R\buserName\x12\x12\n" +
	"\x04role\x18\x04 \x01(\tR\x04roleB\x06\n" +
	"\x04user\",\n" +
	"\x16UpdateUserRoleResponse\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\"\xa8\x06\n" +
	"\x1eUpdateSessionParametersRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x01R\vdescription\x88\x01\x01\x12 \n" +
	"\tmax_users\x18\x04 \x01(\x05H\x02R\bmaxUsers\x88\x01\x01\x12@\n" +
	"\faccess_level\x18\x05 \x01(\x0e2\x18.headless.v1.AccessLevelH\x03R\vaccessLevel\x88\x01\x01\x12/\n" +
	"\x11away_kick_minutes\x18\x06 \x01(\x02H\x04R\x0fawayKickMinutes\x88\x01\x01\x12F\n" +
	"\x1didle_restart_interval_seconds\x18\a \x01(\x05H\x05R\x1aidleRestartIntervalSeconds\x88\x01\x01\x12%\n" +
	"\fsave_on_exit\x18\b \x01(\bH\x06R\n" +
	"saveOnExit\x88\x01\x01\x12@\n" +
	"\x1aauto_save_interval_seconds\x18\t \x01(\x05H\aR\x17autoSaveIntervalSeconds\x88\x01\x01\x12\"\n" +
	"\n" +
	"auto_sleep\x18\n" +
	" \x01(\bH\bR\tautoSleep\x88\x01\x01\x12<\n" +
	"\x18hide_from_public_listing\x18\v \x01(\bH\tR\x15hideFromPublicListing\x88\x01\x01\x12\x1f\n" +
	"\vupdate_tags\x18\f \x01(\bR\n" +
	"updateTags\x12\x12\n" +
	"\x04tags\x18\r \x03(\tR\x04tagsB\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_descriptionB\f\n" +
	"\n" +
	"_max_usersB\x0f\n" +
	"\r_access_levelB\x14\n" +
	"\x12_away_kick_minutesB \n" +
	"\x1e_idle_restart_interval_secondsB\x0f\n" +
	"\r_save_on_exitB\x1d\n" +
	"\x1b_auto_save_interval_secondsB\r\n" +
	"\v_auto_sleepB\x1b\n" +
	"\x19_hide_from_public_listing\"!\n" +
	"\x1fUpdateSessionParametersResponse\":\n" +
	"\x19ListUsersInSessionRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"N\n" +
	"\x1aListUsersInSessionResponse\x120\n" +
	"\x05users\x18\x01 \x03(\v2\x1a.headless.v1.UserInSessionR\x05users\"f\n" +
	"\rUserInSession\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04role\x18\x03 \x01(\tR\x04role\x12\x1d\n" +
	"\n" +
	"is_present\x18\x04 \x01(\bR\tisPresent\"I\n" +
	"\bUserInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x19\n" +
	"\bicon_url\x18\x03 \x01(\tR\aiconUrl\"\x94\a\n" +
	"\aSession\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12;\n" +
	"\faccess_level\x18\x04 \x01(\x0e2\x18.headless.v1.AccessLevelR\vaccessLevel\x12\x1f\n" +
	"\vusers_count\x18\a \x01(\x05R\n" +
	"usersCount\x12\x1b\n" +
	"\tmax_users\x18\b \x01(\x05R\bmaxUsers\x12(\n" +
	"\rthumbnail_url\x18\x05 \x01(\tH\x00R\fthumbnailUrl\x88\x01\x01\x12R\n" +
	"\x12startup_parameters\x18\x06 \x01(\v2#.headless.v1.WorldStartupParametersR\x11startupParameters\x12\x1f\n" +
	"\vsession_url\x18\t \x01(\tR\n" +
	"sessionUrl\x12*\n" +
	"\x0ftime_running_ms\x18\n" +
	" \x01(\x05B\x02\x18\x01R\rtimeRunningMs\x12*\n" +
	"\x11away_kick_minutes\x18\v \x01(\x02R\x0fawayKickMinutes\x12A\n" +
	"\x1didle_restart_interval_seconds\x18\f \x01(\x05R\x1aidleRestartIntervalSeconds\x12 \n" +
	"\fsave_on_exit\x18\r \x01(\bR\n" +
	"saveOnExit\x12;\n" +
	"\x1aauto_save_interval_seconds\x18\x0e \x01(\x05R\x17autoSaveIntervalSeconds\x12\x1d\n" +
	"\n" +
	"auto_sleep\x18\x0f \x01(\bR\tautoSleep\x127\n" +
	"\x18hide_from_public_listing\x18\x10 \x01(\bR\x15hideFromPublicListing\x12\x12\n" +
	"\x04tags\x18\x11 \x03(\tR\x04tags\x12>\n" +
	"\rlast_saved_at\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\vlastSavedAt\x12\x19\n" +
	"\bcan_save\x18\x13 \x01(\bR\acanSave\x12\x1b\n" +
	"\tworld_url\x18\x14 \x01(\tR\bworldUrl\x129\n" +
	"\n" +
	"started_at\x18\x15 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAtB\x10\n" +
	"\x0e_thumbnail_url\"B\n" +
	"\x0fDefaultUserRole\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\"\xcc\b\n" +
	"\x16WorldStartupParameters\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x01R\x04name\x88\x01\x01\x12/\n" +
	"\x11custom_session_id\x18\x02 \x01(\tH\x02R\x0fcustomSessionId\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x03R\vdescription\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\n" +
	" \x03(\tR\x04tags\x12 \n" +
	"\tmax_users\x18\x04 \x01(\x05H\x04R\bmaxUsers\x88\x01\x01\x12;\n" +
	"\faccess_level\x18\x05 \x01(\x0e2\x18.headless.v1.AccessLevelR\vaccessLevel\x12&\n" +
	"\x0eload_world_url\x18\x06 \x01(\tH\x00R\floadWorldUrl\x125\n" +
	"\x16load_world_preset_name\x18\a \x01(\tH\x00R\x13loadWorldPresetName\x122\n" +
	"\x15auto_invite_usernames\x18\b \x03(\tR\x13autoInviteUsernames\x127\n" +
	"\x18hide_from_public_listing\x18\t \x01(\bR\x15hideFromPublicListing\x12J\n" +
	"\x12default_user_roles\x18\v \x03(\v2\x1c.headless.v1.DefaultUserRoleR\x10defaultUserRoles\x12*\n" +
	"\x11away_kick_minutes\x18\f \x01(\x02R\x0fawayKickMinutes\x12A\n" +
	"\x1didle_restart_interval_seconds\x18\r \x01(\x05R\x1aidleRestartIntervalSeconds\x12 \n" +
	"\fsave_on_exit\x18\x0e \x01(\bR\n" +
	"saveOnExit\x12;\n" +
	"\x1aauto_save_interval_seconds\x18\x0f \x01(\x05R\x17autoSaveIntervalSeconds\x12\x1d\n" +
	"\n" +
	"auto_sleep\x18\x10 \x01(\bR\tautoSleep\x12G\n" +
	" invite_request_handler_usernames\x18\x11 \x03(\tR\x1dinviteRequestHandlerUsernames\x12\x1d\n" +
	"\n" +
	"force_port\x18\x12 \x01(\rR\tforcePort\x12,\n" +
	"\x12parent_session_ids\x18\x13 \x03(\tR\x10parentSessionIds\x12!\n" +
	"\fauto_recover\x18\x14 \x01(\bR\vautoRecover\x12E\n" +
	"\x1fforced_restart_interval_seconds\x18\x15 \x01(\x05R\x1cforcedRestartIntervalSecondsB\f\n" +
	"\n" +
	"load_worldB\a\n" +
	"\x05_nameB\x14\n" +
	"\x12_custom_session_idB\x0e\n" +
	"\f_descriptionB\f\n" +
	"\n" +
	"_max_users\"\xfc\x01\n" +
	"\x12ContactChatMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x127\n" +
	"\x04type\x18\x02 \x01(\x0e2#.headless.v1.ContactChatMessageTypeR\x04type\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x127\n" +
	"\tsend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bsendTime\x12<\n" +
	"\tread_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\breadTime\x88\x01\x01B\f\n" +
	"\n" +
	"_read_time*\xd2\x01\n" +
	"\vAccessLevel\x12\x1c\n" +
	"\x18ACCESS_LEVEL_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14ACCESS_LEVEL_PRIVATE\x10\x01\x12\x14\n" +
	"\x10ACCESS_LEVEL_LAN\x10\x02\x12\x19\n" +
	"\x15ACCESS_LEVEL_CONTACTS\x10\x03\x12\x1e\n" +
	"\x1aACCESS_LEVEL_CONTACTS_PLUS\x10\x04\x12!\n" +
	"\x1dACCESS_LEVEL_REGISTERED_USERS\x10\x05\x12\x17\n" +
	"\x13ACCESS_LEVEL_ANYONE\x10\x06*\xe0\x01\n" +
	"\x16ContactChatMessageType\x12)\n" +
	"%CONTACT_CHAT_MESSAGE_TYPE_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eCONTACT_CHAT_MESSAGE_TYPE_TEXT\x10\x01\x12$\n" +
	" CONTACT_CHAT_MESSAGE_TYPE_OBJECT\x10\x02\x12#\n" +
	"\x1fCONTACT_CHAT_MESSAGE_TYPE_SOUND\x10\x03\x12,\n" +
	"(CONTACT_CHAT_MESSAGE_TYPE_SESSION_INVITE\x10\x042\xb7\x0f\n" +
	"\x16HeadlessControlService\x12G\n" +
	"\bGetAbout\x12\x1c.headless.v1.GetAboutRequest\x1a\x1d.headless.v1.GetAboutResponse\x12J\n" +
	"\tGetStatus\x12\x1d.headless.v1.GetStatusRequest\x1a\x1e.headless.v1.GetStatusResponse\x12G\n" +
	"\bShutdown\x12\x1c.headless.v1.ShutdownRequest\x1a\x1d.headless.v1.ShutdownResponse\x12S\n" +
	"\fListSessions\x12 .headless.v1.ListSessionsRequest\x1a!.headless.v1.ListSessionsResponse\x12M\n" +
	"\n" +
	"GetSession\x12\x1e.headless.v1.GetSessionRequest\x1a\x1f.headless.v1.GetSessionResponse\x12M\n" +
	"\n" +
	"StartWorld\x12\x1e.headless.v1.StartWorldRequest\x1a\x1f.headless.v1.StartWorldResponse\x12P\n" +
	"\vStopSession\x12\x1f.headless.v1.StopSessionRequest\x1a .headless.v1.StopSessionResponse\x12_\n" +
	"\x10SaveSessionWorld\x12$.headless.v1.SaveSessionWorldRequest\x1a%.headless.v1.SaveSessionWorldResponse\x12M\n" +
	"\n" +
	"InviteUser\x12\x1e.headless.v1.InviteUserRequest\x1a\x1f.headless.v1.InviteUserResponse\x12Y\n" +
	"\x0eUpdateUserRole\x12\".headless.v1.UpdateUserRoleRequest\x1a#.headless.v1.UpdateUserRoleResponse\x12t\n" +
	"\x17UpdateSessionParameters\x12+.headless.v1.UpdateSessionParametersRequest\x1a,.headless.v1.UpdateSessionParametersResponse\x12e\n" +
	"\x12ListUsersInSession\x12&.headless.v1.ListUsersInSessionRequest\x1a'.headless.v1.ListUsersInSessionResponse\x12G\n" +
	"\bKickUser\x12\x1c.headless.v1.KickUserRequest\x1a\x1d.headless.v1.KickUserResponse\x12D\n" +
	"\aBanUser\x12\x1b.headless.v1.BanUserRequest\x1a\x1c.headless.v1.BanUserResponse\x12Y\n" +
	"\x0eGetAccountInfo\x12\".headless.v1.GetAccountInfoRequest\x1a#.headless.v1.GetAccountInfoResponse\x12Y\n" +
	"\x0eFetchWorldInfo\x12\".headless.v1.FetchWorldInfoRequest\x1a#.headless.v1.FetchWorldInfoResponse\x12Y\n" +
	"\x0eSearchUserInfo\x12\".headless.v1.SearchUserInfoRequest\x1a#.headless.v1.SearchUserInfoResponse\x12b\n" +
	"\x11GetFriendRequests\x12%.headless.v1.GetFriendRequestsRequest\x1a&.headless.v1.GetFriendRequestsResponse\x12k\n" +
	"\x14AcceptFriendRequests\x12(.headless.v1.AcceptFriendRequestsRequest\x1a).headless.v1.AcceptFriendRequestsResponse\x12S\n" +
	"\fListContacts\x12 .headless.v1.ListContactsRequest\x1a!.headless.v1.ListContactsResponse\x12e\n" +
	"\x12GetContactMessages\x12&.headless.v1.GetContactMessagesRequest\x1a'.headless.v1.GetContactMessagesResponse\x12e\n" +
	"\x12SendContactMessage\x12&.headless.v1.SendContactMessageRequest\x1a'.headless.v1.SendContactMessageResponseB\xc2\x01\n" +
	"\x0fcom.headless.v1B\rHeadlessProtoP\x01ZSgithub.com/hantabaru1014/baru-reso-headless-controller/pbgen/headless/v1;headlessv1\xa2\x02\x03HXX\xaa\x02\vHeadless.V1\xca\x02\vHeadless\\V1\xe2\x02\x17Headless\\V1\\GPBMetadata\xea\x02\fHeadless::V1b\x06proto3"

var (
	file_headless_v1_headless_proto_rawDescOnce sync.Once
	file_headless_v1_headless_proto_rawDescData []byte
)

func file_headless_v1_headless_proto_rawDescGZIP() []byte {
	file_headless_v1_headless_proto_rawDescOnce.Do(func() {
		file_headless_v1_headless_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_headless_v1_headless_proto_rawDesc), len(file_headless_v1_headless_proto_rawDesc)))
	})
	return file_headless_v1_headless_proto_rawDescData
}

var file_headless_v1_headless_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_headless_v1_headless_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_headless_v1_headless_proto_goTypes = []any{
	(AccessLevel)(0),                        // 0: headless.v1.AccessLevel
	(ContactChatMessageType)(0),             // 1: headless.v1.ContactChatMessageType
	(*ListContactsRequest)(nil),             // 2: headless.v1.ListContactsRequest
	(*ListContactsResponse)(nil),            // 3: headless.v1.ListContactsResponse
	(*GetContactMessagesRequest)(nil),       // 4: headless.v1.GetContactMessagesRequest
	(*GetContactMessagesResponse)(nil),      // 5: headless.v1.GetContactMessagesResponse
	(*SendContactMessageRequest)(nil),       // 6: headless.v1.SendContactMessageRequest
	(*SendContactMessageResponse)(nil),      // 7: headless.v1.SendContactMessageResponse
	(*AcceptFriendRequestsRequest)(nil),     // 8: headless.v1.AcceptFriendRequestsRequest
	(*AcceptFriendRequestsResponse)(nil),    // 9: headless.v1.AcceptFriendRequestsResponse
	(*GetFriendRequestsRequest)(nil),        // 10: headless.v1.GetFriendRequestsRequest
	(*GetFriendRequestsResponse)(nil),       // 11: headless.v1.GetFriendRequestsResponse
	(*KickUserRequest)(nil),                 // 12: headless.v1.KickUserRequest
	(*KickUserResponse)(nil),                // 13: headless.v1.KickUserResponse
	(*BanUserRequest)(nil),                  // 14: headless.v1.BanUserRequest
	(*BanUserResponse)(nil),                 // 15: headless.v1.BanUserResponse
	(*SearchUserInfoRequest)(nil),           // 16: headless.v1.SearchUserInfoRequest
	(*SearchUserInfoResponse)(nil),          // 17: headless.v1.SearchUserInfoResponse
	(*GetAccountInfoRequest)(nil),           // 18: headless.v1.GetAccountInfoRequest
	(*GetAccountInfoResponse)(nil),          // 19: headless.v1.GetAccountInfoResponse
	(*FetchWorldInfoRequest)(nil),           // 20: headless.v1.FetchWorldInfoRequest
	(*FetchWorldInfoResponse)(nil),          // 21: headless.v1.FetchWorldInfoResponse
	(*GetAboutRequest)(nil),                 // 22: headless.v1.GetAboutRequest
	(*GetAboutResponse)(nil),                // 23: headless.v1.GetAboutResponse
	(*GetStatusRequest)(nil),                // 24: headless.v1.GetStatusRequest
	(*GetStatusResponse)(nil),               // 25: headless.v1.GetStatusResponse
	(*ShutdownRequest)(nil),                 // 26: headless.v1.ShutdownRequest
	(*ShutdownResponse)(nil),                // 27: headless.v1.ShutdownResponse
	(*ListSessionsRequest)(nil),             // 28: headless.v1.ListSessionsRequest
	(*ListSessionsResponse)(nil),            // 29: headless.v1.ListSessionsResponse
	(*GetSessionRequest)(nil),               // 30: headless.v1.GetSessionRequest
	(*GetSessionResponse)(nil),              // 31: headless.v1.GetSessionResponse
	(*StartWorldRequest)(nil),               // 32: headless.v1.StartWorldRequest
	(*StartWorldResponse)(nil),              // 33: headless.v1.StartWorldResponse
	(*StopSessionRequest)(nil),              // 34: headless.v1.StopSessionRequest
	(*StopSessionResponse)(nil),             // 35: headless.v1.StopSessionResponse
	(*SaveSessionWorldRequest)(nil),         // 36: headless.v1.SaveSessionWorldRequest
	(*SaveSessionWorldResponse)(nil),        // 37: headless.v1.SaveSessionWorldResponse
	(*InviteUserRequest)(nil),               // 38: headless.v1.InviteUserRequest
	(*InviteUserResponse)(nil),              // 39: headless.v1.InviteUserResponse
	(*UpdateUserRoleRequest)(nil),           // 40: headless.v1.UpdateUserRoleRequest
	(*UpdateUserRoleResponse)(nil),          // 41: headless.v1.UpdateUserRoleResponse
	(*UpdateSessionParametersRequest)(nil),  // 42: headless.v1.UpdateSessionParametersRequest
	(*UpdateSessionParametersResponse)(nil), // 43: headless.v1.UpdateSessionParametersResponse
	(*ListUsersInSessionRequest)(nil),       // 44: headless.v1.ListUsersInSessionRequest
	(*ListUsersInSessionResponse)(nil),      // 45: headless.v1.ListUsersInSessionResponse
	(*UserInSession)(nil),                   // 46: headless.v1.UserInSession
	(*UserInfo)(nil),                        // 47: headless.v1.UserInfo
	(*Session)(nil),                         // 48: headless.v1.Session
	(*DefaultUserRole)(nil),                 // 49: headless.v1.DefaultUserRole
	(*WorldStartupParameters)(nil),          // 50: headless.v1.WorldStartupParameters
	(*ContactChatMessage)(nil),              // 51: headless.v1.ContactChatMessage
	(*timestamppb.Timestamp)(nil),           // 52: google.protobuf.Timestamp
}
var file_headless_v1_headless_proto_depIdxs = []int32{
	47, // 0: headless.v1.ListContactsResponse.users:type_name -> headless.v1.UserInfo
	51, // 1: headless.v1.GetContactMessagesResponse.messages:type_name -> headless.v1.ContactChatMessage
	47, // 2: headless.v1.GetFriendRequestsResponse.users:type_name -> headless.v1.UserInfo
	47, // 3: headless.v1.SearchUserInfoResponse.users:type_name -> headless.v1.UserInfo
	48, // 4: headless.v1.ListSessionsResponse.sessions:type_name -> headless.v1.Session
	48, // 5: headless.v1.GetSessionResponse.session:type_name -> headless.v1.Session
	50, // 6: headless.v1.StartWorldRequest.parameters:type_name -> headless.v1.WorldStartupParameters
	48, // 7: headless.v1.StartWorldResponse.opened_session:type_name -> headless.v1.Session
	0,  // 8: headless.v1.UpdateSessionParametersRequest.access_level:type_name -> headless.v1.AccessLevel
	46, // 9: headless.v1.ListUsersInSessionResponse.users:type_name -> headless.v1.UserInSession
	0,  // 10: headless.v1.Session.access_level:type_name -> headless.v1.AccessLevel
	50, // 11: headless.v1.Session.startup_parameters:type_name -> headless.v1.WorldStartupParameters
	52, // 12: headless.v1.Session.last_saved_at:type_name -> google.protobuf.Timestamp
	52, // 13: headless.v1.Session.started_at:type_name -> google.protobuf.Timestamp
	0,  // 14: headless.v1.WorldStartupParameters.access_level:type_name -> headless.v1.AccessLevel
	49, // 15: headless.v1.WorldStartupParameters.default_user_roles:type_name -> headless.v1.DefaultUserRole
	1,  // 16: headless.v1.ContactChatMessage.type:type_name -> headless.v1.ContactChatMessageType
	52, // 17: headless.v1.ContactChatMessage.send_time:type_name -> google.protobuf.Timestamp
	52, // 18: headless.v1.ContactChatMessage.read_time:type_name -> google.protobuf.Timestamp
	22, // 19: headless.v1.HeadlessControlService.GetAbout:input_type -> headless.v1.GetAboutRequest
	24, // 20: headless.v1.HeadlessControlService.GetStatus:input_type -> headless.v1.GetStatusRequest
	26, // 21: headless.v1.HeadlessControlService.Shutdown:input_type -> headless.v1.ShutdownRequest
	28, // 22: headless.v1.HeadlessControlService.ListSessions:input_type -> headless.v1.ListSessionsRequest
	30, // 23: headless.v1.HeadlessControlService.GetSession:input_type -> headless.v1.GetSessionRequest
	32, // 24: headless.v1.HeadlessControlService.StartWorld:input_type -> headless.v1.StartWorldRequest
	34, // 25: headless.v1.HeadlessControlService.StopSession:input_type -> headless.v1.StopSessionRequest
	36, // 26: headless.v1.HeadlessControlService.SaveSessionWorld:input_type -> headless.v1.SaveSessionWorldRequest
	38, // 27: headless.v1.HeadlessControlService.InviteUser:input_type -> headless.v1.InviteUserRequest
	40, // 28: headless.v1.HeadlessControlService.UpdateUserRole:input_type -> headless.v1.UpdateUserRoleRequest
	42, // 29: headless.v1.HeadlessControlService.UpdateSessionParameters:input_type -> headless.v1.UpdateSessionParametersRequest
	44, // 30: headless.v1.HeadlessControlService.ListUsersInSession:input_type -> headless.v1.ListUsersInSessionRequest
	12, // 31: headless.v1.HeadlessControlService.KickUser:input_type -> headless.v1.KickUserRequest
	14, // 32: headless.v1.HeadlessControlService.BanUser:input_type -> headless.v1.BanUserRequest
	18, // 33: headless.v1.HeadlessControlService.GetAccountInfo:input_type -> headless.v1.GetAccountInfoRequest
	20, // 34: headless.v1.HeadlessControlService.FetchWorldInfo:input_type -> headless.v1.FetchWorldInfoRequest
	16, // 35: headless.v1.HeadlessControlService.SearchUserInfo:input_type -> headless.v1.SearchUserInfoRequest
	10, // 36: headless.v1.HeadlessControlService.GetFriendRequests:input_type -> headless.v1.GetFriendRequestsRequest
	8,  // 37: headless.v1.HeadlessControlService.AcceptFriendRequests:input_type -> headless.v1.AcceptFriendRequestsRequest
	2,  // 38: headless.v1.HeadlessControlService.ListContacts:input_type -> headless.v1.ListContactsRequest
	4,  // 39: headless.v1.HeadlessControlService.GetContactMessages:input_type -> headless.v1.GetContactMessagesRequest
	6,  // 40: headless.v1.HeadlessControlService.SendContactMessage:input_type -> headless.v1.SendContactMessageRequest
	23, // 41: headless.v1.HeadlessControlService.GetAbout:output_type -> headless.v1.GetAboutResponse
	25, // 42: headless.v1.HeadlessControlService.GetStatus:output_type -> headless.v1.GetStatusResponse
	27, // 43: headless.v1.HeadlessControlService.Shutdown:output_type -> headless.v1.ShutdownResponse
	29, // 44: headless.v1.HeadlessControlService.ListSessions:output_type -> headless.v1.ListSessionsResponse
	31, // 45: headless.v1.HeadlessControlService.GetSession:output_type -> headless.v1.GetSessionResponse
	33, // 46: headless.v1.HeadlessControlService.StartWorld:output_type -> headless.v1.StartWorldResponse
	35, // 47: headless.v1.HeadlessControlService.StopSession:output_type -> headless.v1.StopSessionResponse
	37, // 48: headless.v1.HeadlessControlService.SaveSessionWorld:output_type -> headless.v1.SaveSessionWorldResponse
	39, // 49: headless.v1.HeadlessControlService.InviteUser:output_type -> headless.v1.InviteUserResponse
	41, // 50: headless.v1.HeadlessControlService.UpdateUserRole:output_type -> headless.v1.UpdateUserRoleResponse
	43, // 51: headless.v1.HeadlessControlService.UpdateSessionParameters:output_type -> headless.v1.UpdateSessionParametersResponse
	45, // 52: headless.v1.HeadlessControlService.ListUsersInSession:output_type -> headless.v1.ListUsersInSessionResponse
	13, // 53: headless.v1.HeadlessControlService.KickUser:output_type -> headless.v1.KickUserResponse
	15, // 54: headless.v1.HeadlessControlService.BanUser:output_type -> headless.v1.BanUserResponse
	19, // 55: headless.v1.HeadlessControlService.GetAccountInfo:output_type -> headless.v1.GetAccountInfoResponse
	21, // 56: headless.v1.HeadlessControlService.FetchWorldInfo:output_type -> headless.v1.FetchWorldInfoResponse
	17, // 57: headless.v1.HeadlessControlService.SearchUserInfo:output_type -> headless.v1.SearchUserInfoResponse
	11, // 58: headless.v1.HeadlessControlService.GetFriendRequests:output_type -> headless.v1.GetFriendRequestsResponse
	9,  // 59: headless.v1.HeadlessControlService.AcceptFriendRequests:output_type -> headless.v1.AcceptFriendRequestsResponse
	3,  // 60: headless.v1.HeadlessControlService.ListContacts:output_type -> headless.v1.ListContactsResponse
	5,  // 61: headless.v1.HeadlessControlService.GetContactMessages:output_type -> headless.v1.GetContactMessagesResponse
	7,  // 62: headless.v1.HeadlessControlService.SendContactMessage:output_type -> headless.v1.SendContactMessageResponse
	41, // [41:63] is the sub-list for method output_type
	19, // [19:41] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_headless_v1_headless_proto_init() }
func file_headless_v1_headless_proto_init() {
	if File_headless_v1_headless_proto != nil {
		return
	}
	file_headless_v1_headless_proto_msgTypes[10].OneofWrappers = []any{
		(*KickUserRequest_UserId)(nil),
		(*KickUserRequest_UserName)(nil),
	}
	file_headless_v1_headless_proto_msgTypes[12].OneofWrappers = []any{
		(*BanUserRequest_UserId)(nil),
		(*BanUserRequest_UserName)(nil),
	}
	file_headless_v1_headless_proto_msgTypes[14].OneofWrappers = []any{
		(*SearchUserInfoRequest_UserId)(nil),
		(*SearchUserInfoRequest_UserName)(nil),
	}
	file_headless_v1_headless_proto_msgTypes[36].OneofWrappers = []any{
		(*InviteUserRequest_UserId)(nil),
		(*InviteUserRequest_UserName)(nil),
	}
	file_headless_v1_headless_proto_msgTypes[38].OneofWrappers = []any{
		(*UpdateUserRoleRequest_UserId)(nil),
		(*UpdateUserRoleRequest_UserName)(nil),
	}
	file_headless_v1_headless_proto_msgTypes[40].OneofWrappers = []any{}
	file_headless_v1_headless_proto_msgTypes[46].OneofWrappers = []any{}
	file_headless_v1_headless_proto_msgTypes[48].OneofWrappers = []any{
		(*WorldStartupParameters_LoadWorldUrl)(nil),
		(*WorldStartupParameters_LoadWorldPresetName)(nil),
	}
	file_headless_v1_headless_proto_msgTypes[49].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_headless_v1_headless_proto_rawDesc), len(file_headless_v1_headless_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_headless_v1_headless_proto_goTypes,
		DependencyIndexes: file_headless_v1_headless_proto_depIdxs,
		EnumInfos:         file_headless_v1_headless_proto_enumTypes,
		MessageInfos:      file_headless_v1_headless_proto_msgTypes,
	}.Build()
	File_headless_v1_headless_proto = out.File
	file_headless_v1_headless_proto_goTypes = nil
	file_headless_v1_headless_proto_depIdxs = nil
}
