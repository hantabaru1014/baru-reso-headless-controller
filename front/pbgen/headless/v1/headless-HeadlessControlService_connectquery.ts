// @generated by protoc-gen-connect-query v2.0.1 with parameter "target=ts"
// @generated from file headless/v1/headless.proto (package headless.v1, syntax proto3)
/* eslint-disable */

import { HeadlessControlService } from "./headless_pb";

/**
 * @generated from rpc headless.v1.HeadlessControlService.GetAbout
 */
export const getAbout = HeadlessControlService.method.getAbout;

/**
 * @generated from rpc headless.v1.HeadlessControlService.GetStatus
 */
export const getStatus = HeadlessControlService.method.getStatus;

/**
 * @generated from rpc headless.v1.HeadlessControlService.Shutdown
 */
export const shutdown = HeadlessControlService.method.shutdown;

/**
 * @generated from rpc headless.v1.HeadlessControlService.ListSessions
 */
export const listSessions = HeadlessControlService.method.listSessions;

/**
 * @generated from rpc headless.v1.HeadlessControlService.GetSession
 */
export const getSession = HeadlessControlService.method.getSession;

/**
 * @generated from rpc headless.v1.HeadlessControlService.StartWorld
 */
export const startWorld = HeadlessControlService.method.startWorld;

/**
 * @generated from rpc headless.v1.HeadlessControlService.StopSession
 */
export const stopSession = HeadlessControlService.method.stopSession;

/**
 * @generated from rpc headless.v1.HeadlessControlService.SaveSessionWorld
 */
export const saveSessionWorld = HeadlessControlService.method.saveSessionWorld;

/**
 * @generated from rpc headless.v1.HeadlessControlService.InviteUser
 */
export const inviteUser = HeadlessControlService.method.inviteUser;

/**
 * @generated from rpc headless.v1.HeadlessControlService.UpdateUserRole
 */
export const updateUserRole = HeadlessControlService.method.updateUserRole;

/**
 * @generated from rpc headless.v1.HeadlessControlService.UpdateSessionParameters
 */
export const updateSessionParameters = HeadlessControlService.method.updateSessionParameters;

/**
 * @generated from rpc headless.v1.HeadlessControlService.ListUsersInSession
 */
export const listUsersInSession = HeadlessControlService.method.listUsersInSession;

/**
 * @generated from rpc headless.v1.HeadlessControlService.KickUser
 */
export const kickUser = HeadlessControlService.method.kickUser;

/**
 * @generated from rpc headless.v1.HeadlessControlService.BanUser
 */
export const banUser = HeadlessControlService.method.banUser;

/**
 * Cloudç³»
 *
 * @generated from rpc headless.v1.HeadlessControlService.GetAccountInfo
 */
export const getAccountInfo = HeadlessControlService.method.getAccountInfo;

/**
 * @generated from rpc headless.v1.HeadlessControlService.FetchWorldInfo
 */
export const fetchWorldInfo = HeadlessControlService.method.fetchWorldInfo;

/**
 * @generated from rpc headless.v1.HeadlessControlService.SearchUserInfo
 */
export const searchUserInfo = HeadlessControlService.method.searchUserInfo;
