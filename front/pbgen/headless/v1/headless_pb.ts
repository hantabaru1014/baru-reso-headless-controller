// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file headless/v1/headless.proto (package headless.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file headless/v1/headless.proto.
 */
export const file_headless_v1_headless: GenFile = /*@__PURE__*/
  fileDesc("ChpoZWFkbGVzcy92MS9oZWFkbGVzcy5wcm90bxILaGVhZGxlc3MudjEiJAoTTGlzdENvbnRhY3RzUmVxdWVzdBINCgVsaW1pdBgBIAEoBSI8ChRMaXN0Q29udGFjdHNSZXNwb25zZRIkCgV1c2VycxgBIAMoCzIVLmhlYWRsZXNzLnYxLlVzZXJJbmZvIjsKGUdldENvbnRhY3RNZXNzYWdlc1JlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRINCgVsaW1pdBgCIAEoBSJPChpHZXRDb250YWN0TWVzc2FnZXNSZXNwb25zZRIxCghtZXNzYWdlcxgBIAMoCzIfLmhlYWRsZXNzLnYxLkNvbnRhY3RDaGF0TWVzc2FnZSI9ChlTZW5kQ29udGFjdE1lc3NhZ2VSZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAkSDwoHbWVzc2FnZRgCIAEoCSIcChpTZW5kQ29udGFjdE1lc3NhZ2VSZXNwb25zZSIvChtBY2NlcHRGcmllbmRSZXF1ZXN0c1JlcXVlc3QSEAoIdXNlcl9pZHMYASADKAkiHgocQWNjZXB0RnJpZW5kUmVxdWVzdHNSZXNwb25zZSIaChhHZXRGcmllbmRSZXF1ZXN0c1JlcXVlc3QiQQoZR2V0RnJpZW5kUmVxdWVzdHNSZXNwb25zZRIkCgV1c2VycxgBIAMoCzIVLmhlYWRsZXNzLnYxLlVzZXJJbmZvIlUKD0tpY2tVc2VyUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEhEKB3VzZXJfaWQYAiABKAlIABITCgl1c2VyX25hbWUYAyABKAlIAEIGCgR1c2VyIhIKEEtpY2tVc2VyUmVzcG9uc2UiVAoOQmFuVXNlclJlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoCRIRCgd1c2VyX2lkGAIgASgJSAASEwoJdXNlcl9uYW1lGAMgASgJSABCBgoEdXNlciIRCg9CYW5Vc2VyUmVzcG9uc2UieAoVU2VhcmNoVXNlckluZm9SZXF1ZXN0EhEKB3VzZXJfaWQYASABKAlIABITCgl1c2VyX25hbWUYAiABKAlIABIYChBvbmx5X2luX2NvbnRhY3RzGAMgASgIEhUKDXBhcnRpYWxfbWF0Y2gYBCABKAhCBgoEdXNlciI+ChZTZWFyY2hVc2VySW5mb1Jlc3BvbnNlEiQKBXVzZXJzGAEgAygLMhUuaGVhZGxlc3MudjEuVXNlckluZm8iFwoVR2V0QWNjb3VudEluZm9SZXF1ZXN0IngKFkdldEFjY291bnRJbmZvUmVzcG9uc2USDwoHdXNlcl9pZBgBIAEoCRIUCgxkaXNwbGF5X25hbWUYAiABKAkSGwoTc3RvcmFnZV9xdW90YV9ieXRlcxgDIAEoAxIaChJzdG9yYWdlX3VzZWRfYnl0ZXMYBCABKAMiJAoVRmV0Y2hXb3JsZEluZm9SZXF1ZXN0EgsKA3VybBgBIAEoCSLJAQoWRmV0Y2hXb3JsZEluZm9SZXNwb25zZRIMCgRuYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEhUKDXRodW1ibmFpbF91cmwYAyABKAkSGQoRZGVmYXVsdF9tYXhfdXNlcnMYBCABKAUSEAoIb3duZXJfaWQYBSABKAkSEQoJaXNfcHVibGljGAYgASgIEhIKCmNhbl9tb2RpZnkYByABKAgSEwoLaXNfcmVhZG9ubHkYCCABKAgSDAoEdGFncxgJIAMoCSIRCg9HZXRBYm91dFJlcXVlc3QiQQoQR2V0QWJvdXRSZXNwb25zZRITCgthcHBfdmVyc2lvbhgBIAEoCRIYChByZXNvbml0ZV92ZXJzaW9uGAIgASgJIhIKEEdldFN0YXR1c1JlcXVlc3QiYQoRR2V0U3RhdHVzUmVzcG9uc2USCwoDZnBzGAEgASgCEiAKGHRvdGFsX2VuZ2luZV91cGRhdGVfdGltZRgCIAEoAhIdChVzeW5jaW5nX3JlY29yZHNfY291bnQYAyABKAUiEQoPU2h1dGRvd25SZXF1ZXN0IhIKEFNodXRkb3duUmVzcG9uc2UiFQoTTGlzdFNlc3Npb25zUmVxdWVzdCI+ChRMaXN0U2Vzc2lvbnNSZXNwb25zZRImCghzZXNzaW9ucxgBIAMoCzIULmhlYWRsZXNzLnYxLlNlc3Npb24iJwoRR2V0U2Vzc2lvblJlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoCSI7ChJHZXRTZXNzaW9uUmVzcG9uc2USJQoHc2Vzc2lvbhgBIAEoCzIULmhlYWRsZXNzLnYxLlNlc3Npb24iTAoRU3RhcnRXb3JsZFJlcXVlc3QSNwoKcGFyYW1ldGVycxgBIAEoCzIjLmhlYWRsZXNzLnYxLldvcmxkU3RhcnR1cFBhcmFtZXRlcnMiQgoSU3RhcnRXb3JsZFJlc3BvbnNlEiwKDm9wZW5lZF9zZXNzaW9uGAEgASgLMhQuaGVhZGxlc3MudjEuU2Vzc2lvbiIoChJTdG9wU2Vzc2lvblJlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoCSIVChNTdG9wU2Vzc2lvblJlc3BvbnNlIi0KF1NhdmVTZXNzaW9uV29ybGRSZXF1ZXN0EhIKCnNlc3Npb25faWQYASABKAkiGgoYU2F2ZVNlc3Npb25Xb3JsZFJlc3BvbnNlIlcKEUludml0ZVVzZXJSZXF1ZXN0EhIKCnNlc3Npb25faWQYASABKAkSEQoHdXNlcl9pZBgCIAEoCUgAEhMKCXVzZXJfbmFtZRgDIAEoCUgAQgYKBHVzZXIiFAoSSW52aXRlVXNlclJlc3BvbnNlImkKFVVwZGF0ZVVzZXJSb2xlUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEhEKB3VzZXJfaWQYAiABKAlIABITCgl1c2VyX25hbWUYAyABKAlIABIMCgRyb2xlGAQgASgJQgYKBHVzZXIiJgoWVXBkYXRlVXNlclJvbGVSZXNwb25zZRIMCgRyb2xlGAEgASgJIu0ECh5VcGRhdGVTZXNzaW9uUGFyYW1ldGVyc1JlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoCRIRCgRuYW1lGAIgASgJSACIAQESGAoLZGVzY3JpcHRpb24YAyABKAlIAYgBARIWCgltYXhfdXNlcnMYBCABKAVIAogBARIzCgxhY2Nlc3NfbGV2ZWwYBSABKA4yGC5oZWFkbGVzcy52MS5BY2Nlc3NMZXZlbEgDiAEBEh4KEWF3YXlfa2lja19taW51dGVzGAYgASgCSASIAQESKgodaWRsZV9yZXN0YXJ0X2ludGVydmFsX3NlY29uZHMYByABKAVIBYgBARIZCgxzYXZlX29uX2V4aXQYCCABKAhIBogBARInChphdXRvX3NhdmVfaW50ZXJ2YWxfc2Vjb25kcxgJIAEoBUgHiAEBEhcKCmF1dG9fc2xlZXAYCiABKAhICIgBARIlChhoaWRlX2Zyb21fcHVibGljX2xpc3RpbmcYCyABKAhICYgBARITCgt1cGRhdGVfdGFncxgMIAEoCBIMCgR0YWdzGA0gAygJQgcKBV9uYW1lQg4KDF9kZXNjcmlwdGlvbkIMCgpfbWF4X3VzZXJzQg8KDV9hY2Nlc3NfbGV2ZWxCFAoSX2F3YXlfa2lja19taW51dGVzQiAKHl9pZGxlX3Jlc3RhcnRfaW50ZXJ2YWxfc2Vjb25kc0IPCg1fc2F2ZV9vbl9leGl0Qh0KG19hdXRvX3NhdmVfaW50ZXJ2YWxfc2Vjb25kc0INCgtfYXV0b19zbGVlcEIbChlfaGlkZV9mcm9tX3B1YmxpY19saXN0aW5nIiEKH1VwZGF0ZVNlc3Npb25QYXJhbWV0ZXJzUmVzcG9uc2UiLwoZTGlzdFVzZXJzSW5TZXNzaW9uUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJIkcKGkxpc3RVc2Vyc0luU2Vzc2lvblJlc3BvbnNlEikKBXVzZXJzGAEgAygLMhouaGVhZGxlc3MudjEuVXNlckluU2Vzc2lvbiJLCg1Vc2VySW5TZXNzaW9uEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDAoEcm9sZRgDIAEoCRISCgppc19wcmVzZW50GAQgASgIIjYKCFVzZXJJbmZvEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSEAoIaWNvbl91cmwYAyABKAki+QQKB1Nlc3Npb24SCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCRIuCgxhY2Nlc3NfbGV2ZWwYBCABKA4yGC5oZWFkbGVzcy52MS5BY2Nlc3NMZXZlbBITCgt1c2Vyc19jb3VudBgHIAEoBRIRCgltYXhfdXNlcnMYCCABKAUSGgoNdGh1bWJuYWlsX3VybBgFIAEoCUgAiAEBEj8KEnN0YXJ0dXBfcGFyYW1ldGVycxgGIAEoCzIjLmhlYWRsZXNzLnYxLldvcmxkU3RhcnR1cFBhcmFtZXRlcnMSEwoLc2Vzc2lvbl91cmwYCSABKAkSGwoPdGltZV9ydW5uaW5nX21zGAogASgFQgIYARIZChFhd2F5X2tpY2tfbWludXRlcxgLIAEoAhIlCh1pZGxlX3Jlc3RhcnRfaW50ZXJ2YWxfc2Vjb25kcxgMIAEoBRIUCgxzYXZlX29uX2V4aXQYDSABKAgSIgoaYXV0b19zYXZlX2ludGVydmFsX3NlY29uZHMYDiABKAUSEgoKYXV0b19zbGVlcBgPIAEoCBIgChhoaWRlX2Zyb21fcHVibGljX2xpc3RpbmcYECABKAgSDAoEdGFncxgRIAMoCRIxCg1sYXN0X3NhdmVkX2F0GBIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIQCghjYW5fc2F2ZRgTIAEoCBIRCgl3b3JsZF91cmwYFCABKAkSLgoKc3RhcnRlZF9hdBgVIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCEAoOX3RodW1ibmFpbF91cmwiMgoPRGVmYXVsdFVzZXJSb2xlEgwKBHJvbGUYASABKAkSEQoJdXNlcl9uYW1lGAIgASgJIuYFChZXb3JsZFN0YXJ0dXBQYXJhbWV0ZXJzEhEKBG5hbWUYASABKAlIAYgBARIeChFjdXN0b21fc2Vzc2lvbl9pZBgCIAEoCUgCiAEBEhgKC2Rlc2NyaXB0aW9uGAMgASgJSAOIAQESDAoEdGFncxgKIAMoCRIWCgltYXhfdXNlcnMYBCABKAVIBIgBARIuCgxhY2Nlc3NfbGV2ZWwYBSABKA4yGC5oZWFkbGVzcy52MS5BY2Nlc3NMZXZlbBIYCg5sb2FkX3dvcmxkX3VybBgGIAEoCUgAEiAKFmxvYWRfd29ybGRfcHJlc2V0X25hbWUYByABKAlIABIdChVhdXRvX2ludml0ZV91c2VybmFtZXMYCCADKAkSIAoYaGlkZV9mcm9tX3B1YmxpY19saXN0aW5nGAkgASgIEjgKEmRlZmF1bHRfdXNlcl9yb2xlcxgLIAMoCzIcLmhlYWRsZXNzLnYxLkRlZmF1bHRVc2VyUm9sZRIZChFhd2F5X2tpY2tfbWludXRlcxgMIAEoAhIlCh1pZGxlX3Jlc3RhcnRfaW50ZXJ2YWxfc2Vjb25kcxgNIAEoBRIUCgxzYXZlX29uX2V4aXQYDiABKAgSIgoaYXV0b19zYXZlX2ludGVydmFsX3NlY29uZHMYDyABKAUSEgoKYXV0b19zbGVlcBgQIAEoCBIoCiBpbnZpdGVfcmVxdWVzdF9oYW5kbGVyX3VzZXJuYW1lcxgRIAMoCRISCgpmb3JjZV9wb3J0GBIgASgNEhoKEnBhcmVudF9zZXNzaW9uX2lkcxgTIAMoCRIUCgxhdXRvX3JlY292ZXIYFCABKAgSJwofZm9yY2VkX3Jlc3RhcnRfaW50ZXJ2YWxfc2Vjb25kcxgVIAEoBUIMCgpsb2FkX3dvcmxkQgcKBV9uYW1lQhQKEl9jdXN0b21fc2Vzc2lvbl9pZEIOCgxfZGVzY3JpcHRpb25CDAoKX21heF91c2VycyLVAQoSQ29udGFjdENoYXRNZXNzYWdlEgoKAmlkGAEgASgJEjEKBHR5cGUYAiABKA4yIy5oZWFkbGVzcy52MS5Db250YWN0Q2hhdE1lc3NhZ2VUeXBlEg8KB2NvbnRlbnQYAyABKAkSLQoJc2VuZF90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIyCglyZWFkX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSACIAQFCDAoKX3JlYWRfdGltZSrSAQoLQWNjZXNzTGV2ZWwSHAoYQUNDRVNTX0xFVkVMX1VOU1BFQ0lGSUVEEAASGAoUQUNDRVNTX0xFVkVMX1BSSVZBVEUQARIUChBBQ0NFU1NfTEVWRUxfTEFOEAISGQoVQUNDRVNTX0xFVkVMX0NPTlRBQ1RTEAMSHgoaQUNDRVNTX0xFVkVMX0NPTlRBQ1RTX1BMVVMQBBIhCh1BQ0NFU1NfTEVWRUxfUkVHSVNURVJFRF9VU0VSUxAFEhcKE0FDQ0VTU19MRVZFTF9BTllPTkUQBirgAQoWQ29udGFjdENoYXRNZXNzYWdlVHlwZRIpCiVDT05UQUNUX0NIQVRfTUVTU0FHRV9UWVBFX1VOU1BFQ0lGSUVEEAASIgoeQ09OVEFDVF9DSEFUX01FU1NBR0VfVFlQRV9URVhUEAESJAogQ09OVEFDVF9DSEFUX01FU1NBR0VfVFlQRV9PQkpFQ1QQAhIjCh9DT05UQUNUX0NIQVRfTUVTU0FHRV9UWVBFX1NPVU5EEAMSLAooQ09OVEFDVF9DSEFUX01FU1NBR0VfVFlQRV9TRVNTSU9OX0lOVklURRAEMrcPChZIZWFkbGVzc0NvbnRyb2xTZXJ2aWNlEkcKCEdldEFib3V0EhwuaGVhZGxlc3MudjEuR2V0QWJvdXRSZXF1ZXN0Gh0uaGVhZGxlc3MudjEuR2V0QWJvdXRSZXNwb25zZRJKCglHZXRTdGF0dXMSHS5oZWFkbGVzcy52MS5HZXRTdGF0dXNSZXF1ZXN0Gh4uaGVhZGxlc3MudjEuR2V0U3RhdHVzUmVzcG9uc2USRwoIU2h1dGRvd24SHC5oZWFkbGVzcy52MS5TaHV0ZG93blJlcXVlc3QaHS5oZWFkbGVzcy52MS5TaHV0ZG93blJlc3BvbnNlElMKDExpc3RTZXNzaW9ucxIgLmhlYWRsZXNzLnYxLkxpc3RTZXNzaW9uc1JlcXVlc3QaIS5oZWFkbGVzcy52MS5MaXN0U2Vzc2lvbnNSZXNwb25zZRJNCgpHZXRTZXNzaW9uEh4uaGVhZGxlc3MudjEuR2V0U2Vzc2lvblJlcXVlc3QaHy5oZWFkbGVzcy52MS5HZXRTZXNzaW9uUmVzcG9uc2USTQoKU3RhcnRXb3JsZBIeLmhlYWRsZXNzLnYxLlN0YXJ0V29ybGRSZXF1ZXN0Gh8uaGVhZGxlc3MudjEuU3RhcnRXb3JsZFJlc3BvbnNlElAKC1N0b3BTZXNzaW9uEh8uaGVhZGxlc3MudjEuU3RvcFNlc3Npb25SZXF1ZXN0GiAuaGVhZGxlc3MudjEuU3RvcFNlc3Npb25SZXNwb25zZRJfChBTYXZlU2Vzc2lvbldvcmxkEiQuaGVhZGxlc3MudjEuU2F2ZVNlc3Npb25Xb3JsZFJlcXVlc3QaJS5oZWFkbGVzcy52MS5TYXZlU2Vzc2lvbldvcmxkUmVzcG9uc2USTQoKSW52aXRlVXNlchIeLmhlYWRsZXNzLnYxLkludml0ZVVzZXJSZXF1ZXN0Gh8uaGVhZGxlc3MudjEuSW52aXRlVXNlclJlc3BvbnNlElkKDlVwZGF0ZVVzZXJSb2xlEiIuaGVhZGxlc3MudjEuVXBkYXRlVXNlclJvbGVSZXF1ZXN0GiMuaGVhZGxlc3MudjEuVXBkYXRlVXNlclJvbGVSZXNwb25zZRJ0ChdVcGRhdGVTZXNzaW9uUGFyYW1ldGVycxIrLmhlYWRsZXNzLnYxLlVwZGF0ZVNlc3Npb25QYXJhbWV0ZXJzUmVxdWVzdBosLmhlYWRsZXNzLnYxLlVwZGF0ZVNlc3Npb25QYXJhbWV0ZXJzUmVzcG9uc2USZQoSTGlzdFVzZXJzSW5TZXNzaW9uEiYuaGVhZGxlc3MudjEuTGlzdFVzZXJzSW5TZXNzaW9uUmVxdWVzdBonLmhlYWRsZXNzLnYxLkxpc3RVc2Vyc0luU2Vzc2lvblJlc3BvbnNlEkcKCEtpY2tVc2VyEhwuaGVhZGxlc3MudjEuS2lja1VzZXJSZXF1ZXN0Gh0uaGVhZGxlc3MudjEuS2lja1VzZXJSZXNwb25zZRJECgdCYW5Vc2VyEhsuaGVhZGxlc3MudjEuQmFuVXNlclJlcXVlc3QaHC5oZWFkbGVzcy52MS5CYW5Vc2VyUmVzcG9uc2USWQoOR2V0QWNjb3VudEluZm8SIi5oZWFkbGVzcy52MS5HZXRBY2NvdW50SW5mb1JlcXVlc3QaIy5oZWFkbGVzcy52MS5HZXRBY2NvdW50SW5mb1Jlc3BvbnNlElkKDkZldGNoV29ybGRJbmZvEiIuaGVhZGxlc3MudjEuRmV0Y2hXb3JsZEluZm9SZXF1ZXN0GiMuaGVhZGxlc3MudjEuRmV0Y2hXb3JsZEluZm9SZXNwb25zZRJZCg5TZWFyY2hVc2VySW5mbxIiLmhlYWRsZXNzLnYxLlNlYXJjaFVzZXJJbmZvUmVxdWVzdBojLmhlYWRsZXNzLnYxLlNlYXJjaFVzZXJJbmZvUmVzcG9uc2USYgoRR2V0RnJpZW5kUmVxdWVzdHMSJS5oZWFkbGVzcy52MS5HZXRGcmllbmRSZXF1ZXN0c1JlcXVlc3QaJi5oZWFkbGVzcy52MS5HZXRGcmllbmRSZXF1ZXN0c1Jlc3BvbnNlEmsKFEFjY2VwdEZyaWVuZFJlcXVlc3RzEiguaGVhZGxlc3MudjEuQWNjZXB0RnJpZW5kUmVxdWVzdHNSZXF1ZXN0GikuaGVhZGxlc3MudjEuQWNjZXB0RnJpZW5kUmVxdWVzdHNSZXNwb25zZRJTCgxMaXN0Q29udGFjdHMSIC5oZWFkbGVzcy52MS5MaXN0Q29udGFjdHNSZXF1ZXN0GiEuaGVhZGxlc3MudjEuTGlzdENvbnRhY3RzUmVzcG9uc2USZQoSR2V0Q29udGFjdE1lc3NhZ2VzEiYuaGVhZGxlc3MudjEuR2V0Q29udGFjdE1lc3NhZ2VzUmVxdWVzdBonLmhlYWRsZXNzLnYxLkdldENvbnRhY3RNZXNzYWdlc1Jlc3BvbnNlEmUKElNlbmRDb250YWN0TWVzc2FnZRImLmhlYWRsZXNzLnYxLlNlbmRDb250YWN0TWVzc2FnZVJlcXVlc3QaJy5oZWFkbGVzcy52MS5TZW5kQ29udGFjdE1lc3NhZ2VSZXNwb25zZULCAQoPY29tLmhlYWRsZXNzLnYxQg1IZWFkbGVzc1Byb3RvUAFaU2dpdGh1Yi5jb20vaGFudGFiYXJ1MTAxNC9iYXJ1LXJlc28taGVhZGxlc3MtY29udHJvbGxlci9wYmdlbi9oZWFkbGVzcy92MTtoZWFkbGVzc3YxogIDSFhYqgILSGVhZGxlc3MuVjHKAgtIZWFkbGVzc1xWMeICF0hlYWRsZXNzXFYxXEdQQk1ldGFkYXRh6gIMSGVhZGxlc3M6OlYxYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * @generated from message headless.v1.ListContactsRequest
 */
export type ListContactsRequest = Message<"headless.v1.ListContactsRequest"> & {
  /**
   * @generated from field: int32 limit = 1;
   */
  limit: number;
};

/**
 * Describes the message headless.v1.ListContactsRequest.
 * Use `create(ListContactsRequestSchema)` to create a new message.
 */
export const ListContactsRequestSchema: GenMessage<ListContactsRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 0);

/**
 * @generated from message headless.v1.ListContactsResponse
 */
export type ListContactsResponse = Message<"headless.v1.ListContactsResponse"> & {
  /**
   * @generated from field: repeated headless.v1.UserInfo users = 1;
   */
  users: UserInfo[];
};

/**
 * Describes the message headless.v1.ListContactsResponse.
 * Use `create(ListContactsResponseSchema)` to create a new message.
 */
export const ListContactsResponseSchema: GenMessage<ListContactsResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 1);

/**
 * @generated from message headless.v1.GetContactMessagesRequest
 */
export type GetContactMessagesRequest = Message<"headless.v1.GetContactMessagesRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: int32 limit = 2;
   */
  limit: number;
};

/**
 * Describes the message headless.v1.GetContactMessagesRequest.
 * Use `create(GetContactMessagesRequestSchema)` to create a new message.
 */
export const GetContactMessagesRequestSchema: GenMessage<GetContactMessagesRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 2);

/**
 * @generated from message headless.v1.GetContactMessagesResponse
 */
export type GetContactMessagesResponse = Message<"headless.v1.GetContactMessagesResponse"> & {
  /**
   * @generated from field: repeated headless.v1.ContactChatMessage messages = 1;
   */
  messages: ContactChatMessage[];
};

/**
 * Describes the message headless.v1.GetContactMessagesResponse.
 * Use `create(GetContactMessagesResponseSchema)` to create a new message.
 */
export const GetContactMessagesResponseSchema: GenMessage<GetContactMessagesResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 3);

/**
 * @generated from message headless.v1.SendContactMessageRequest
 */
export type SendContactMessageRequest = Message<"headless.v1.SendContactMessageRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message headless.v1.SendContactMessageRequest.
 * Use `create(SendContactMessageRequestSchema)` to create a new message.
 */
export const SendContactMessageRequestSchema: GenMessage<SendContactMessageRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 4);

/**
 * @generated from message headless.v1.SendContactMessageResponse
 */
export type SendContactMessageResponse = Message<"headless.v1.SendContactMessageResponse"> & {
};

/**
 * Describes the message headless.v1.SendContactMessageResponse.
 * Use `create(SendContactMessageResponseSchema)` to create a new message.
 */
export const SendContactMessageResponseSchema: GenMessage<SendContactMessageResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 5);

/**
 * @generated from message headless.v1.AcceptFriendRequestsRequest
 */
export type AcceptFriendRequestsRequest = Message<"headless.v1.AcceptFriendRequestsRequest"> & {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];
};

/**
 * Describes the message headless.v1.AcceptFriendRequestsRequest.
 * Use `create(AcceptFriendRequestsRequestSchema)` to create a new message.
 */
export const AcceptFriendRequestsRequestSchema: GenMessage<AcceptFriendRequestsRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 6);

/**
 * @generated from message headless.v1.AcceptFriendRequestsResponse
 */
export type AcceptFriendRequestsResponse = Message<"headless.v1.AcceptFriendRequestsResponse"> & {
};

/**
 * Describes the message headless.v1.AcceptFriendRequestsResponse.
 * Use `create(AcceptFriendRequestsResponseSchema)` to create a new message.
 */
export const AcceptFriendRequestsResponseSchema: GenMessage<AcceptFriendRequestsResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 7);

/**
 * @generated from message headless.v1.GetFriendRequestsRequest
 */
export type GetFriendRequestsRequest = Message<"headless.v1.GetFriendRequestsRequest"> & {
};

/**
 * Describes the message headless.v1.GetFriendRequestsRequest.
 * Use `create(GetFriendRequestsRequestSchema)` to create a new message.
 */
export const GetFriendRequestsRequestSchema: GenMessage<GetFriendRequestsRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 8);

/**
 * @generated from message headless.v1.GetFriendRequestsResponse
 */
export type GetFriendRequestsResponse = Message<"headless.v1.GetFriendRequestsResponse"> & {
  /**
   * @generated from field: repeated headless.v1.UserInfo users = 1;
   */
  users: UserInfo[];
};

/**
 * Describes the message headless.v1.GetFriendRequestsResponse.
 * Use `create(GetFriendRequestsResponseSchema)` to create a new message.
 */
export const GetFriendRequestsResponseSchema: GenMessage<GetFriendRequestsResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 9);

/**
 * @generated from message headless.v1.KickUserRequest
 */
export type KickUserRequest = Message<"headless.v1.KickUserRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from oneof headless.v1.KickUserRequest.user
   */
  user: {
    /**
     * @generated from field: string user_id = 2;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string user_name = 3;
     */
    value: string;
    case: "userName";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message headless.v1.KickUserRequest.
 * Use `create(KickUserRequestSchema)` to create a new message.
 */
export const KickUserRequestSchema: GenMessage<KickUserRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 10);

/**
 * @generated from message headless.v1.KickUserResponse
 */
export type KickUserResponse = Message<"headless.v1.KickUserResponse"> & {
};

/**
 * Describes the message headless.v1.KickUserResponse.
 * Use `create(KickUserResponseSchema)` to create a new message.
 */
export const KickUserResponseSchema: GenMessage<KickUserResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 11);

/**
 * @generated from message headless.v1.BanUserRequest
 */
export type BanUserRequest = Message<"headless.v1.BanUserRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from oneof headless.v1.BanUserRequest.user
   */
  user: {
    /**
     * @generated from field: string user_id = 2;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string user_name = 3;
     */
    value: string;
    case: "userName";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message headless.v1.BanUserRequest.
 * Use `create(BanUserRequestSchema)` to create a new message.
 */
export const BanUserRequestSchema: GenMessage<BanUserRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 12);

/**
 * @generated from message headless.v1.BanUserResponse
 */
export type BanUserResponse = Message<"headless.v1.BanUserResponse"> & {
};

/**
 * Describes the message headless.v1.BanUserResponse.
 * Use `create(BanUserResponseSchema)` to create a new message.
 */
export const BanUserResponseSchema: GenMessage<BanUserResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 13);

/**
 * @generated from message headless.v1.SearchUserInfoRequest
 */
export type SearchUserInfoRequest = Message<"headless.v1.SearchUserInfoRequest"> & {
  /**
   * @generated from oneof headless.v1.SearchUserInfoRequest.user
   */
  user: {
    /**
     * @generated from field: string user_id = 1;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string user_name = 2;
     */
    value: string;
    case: "userName";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: bool only_in_contacts = 3;
   */
  onlyInContacts: boolean;

  /**
   * @generated from field: bool partial_match = 4;
   */
  partialMatch: boolean;
};

/**
 * Describes the message headless.v1.SearchUserInfoRequest.
 * Use `create(SearchUserInfoRequestSchema)` to create a new message.
 */
export const SearchUserInfoRequestSchema: GenMessage<SearchUserInfoRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 14);

/**
 * @generated from message headless.v1.SearchUserInfoResponse
 */
export type SearchUserInfoResponse = Message<"headless.v1.SearchUserInfoResponse"> & {
  /**
   * @generated from field: repeated headless.v1.UserInfo users = 1;
   */
  users: UserInfo[];
};

/**
 * Describes the message headless.v1.SearchUserInfoResponse.
 * Use `create(SearchUserInfoResponseSchema)` to create a new message.
 */
export const SearchUserInfoResponseSchema: GenMessage<SearchUserInfoResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 15);

/**
 * @generated from message headless.v1.GetAccountInfoRequest
 */
export type GetAccountInfoRequest = Message<"headless.v1.GetAccountInfoRequest"> & {
};

/**
 * Describes the message headless.v1.GetAccountInfoRequest.
 * Use `create(GetAccountInfoRequestSchema)` to create a new message.
 */
export const GetAccountInfoRequestSchema: GenMessage<GetAccountInfoRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 16);

/**
 * @generated from message headless.v1.GetAccountInfoResponse
 */
export type GetAccountInfoResponse = Message<"headless.v1.GetAccountInfoResponse"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * @generated from field: int64 storage_quota_bytes = 3;
   */
  storageQuotaBytes: bigint;

  /**
   * @generated from field: int64 storage_used_bytes = 4;
   */
  storageUsedBytes: bigint;
};

/**
 * Describes the message headless.v1.GetAccountInfoResponse.
 * Use `create(GetAccountInfoResponseSchema)` to create a new message.
 */
export const GetAccountInfoResponseSchema: GenMessage<GetAccountInfoResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 17);

/**
 * @generated from message headless.v1.FetchWorldInfoRequest
 */
export type FetchWorldInfoRequest = Message<"headless.v1.FetchWorldInfoRequest"> & {
  /**
   * @generated from field: string url = 1;
   */
  url: string;
};

/**
 * Describes the message headless.v1.FetchWorldInfoRequest.
 * Use `create(FetchWorldInfoRequestSchema)` to create a new message.
 */
export const FetchWorldInfoRequestSchema: GenMessage<FetchWorldInfoRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 18);

/**
 * @generated from message headless.v1.FetchWorldInfoResponse
 */
export type FetchWorldInfoResponse = Message<"headless.v1.FetchWorldInfoResponse"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string thumbnail_url = 3;
   */
  thumbnailUrl: string;

  /**
   * @generated from field: int32 default_max_users = 4;
   */
  defaultMaxUsers: number;

  /**
   * @generated from field: string owner_id = 5;
   */
  ownerId: string;

  /**
   * @generated from field: bool is_public = 6;
   */
  isPublic: boolean;

  /**
   * @generated from field: bool can_modify = 7;
   */
  canModify: boolean;

  /**
   * @generated from field: bool is_readonly = 8;
   */
  isReadonly: boolean;

  /**
   * @generated from field: repeated string tags = 9;
   */
  tags: string[];
};

/**
 * Describes the message headless.v1.FetchWorldInfoResponse.
 * Use `create(FetchWorldInfoResponseSchema)` to create a new message.
 */
export const FetchWorldInfoResponseSchema: GenMessage<FetchWorldInfoResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 19);

/**
 * @generated from message headless.v1.GetAboutRequest
 */
export type GetAboutRequest = Message<"headless.v1.GetAboutRequest"> & {
};

/**
 * Describes the message headless.v1.GetAboutRequest.
 * Use `create(GetAboutRequestSchema)` to create a new message.
 */
export const GetAboutRequestSchema: GenMessage<GetAboutRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 20);

/**
 * @generated from message headless.v1.GetAboutResponse
 */
export type GetAboutResponse = Message<"headless.v1.GetAboutResponse"> & {
  /**
   * @generated from field: string app_version = 1;
   */
  appVersion: string;

  /**
   * @generated from field: string resonite_version = 2;
   */
  resoniteVersion: string;
};

/**
 * Describes the message headless.v1.GetAboutResponse.
 * Use `create(GetAboutResponseSchema)` to create a new message.
 */
export const GetAboutResponseSchema: GenMessage<GetAboutResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 21);

/**
 * @generated from message headless.v1.GetStatusRequest
 */
export type GetStatusRequest = Message<"headless.v1.GetStatusRequest"> & {
};

/**
 * Describes the message headless.v1.GetStatusRequest.
 * Use `create(GetStatusRequestSchema)` to create a new message.
 */
export const GetStatusRequestSchema: GenMessage<GetStatusRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 22);

/**
 * @generated from message headless.v1.GetStatusResponse
 */
export type GetStatusResponse = Message<"headless.v1.GetStatusResponse"> & {
  /**
   * @generated from field: float fps = 1;
   */
  fps: number;

  /**
   * @generated from field: float total_engine_update_time = 2;
   */
  totalEngineUpdateTime: number;

  /**
   * @generated from field: int32 syncing_records_count = 3;
   */
  syncingRecordsCount: number;
};

/**
 * Describes the message headless.v1.GetStatusResponse.
 * Use `create(GetStatusResponseSchema)` to create a new message.
 */
export const GetStatusResponseSchema: GenMessage<GetStatusResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 23);

/**
 * @generated from message headless.v1.ShutdownRequest
 */
export type ShutdownRequest = Message<"headless.v1.ShutdownRequest"> & {
};

/**
 * Describes the message headless.v1.ShutdownRequest.
 * Use `create(ShutdownRequestSchema)` to create a new message.
 */
export const ShutdownRequestSchema: GenMessage<ShutdownRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 24);

/**
 * @generated from message headless.v1.ShutdownResponse
 */
export type ShutdownResponse = Message<"headless.v1.ShutdownResponse"> & {
};

/**
 * Describes the message headless.v1.ShutdownResponse.
 * Use `create(ShutdownResponseSchema)` to create a new message.
 */
export const ShutdownResponseSchema: GenMessage<ShutdownResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 25);

/**
 * @generated from message headless.v1.ListSessionsRequest
 */
export type ListSessionsRequest = Message<"headless.v1.ListSessionsRequest"> & {
};

/**
 * Describes the message headless.v1.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema: GenMessage<ListSessionsRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 26);

/**
 * @generated from message headless.v1.ListSessionsResponse
 */
export type ListSessionsResponse = Message<"headless.v1.ListSessionsResponse"> & {
  /**
   * @generated from field: repeated headless.v1.Session sessions = 1;
   */
  sessions: Session[];
};

/**
 * Describes the message headless.v1.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema: GenMessage<ListSessionsResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 27);

/**
 * @generated from message headless.v1.GetSessionRequest
 */
export type GetSessionRequest = Message<"headless.v1.GetSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;
};

/**
 * Describes the message headless.v1.GetSessionRequest.
 * Use `create(GetSessionRequestSchema)` to create a new message.
 */
export const GetSessionRequestSchema: GenMessage<GetSessionRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 28);

/**
 * @generated from message headless.v1.GetSessionResponse
 */
export type GetSessionResponse = Message<"headless.v1.GetSessionResponse"> & {
  /**
   * @generated from field: headless.v1.Session session = 1;
   */
  session?: Session;
};

/**
 * Describes the message headless.v1.GetSessionResponse.
 * Use `create(GetSessionResponseSchema)` to create a new message.
 */
export const GetSessionResponseSchema: GenMessage<GetSessionResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 29);

/**
 * @generated from message headless.v1.StartWorldRequest
 */
export type StartWorldRequest = Message<"headless.v1.StartWorldRequest"> & {
  /**
   * @generated from field: headless.v1.WorldStartupParameters parameters = 1;
   */
  parameters?: WorldStartupParameters;
};

/**
 * Describes the message headless.v1.StartWorldRequest.
 * Use `create(StartWorldRequestSchema)` to create a new message.
 */
export const StartWorldRequestSchema: GenMessage<StartWorldRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 30);

/**
 * @generated from message headless.v1.StartWorldResponse
 */
export type StartWorldResponse = Message<"headless.v1.StartWorldResponse"> & {
  /**
   * @generated from field: headless.v1.Session opened_session = 1;
   */
  openedSession?: Session;
};

/**
 * Describes the message headless.v1.StartWorldResponse.
 * Use `create(StartWorldResponseSchema)` to create a new message.
 */
export const StartWorldResponseSchema: GenMessage<StartWorldResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 31);

/**
 * @generated from message headless.v1.StopSessionRequest
 */
export type StopSessionRequest = Message<"headless.v1.StopSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;
};

/**
 * Describes the message headless.v1.StopSessionRequest.
 * Use `create(StopSessionRequestSchema)` to create a new message.
 */
export const StopSessionRequestSchema: GenMessage<StopSessionRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 32);

/**
 * @generated from message headless.v1.StopSessionResponse
 */
export type StopSessionResponse = Message<"headless.v1.StopSessionResponse"> & {
};

/**
 * Describes the message headless.v1.StopSessionResponse.
 * Use `create(StopSessionResponseSchema)` to create a new message.
 */
export const StopSessionResponseSchema: GenMessage<StopSessionResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 33);

/**
 * @generated from message headless.v1.SaveSessionWorldRequest
 */
export type SaveSessionWorldRequest = Message<"headless.v1.SaveSessionWorldRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;
};

/**
 * Describes the message headless.v1.SaveSessionWorldRequest.
 * Use `create(SaveSessionWorldRequestSchema)` to create a new message.
 */
export const SaveSessionWorldRequestSchema: GenMessage<SaveSessionWorldRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 34);

/**
 * @generated from message headless.v1.SaveSessionWorldResponse
 */
export type SaveSessionWorldResponse = Message<"headless.v1.SaveSessionWorldResponse"> & {
};

/**
 * Describes the message headless.v1.SaveSessionWorldResponse.
 * Use `create(SaveSessionWorldResponseSchema)` to create a new message.
 */
export const SaveSessionWorldResponseSchema: GenMessage<SaveSessionWorldResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 35);

/**
 * @generated from message headless.v1.InviteUserRequest
 */
export type InviteUserRequest = Message<"headless.v1.InviteUserRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from oneof headless.v1.InviteUserRequest.user
   */
  user: {
    /**
     * @generated from field: string user_id = 2;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string user_name = 3;
     */
    value: string;
    case: "userName";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message headless.v1.InviteUserRequest.
 * Use `create(InviteUserRequestSchema)` to create a new message.
 */
export const InviteUserRequestSchema: GenMessage<InviteUserRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 36);

/**
 * @generated from message headless.v1.InviteUserResponse
 */
export type InviteUserResponse = Message<"headless.v1.InviteUserResponse"> & {
};

/**
 * Describes the message headless.v1.InviteUserResponse.
 * Use `create(InviteUserResponseSchema)` to create a new message.
 */
export const InviteUserResponseSchema: GenMessage<InviteUserResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 37);

/**
 * @generated from message headless.v1.UpdateUserRoleRequest
 */
export type UpdateUserRoleRequest = Message<"headless.v1.UpdateUserRoleRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from oneof headless.v1.UpdateUserRoleRequest.user
   */
  user: {
    /**
     * @generated from field: string user_id = 2;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string user_name = 3;
     */
    value: string;
    case: "userName";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: string role = 4;
   */
  role: string;
};

/**
 * Describes the message headless.v1.UpdateUserRoleRequest.
 * Use `create(UpdateUserRoleRequestSchema)` to create a new message.
 */
export const UpdateUserRoleRequestSchema: GenMessage<UpdateUserRoleRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 38);

/**
 * @generated from message headless.v1.UpdateUserRoleResponse
 */
export type UpdateUserRoleResponse = Message<"headless.v1.UpdateUserRoleResponse"> & {
  /**
   * 変更後のロール(無効なロールを指定した場合そのままの可能性)
   *
   * @generated from field: string role = 1;
   */
  role: string;
};

/**
 * Describes the message headless.v1.UpdateUserRoleResponse.
 * Use `create(UpdateUserRoleResponseSchema)` to create a new message.
 */
export const UpdateUserRoleResponseSchema: GenMessage<UpdateUserRoleResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 39);

/**
 * @generated from message headless.v1.UpdateSessionParametersRequest
 */
export type UpdateSessionParametersRequest = Message<"headless.v1.UpdateSessionParametersRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * @generated from field: optional int32 max_users = 4;
   */
  maxUsers?: number;

  /**
   * @generated from field: optional headless.v1.AccessLevel access_level = 5;
   */
  accessLevel?: AccessLevel;

  /**
   * @generated from field: optional float away_kick_minutes = 6;
   */
  awayKickMinutes?: number;

  /**
   * @generated from field: optional int32 idle_restart_interval_seconds = 7;
   */
  idleRestartIntervalSeconds?: number;

  /**
   * @generated from field: optional bool save_on_exit = 8;
   */
  saveOnExit?: boolean;

  /**
   * @generated from field: optional int32 auto_save_interval_seconds = 9;
   */
  autoSaveIntervalSeconds?: number;

  /**
   * @generated from field: optional bool auto_sleep = 10;
   */
  autoSleep?: boolean;

  /**
   * @generated from field: optional bool hide_from_public_listing = 11;
   */
  hideFromPublicListing?: boolean;

  /**
   * @generated from field: bool update_tags = 12;
   */
  updateTags: boolean;

  /**
   * @generated from field: repeated string tags = 13;
   */
  tags: string[];
};

/**
 * Describes the message headless.v1.UpdateSessionParametersRequest.
 * Use `create(UpdateSessionParametersRequestSchema)` to create a new message.
 */
export const UpdateSessionParametersRequestSchema: GenMessage<UpdateSessionParametersRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 40);

/**
 * @generated from message headless.v1.UpdateSessionParametersResponse
 */
export type UpdateSessionParametersResponse = Message<"headless.v1.UpdateSessionParametersResponse"> & {
};

/**
 * Describes the message headless.v1.UpdateSessionParametersResponse.
 * Use `create(UpdateSessionParametersResponseSchema)` to create a new message.
 */
export const UpdateSessionParametersResponseSchema: GenMessage<UpdateSessionParametersResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 41);

/**
 * @generated from message headless.v1.ListUsersInSessionRequest
 */
export type ListUsersInSessionRequest = Message<"headless.v1.ListUsersInSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;
};

/**
 * Describes the message headless.v1.ListUsersInSessionRequest.
 * Use `create(ListUsersInSessionRequestSchema)` to create a new message.
 */
export const ListUsersInSessionRequestSchema: GenMessage<ListUsersInSessionRequest> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 42);

/**
 * @generated from message headless.v1.ListUsersInSessionResponse
 */
export type ListUsersInSessionResponse = Message<"headless.v1.ListUsersInSessionResponse"> & {
  /**
   * @generated from field: repeated headless.v1.UserInSession users = 1;
   */
  users: UserInSession[];
};

/**
 * Describes the message headless.v1.ListUsersInSessionResponse.
 * Use `create(ListUsersInSessionResponseSchema)` to create a new message.
 */
export const ListUsersInSessionResponseSchema: GenMessage<ListUsersInSessionResponse> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 43);

/**
 * @generated from message headless.v1.UserInSession
 */
export type UserInSession = Message<"headless.v1.UserInSession"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string role = 3;
   */
  role: string;

  /**
   * @generated from field: bool is_present = 4;
   */
  isPresent: boolean;
};

/**
 * Describes the message headless.v1.UserInSession.
 * Use `create(UserInSessionSchema)` to create a new message.
 */
export const UserInSessionSchema: GenMessage<UserInSession> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 44);

/**
 * @generated from message headless.v1.UserInfo
 */
export type UserInfo = Message<"headless.v1.UserInfo"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string icon_url = 3;
   */
  iconUrl: string;
};

/**
 * Describes the message headless.v1.UserInfo.
 * Use `create(UserInfoSchema)` to create a new message.
 */
export const UserInfoSchema: GenMessage<UserInfo> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 45);

/**
 * @generated from message headless.v1.Session
 */
export type Session = Message<"headless.v1.Session"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: headless.v1.AccessLevel access_level = 4;
   */
  accessLevel: AccessLevel;

  /**
   * @generated from field: int32 users_count = 7;
   */
  usersCount: number;

  /**
   * @generated from field: int32 max_users = 8;
   */
  maxUsers: number;

  /**
   * @generated from field: optional string thumbnail_url = 5;
   */
  thumbnailUrl?: string;

  /**
   * @generated from field: headless.v1.WorldStartupParameters startup_parameters = 6;
   */
  startupParameters?: WorldStartupParameters;

  /**
   * @generated from field: string session_url = 9;
   */
  sessionUrl: string;

  /**
   * @generated from field: int32 time_running_ms = 10 [deprecated = true];
   * @deprecated
   */
  timeRunningMs: number;

  /**
   * @generated from field: float away_kick_minutes = 11;
   */
  awayKickMinutes: number;

  /**
   * @generated from field: int32 idle_restart_interval_seconds = 12;
   */
  idleRestartIntervalSeconds: number;

  /**
   * @generated from field: bool save_on_exit = 13;
   */
  saveOnExit: boolean;

  /**
   * @generated from field: int32 auto_save_interval_seconds = 14;
   */
  autoSaveIntervalSeconds: number;

  /**
   * @generated from field: bool auto_sleep = 15;
   */
  autoSleep: boolean;

  /**
   * @generated from field: bool hide_from_public_listing = 16;
   */
  hideFromPublicListing: boolean;

  /**
   * @generated from field: repeated string tags = 17;
   */
  tags: string[];

  /**
   * @generated from field: google.protobuf.Timestamp last_saved_at = 18;
   */
  lastSavedAt?: Timestamp;

  /**
   * @generated from field: bool can_save = 19;
   */
  canSave: boolean;

  /**
   * @generated from field: string world_url = 20;
   */
  worldUrl: string;

  /**
   * @generated from field: google.protobuf.Timestamp started_at = 21;
   */
  startedAt?: Timestamp;
};

/**
 * Describes the message headless.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema: GenMessage<Session> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 46);

/**
 * @generated from message headless.v1.DefaultUserRole
 */
export type DefaultUserRole = Message<"headless.v1.DefaultUserRole"> & {
  /**
   * @generated from field: string role = 1;
   */
  role: string;

  /**
   * @generated from field: string user_name = 2;
   */
  userName: string;
};

/**
 * Describes the message headless.v1.DefaultUserRole.
 * Use `create(DefaultUserRoleSchema)` to create a new message.
 */
export const DefaultUserRoleSchema: GenMessage<DefaultUserRole> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 47);

/**
 * @generated from message headless.v1.WorldStartupParameters
 */
export type WorldStartupParameters = Message<"headless.v1.WorldStartupParameters"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional string custom_session_id = 2;
   */
  customSessionId?: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * @generated from field: repeated string tags = 10;
   */
  tags: string[];

  /**
   * @generated from field: optional int32 max_users = 4;
   */
  maxUsers?: number;

  /**
   * @generated from field: headless.v1.AccessLevel access_level = 5;
   */
  accessLevel: AccessLevel;

  /**
   * @generated from oneof headless.v1.WorldStartupParameters.load_world
   */
  loadWorld: {
    /**
     * @generated from field: string load_world_url = 6;
     */
    value: string;
    case: "loadWorldUrl";
  } | {
    /**
     * @generated from field: string load_world_preset_name = 7;
     */
    value: string;
    case: "loadWorldPresetName";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: repeated string auto_invite_usernames = 8;
   */
  autoInviteUsernames: string[];

  /**
   * @generated from field: bool hide_from_public_listing = 9;
   */
  hideFromPublicListing: boolean;

  /**
   * @generated from field: repeated headless.v1.DefaultUserRole default_user_roles = 11;
   */
  defaultUserRoles: DefaultUserRole[];

  /**
   * @generated from field: float away_kick_minutes = 12;
   */
  awayKickMinutes: number;

  /**
   * @generated from field: int32 idle_restart_interval_seconds = 13;
   */
  idleRestartIntervalSeconds: number;

  /**
   * @generated from field: bool save_on_exit = 14;
   */
  saveOnExit: boolean;

  /**
   * @generated from field: int32 auto_save_interval_seconds = 15;
   */
  autoSaveIntervalSeconds: number;

  /**
   * @generated from field: bool auto_sleep = 16;
   */
  autoSleep: boolean;

  /**
   * @generated from field: repeated string invite_request_handler_usernames = 17;
   */
  inviteRequestHandlerUsernames: string[];

  /**
   * @generated from field: uint32 force_port = 18;
   */
  forcePort: number;

  /**
   * @generated from field: repeated string parent_session_ids = 19;
   */
  parentSessionIds: string[];

  /**
   * @generated from field: bool auto_recover = 20;
   */
  autoRecover: boolean;

  /**
   * @generated from field: int32 forced_restart_interval_seconds = 21;
   */
  forcedRestartIntervalSeconds: number;
};

/**
 * Describes the message headless.v1.WorldStartupParameters.
 * Use `create(WorldStartupParametersSchema)` to create a new message.
 */
export const WorldStartupParametersSchema: GenMessage<WorldStartupParameters> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 48);

/**
 * @generated from message headless.v1.ContactChatMessage
 */
export type ContactChatMessage = Message<"headless.v1.ContactChatMessage"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: headless.v1.ContactChatMessageType type = 2;
   */
  type: ContactChatMessageType;

  /**
   * @generated from field: string content = 3;
   */
  content: string;

  /**
   * @generated from field: google.protobuf.Timestamp send_time = 4;
   */
  sendTime?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp read_time = 5;
   */
  readTime?: Timestamp;
};

/**
 * Describes the message headless.v1.ContactChatMessage.
 * Use `create(ContactChatMessageSchema)` to create a new message.
 */
export const ContactChatMessageSchema: GenMessage<ContactChatMessage> = /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 49);

/**
 * @generated from enum headless.v1.AccessLevel
 */
export enum AccessLevel {
  /**
   * @generated from enum value: ACCESS_LEVEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACCESS_LEVEL_PRIVATE = 1;
   */
  PRIVATE = 1,

  /**
   * @generated from enum value: ACCESS_LEVEL_LAN = 2;
   */
  LAN = 2,

  /**
   * @generated from enum value: ACCESS_LEVEL_CONTACTS = 3;
   */
  CONTACTS = 3,

  /**
   * @generated from enum value: ACCESS_LEVEL_CONTACTS_PLUS = 4;
   */
  CONTACTS_PLUS = 4,

  /**
   * @generated from enum value: ACCESS_LEVEL_REGISTERED_USERS = 5;
   */
  REGISTERED_USERS = 5,

  /**
   * @generated from enum value: ACCESS_LEVEL_ANYONE = 6;
   */
  ANYONE = 6,
}

/**
 * Describes the enum headless.v1.AccessLevel.
 */
export const AccessLevelSchema: GenEnum<AccessLevel> = /*@__PURE__*/
  enumDesc(file_headless_v1_headless, 0);

/**
 * @generated from enum headless.v1.ContactChatMessageType
 */
export enum ContactChatMessageType {
  /**
   * @generated from enum value: CONTACT_CHAT_MESSAGE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONTACT_CHAT_MESSAGE_TYPE_TEXT = 1;
   */
  TEXT = 1,

  /**
   * @generated from enum value: CONTACT_CHAT_MESSAGE_TYPE_OBJECT = 2;
   */
  OBJECT = 2,

  /**
   * @generated from enum value: CONTACT_CHAT_MESSAGE_TYPE_SOUND = 3;
   */
  SOUND = 3,

  /**
   * @generated from enum value: CONTACT_CHAT_MESSAGE_TYPE_SESSION_INVITE = 4;
   */
  SESSION_INVITE = 4,
}

/**
 * Describes the enum headless.v1.ContactChatMessageType.
 */
export const ContactChatMessageTypeSchema: GenEnum<ContactChatMessageType> = /*@__PURE__*/
  enumDesc(file_headless_v1_headless, 1);

/**
 * @generated from service headless.v1.HeadlessControlService
 */
export const HeadlessControlService: GenService<{
  /**
   * @generated from rpc headless.v1.HeadlessControlService.GetAbout
   */
  getAbout: {
    methodKind: "unary";
    input: typeof GetAboutRequestSchema;
    output: typeof GetAboutResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.GetStatus
   */
  getStatus: {
    methodKind: "unary";
    input: typeof GetStatusRequestSchema;
    output: typeof GetStatusResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.Shutdown
   */
  shutdown: {
    methodKind: "unary";
    input: typeof ShutdownRequestSchema;
    output: typeof ShutdownResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.ListSessions
   */
  listSessions: {
    methodKind: "unary";
    input: typeof ListSessionsRequestSchema;
    output: typeof ListSessionsResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.GetSession
   */
  getSession: {
    methodKind: "unary";
    input: typeof GetSessionRequestSchema;
    output: typeof GetSessionResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.StartWorld
   */
  startWorld: {
    methodKind: "unary";
    input: typeof StartWorldRequestSchema;
    output: typeof StartWorldResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.StopSession
   */
  stopSession: {
    methodKind: "unary";
    input: typeof StopSessionRequestSchema;
    output: typeof StopSessionResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.SaveSessionWorld
   */
  saveSessionWorld: {
    methodKind: "unary";
    input: typeof SaveSessionWorldRequestSchema;
    output: typeof SaveSessionWorldResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.InviteUser
   */
  inviteUser: {
    methodKind: "unary";
    input: typeof InviteUserRequestSchema;
    output: typeof InviteUserResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.UpdateUserRole
   */
  updateUserRole: {
    methodKind: "unary";
    input: typeof UpdateUserRoleRequestSchema;
    output: typeof UpdateUserRoleResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.UpdateSessionParameters
   */
  updateSessionParameters: {
    methodKind: "unary";
    input: typeof UpdateSessionParametersRequestSchema;
    output: typeof UpdateSessionParametersResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.ListUsersInSession
   */
  listUsersInSession: {
    methodKind: "unary";
    input: typeof ListUsersInSessionRequestSchema;
    output: typeof ListUsersInSessionResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.KickUser
   */
  kickUser: {
    methodKind: "unary";
    input: typeof KickUserRequestSchema;
    output: typeof KickUserResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.BanUser
   */
  banUser: {
    methodKind: "unary";
    input: typeof BanUserRequestSchema;
    output: typeof BanUserResponseSchema;
  },
  /**
   * Cloud系
   *
   * @generated from rpc headless.v1.HeadlessControlService.GetAccountInfo
   */
  getAccountInfo: {
    methodKind: "unary";
    input: typeof GetAccountInfoRequestSchema;
    output: typeof GetAccountInfoResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.FetchWorldInfo
   */
  fetchWorldInfo: {
    methodKind: "unary";
    input: typeof FetchWorldInfoRequestSchema;
    output: typeof FetchWorldInfoResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.SearchUserInfo
   */
  searchUserInfo: {
    methodKind: "unary";
    input: typeof SearchUserInfoRequestSchema;
    output: typeof SearchUserInfoResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.GetFriendRequests
   */
  getFriendRequests: {
    methodKind: "unary";
    input: typeof GetFriendRequestsRequestSchema;
    output: typeof GetFriendRequestsResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.AcceptFriendRequests
   */
  acceptFriendRequests: {
    methodKind: "unary";
    input: typeof AcceptFriendRequestsRequestSchema;
    output: typeof AcceptFriendRequestsResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.ListContacts
   */
  listContacts: {
    methodKind: "unary";
    input: typeof ListContactsRequestSchema;
    output: typeof ListContactsResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.GetContactMessages
   */
  getContactMessages: {
    methodKind: "unary";
    input: typeof GetContactMessagesRequestSchema;
    output: typeof GetContactMessagesResponseSchema;
  },
  /**
   * @generated from rpc headless.v1.HeadlessControlService.SendContactMessage
   */
  sendContactMessage: {
    methodKind: "unary";
    input: typeof SendContactMessageRequestSchema;
    output: typeof SendContactMessageResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_headless_v1_headless, 0);

