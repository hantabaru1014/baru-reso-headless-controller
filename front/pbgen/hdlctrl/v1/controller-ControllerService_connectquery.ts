// @generated by protoc-gen-connect-query v2.0.1 with parameter "target=ts"
// @generated from file hdlctrl/v1/controller.proto (package hdlctrl.v1, syntax proto3)
/* eslint-disable */

import { ControllerService } from "./controller_pb";

/**
 * @generated from rpc hdlctrl.v1.ControllerService.ListHeadlessHost
 */
export const listHeadlessHost = ControllerService.method.listHeadlessHost;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.GetHeadlessHost
 */
export const getHeadlessHost = ControllerService.method.getHeadlessHost;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.GetHeadlessHostLogs
 */
export const getHeadlessHostLogs = ControllerService.method.getHeadlessHostLogs;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.FetchWorldInfo
 */
export const fetchWorldInfo = ControllerService.method.fetchWorldInfo;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.SearchUserInfo
 */
export const searchUserInfo = ControllerService.method.searchUserInfo;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.ListSessions
 */
export const listSessions = ControllerService.method.listSessions;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.GetSessionDetails
 */
export const getSessionDetails = ControllerService.method.getSessionDetails;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.StartWorld
 */
export const startWorld = ControllerService.method.startWorld;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.StopSession
 */
export const stopSession = ControllerService.method.stopSession;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.SaveSessionWorld
 */
export const saveSessionWorld = ControllerService.method.saveSessionWorld;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.InviteUser
 */
export const inviteUser = ControllerService.method.inviteUser;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.UpdateUserRole
 */
export const updateUserRole = ControllerService.method.updateUserRole;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.UpdateSessionParameters
 */
export const updateSessionParameters = ControllerService.method.updateSessionParameters;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.ListUsersInSession
 */
export const listUsersInSession = ControllerService.method.listUsersInSession;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.KickUser
 */
export const kickUser = ControllerService.method.kickUser;

/**
 * @generated from rpc hdlctrl.v1.ControllerService.BanUser
 */
export const banUser = ControllerService.method.banUser;
