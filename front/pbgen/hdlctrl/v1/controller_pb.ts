// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file hdlctrl/v1/controller.proto (package hdlctrl.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { AllowedAccessEntry, AllowHostAccessRequest as AllowHostAccessRequest$1, BanUserRequest as BanUserRequest$1, DenyHostAccessRequest as DenyHostAccessRequest$1, FetchWorldInfoResponseSchema, GetFriendRequestsResponseSchema, KickUserRequest as KickUserRequest$1, SearchUserInfoRequest as SearchUserInfoRequest$1, SearchUserInfoResponseSchema, Session as Session$1, StartupConfig, UpdateSessionParametersRequest as UpdateSessionParametersRequest$1, UpdateUserRoleRequest as UpdateUserRoleRequest$1, UserInSession, WorldStartupParameters } from "../../headless/v1/headless_pb";
import { file_headless_v1_headless } from "../../headless/v1/headless_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file hdlctrl/v1/controller.proto.
 */
export const file_hdlctrl_v1_controller: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_timestamp, file_headless_v1_headless]);

/**
 * @generated from message hdlctrl.v1.AllowHostAccessRequest
 */
export type AllowHostAccessRequest = Message<"hdlctrl.v1.AllowHostAccessRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.AllowHostAccessRequest request = 2;
   */
  request?: AllowHostAccessRequest$1;
};

/**
 * Describes the message hdlctrl.v1.AllowHostAccessRequest.
 * Use `create(AllowHostAccessRequestSchema)` to create a new message.
 */
export const AllowHostAccessRequestSchema: GenMessage<AllowHostAccessRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 0);

/**
 * @generated from message hdlctrl.v1.AllowHostAccessResponse
 */
export type AllowHostAccessResponse = Message<"hdlctrl.v1.AllowHostAccessResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.AllowHostAccessResponse.
 * Use `create(AllowHostAccessResponseSchema)` to create a new message.
 */
export const AllowHostAccessResponseSchema: GenMessage<AllowHostAccessResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 1);

/**
 * @generated from message hdlctrl.v1.DenyHostAccessRequest
 */
export type DenyHostAccessRequest = Message<"hdlctrl.v1.DenyHostAccessRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.DenyHostAccessRequest request = 2;
   */
  request?: DenyHostAccessRequest$1;
};

/**
 * Describes the message hdlctrl.v1.DenyHostAccessRequest.
 * Use `create(DenyHostAccessRequestSchema)` to create a new message.
 */
export const DenyHostAccessRequestSchema: GenMessage<DenyHostAccessRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 2);

/**
 * @generated from message hdlctrl.v1.DenyHostAccessResponse
 */
export type DenyHostAccessResponse = Message<"hdlctrl.v1.DenyHostAccessResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.DenyHostAccessResponse.
 * Use `create(DenyHostAccessResponseSchema)` to create a new message.
 */
export const DenyHostAccessResponseSchema: GenMessage<DenyHostAccessResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 3);

/**
 * @generated from message hdlctrl.v1.StartHeadlessHostRequest
 */
export type StartHeadlessHostRequest = Message<"hdlctrl.v1.StartHeadlessHostRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string headless_account_id = 2;
   */
  headlessAccountId: string;

  /**
   * @generated from field: optional string image_tag = 3;
   */
  imageTag?: string;

  /**
   * @generated from field: optional headless.v1.StartupConfig startup_config = 4;
   */
  startupConfig?: StartupConfig;

  /**
   * @generated from field: optional hdlctrl.v1.HeadlessHostAutoUpdatePolicy auto_update_policy = 5;
   */
  autoUpdatePolicy?: HeadlessHostAutoUpdatePolicy;

  /**
   * @generated from field: optional string memo = 6;
   */
  memo?: string;
};

/**
 * Describes the message hdlctrl.v1.StartHeadlessHostRequest.
 * Use `create(StartHeadlessHostRequestSchema)` to create a new message.
 */
export const StartHeadlessHostRequestSchema: GenMessage<StartHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 4);

/**
 * @generated from message hdlctrl.v1.StartHeadlessHostResponse
 */
export type StartHeadlessHostResponse = Message<"hdlctrl.v1.StartHeadlessHostResponse"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;
};

/**
 * Describes the message hdlctrl.v1.StartHeadlessHostResponse.
 * Use `create(StartHeadlessHostResponseSchema)` to create a new message.
 */
export const StartHeadlessHostResponseSchema: GenMessage<StartHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 5);

/**
 * @generated from message hdlctrl.v1.CreateHeadlessAccountRequest
 */
export type CreateHeadlessAccountRequest = Message<"hdlctrl.v1.CreateHeadlessAccountRequest"> & {
  /**
   * @generated from field: string resonite_user_id = 1;
   */
  resoniteUserId: string;

  /**
   * @generated from field: string credential = 2;
   */
  credential: string;

  /**
   * @generated from field: string password = 3;
   */
  password: string;
};

/**
 * Describes the message hdlctrl.v1.CreateHeadlessAccountRequest.
 * Use `create(CreateHeadlessAccountRequestSchema)` to create a new message.
 */
export const CreateHeadlessAccountRequestSchema: GenMessage<CreateHeadlessAccountRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 6);

/**
 * @generated from message hdlctrl.v1.CreateHeadlessAccountResponse
 */
export type CreateHeadlessAccountResponse = Message<"hdlctrl.v1.CreateHeadlessAccountResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.CreateHeadlessAccountResponse.
 * Use `create(CreateHeadlessAccountResponseSchema)` to create a new message.
 */
export const CreateHeadlessAccountResponseSchema: GenMessage<CreateHeadlessAccountResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 7);

/**
 * @generated from message hdlctrl.v1.ListHeadlessAccountsRequest
 */
export type ListHeadlessAccountsRequest = Message<"hdlctrl.v1.ListHeadlessAccountsRequest"> & {
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessAccountsRequest.
 * Use `create(ListHeadlessAccountsRequestSchema)` to create a new message.
 */
export const ListHeadlessAccountsRequestSchema: GenMessage<ListHeadlessAccountsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 8);

/**
 * @generated from message hdlctrl.v1.ListHeadlessAccountsResponse
 */
export type ListHeadlessAccountsResponse = Message<"hdlctrl.v1.ListHeadlessAccountsResponse"> & {
  /**
   * @generated from field: repeated hdlctrl.v1.HeadlessAccount accounts = 1;
   */
  accounts: HeadlessAccount[];
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessAccountsResponse.
 * Use `create(ListHeadlessAccountsResponseSchema)` to create a new message.
 */
export const ListHeadlessAccountsResponseSchema: GenMessage<ListHeadlessAccountsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 9);

/**
 * @generated from message hdlctrl.v1.ListHeadlessHostImageTagsRequest
 */
export type ListHeadlessHostImageTagsRequest = Message<"hdlctrl.v1.ListHeadlessHostImageTagsRequest"> & {
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessHostImageTagsRequest.
 * Use `create(ListHeadlessHostImageTagsRequestSchema)` to create a new message.
 */
export const ListHeadlessHostImageTagsRequestSchema: GenMessage<ListHeadlessHostImageTagsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 10);

/**
 * @generated from message hdlctrl.v1.ListHeadlessHostImageTagsResponse
 */
export type ListHeadlessHostImageTagsResponse = Message<"hdlctrl.v1.ListHeadlessHostImageTagsResponse"> & {
  /**
   * @generated from field: repeated hdlctrl.v1.ListHeadlessHostImageTagsResponse.ContainerImage tags = 1;
   */
  tags: ListHeadlessHostImageTagsResponse_ContainerImage[];
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessHostImageTagsResponse.
 * Use `create(ListHeadlessHostImageTagsResponseSchema)` to create a new message.
 */
export const ListHeadlessHostImageTagsResponseSchema: GenMessage<ListHeadlessHostImageTagsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 11);

/**
 * @generated from message hdlctrl.v1.ListHeadlessHostImageTagsResponse.ContainerImage
 */
export type ListHeadlessHostImageTagsResponse_ContainerImage = Message<"hdlctrl.v1.ListHeadlessHostImageTagsResponse.ContainerImage"> & {
  /**
   * @generated from field: string tag = 1;
   */
  tag: string;

  /**
   * @generated from field: string resonite_version = 2;
   */
  resoniteVersion: string;

  /**
   * @generated from field: bool is_prerelease = 3;
   */
  isPrerelease: boolean;

  /**
   * @generated from field: string app_version = 4;
   */
  appVersion: string;
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessHostImageTagsResponse.ContainerImage.
 * Use `create(ListHeadlessHostImageTagsResponse_ContainerImageSchema)` to create a new message.
 */
export const ListHeadlessHostImageTagsResponse_ContainerImageSchema: GenMessage<ListHeadlessHostImageTagsResponse_ContainerImage> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 11, 0);

/**
 * @generated from message hdlctrl.v1.AcceptFriendRequestsRequest
 */
export type AcceptFriendRequestsRequest = Message<"hdlctrl.v1.AcceptFriendRequestsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: repeated string user_ids = 2;
   */
  userIds: string[];
};

/**
 * Describes the message hdlctrl.v1.AcceptFriendRequestsRequest.
 * Use `create(AcceptFriendRequestsRequestSchema)` to create a new message.
 */
export const AcceptFriendRequestsRequestSchema: GenMessage<AcceptFriendRequestsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 12);

/**
 * @generated from message hdlctrl.v1.AcceptFriendRequestsResponse
 */
export type AcceptFriendRequestsResponse = Message<"hdlctrl.v1.AcceptFriendRequestsResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.AcceptFriendRequestsResponse.
 * Use `create(AcceptFriendRequestsResponseSchema)` to create a new message.
 */
export const AcceptFriendRequestsResponseSchema: GenMessage<AcceptFriendRequestsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 13);

/**
 * @generated from message hdlctrl.v1.GetFriendRequestsRequest
 */
export type GetFriendRequestsRequest = Message<"hdlctrl.v1.GetFriendRequestsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;
};

/**
 * Describes the message hdlctrl.v1.GetFriendRequestsRequest.
 * Use `create(GetFriendRequestsRequestSchema)` to create a new message.
 */
export const GetFriendRequestsRequestSchema: GenMessage<GetFriendRequestsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 14);

/**
 * @generated from message hdlctrl.v1.RestartHeadlessHostRequest
 */
export type RestartHeadlessHostRequest = Message<"hdlctrl.v1.RestartHeadlessHostRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: bool with_update = 2;
   */
  withUpdate: boolean;

  /**
   * @generated from field: optional string with_image_tag = 3;
   */
  withImageTag?: string;

  /**
   * @generated from field: bool with_world_restart = 4;
   */
  withWorldRestart: boolean;

  /**
   * @generated from field: optional int32 timeout_seconds = 5;
   */
  timeoutSeconds?: number;
};

/**
 * Describes the message hdlctrl.v1.RestartHeadlessHostRequest.
 * Use `create(RestartHeadlessHostRequestSchema)` to create a new message.
 */
export const RestartHeadlessHostRequestSchema: GenMessage<RestartHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 15);

/**
 * @generated from message hdlctrl.v1.RestartHeadlessHostResponse
 */
export type RestartHeadlessHostResponse = Message<"hdlctrl.v1.RestartHeadlessHostResponse"> & {
  /**
   * @generated from field: optional string new_host_id = 1;
   */
  newHostId?: string;
};

/**
 * Describes the message hdlctrl.v1.RestartHeadlessHostResponse.
 * Use `create(RestartHeadlessHostResponseSchema)` to create a new message.
 */
export const RestartHeadlessHostResponseSchema: GenMessage<RestartHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 16);

/**
 * @generated from message hdlctrl.v1.UpdateHeadlessHostSettingsRequest
 */
export type UpdateHeadlessHostSettingsRequest = Message<"hdlctrl.v1.UpdateHeadlessHostSettingsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional float tick_rate = 3;
   */
  tickRate?: number;

  /**
   * @generated from field: optional int32 max_concurrent_asset_transfers = 4;
   */
  maxConcurrentAssetTransfers?: number;

  /**
   * @generated from field: optional string username_override = 5;
   */
  usernameOverride?: string;

  /**
   * @generated from field: bool update_auto_spawn_items = 6;
   */
  updateAutoSpawnItems: boolean;

  /**
   * @generated from field: repeated string auto_spawn_items = 7;
   */
  autoSpawnItems: string[];
};

/**
 * Describes the message hdlctrl.v1.UpdateHeadlessHostSettingsRequest.
 * Use `create(UpdateHeadlessHostSettingsRequestSchema)` to create a new message.
 */
export const UpdateHeadlessHostSettingsRequestSchema: GenMessage<UpdateHeadlessHostSettingsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 17);

/**
 * @generated from message hdlctrl.v1.UpdateHeadlessHostSettingsResponse
 */
export type UpdateHeadlessHostSettingsResponse = Message<"hdlctrl.v1.UpdateHeadlessHostSettingsResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.UpdateHeadlessHostSettingsResponse.
 * Use `create(UpdateHeadlessHostSettingsResponseSchema)` to create a new message.
 */
export const UpdateHeadlessHostSettingsResponseSchema: GenMessage<UpdateHeadlessHostSettingsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 18);

/**
 * @generated from message hdlctrl.v1.ShutdownHeadlessHostRequest
 */
export type ShutdownHeadlessHostRequest = Message<"hdlctrl.v1.ShutdownHeadlessHostRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;
};

/**
 * Describes the message hdlctrl.v1.ShutdownHeadlessHostRequest.
 * Use `create(ShutdownHeadlessHostRequestSchema)` to create a new message.
 */
export const ShutdownHeadlessHostRequestSchema: GenMessage<ShutdownHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 19);

/**
 * @generated from message hdlctrl.v1.ShutdownHeadlessHostResponse
 */
export type ShutdownHeadlessHostResponse = Message<"hdlctrl.v1.ShutdownHeadlessHostResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.ShutdownHeadlessHostResponse.
 * Use `create(ShutdownHeadlessHostResponseSchema)` to create a new message.
 */
export const ShutdownHeadlessHostResponseSchema: GenMessage<ShutdownHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 20);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostLogsRequest
 */
export type GetHeadlessHostLogsRequest = Message<"hdlctrl.v1.GetHeadlessHostLogsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from oneof hdlctrl.v1.GetHeadlessHostLogsRequest.query
   */
  query: {
    /**
     * limit が指定されている場合は、最新のログから limit 件取得する
     *
     * @generated from field: int32 limit = 2;
     */
    value: number;
    case: "limit";
  } | {
    /**
     * until が指定されている場合は、until 以前のログを全て取得する
     *
     * @generated from field: google.protobuf.Timestamp until = 3;
     */
    value: Timestamp;
    case: "until";
  } | {
    /**
     * since が指定されている場合は、since 以降のログを全て取得する
     *
     * @generated from field: google.protobuf.Timestamp since = 4;
     */
    value: Timestamp;
    case: "since";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostLogsRequest.
 * Use `create(GetHeadlessHostLogsRequestSchema)` to create a new message.
 */
export const GetHeadlessHostLogsRequestSchema: GenMessage<GetHeadlessHostLogsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 21);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostLogsResponse
 */
export type GetHeadlessHostLogsResponse = Message<"hdlctrl.v1.GetHeadlessHostLogsResponse"> & {
  /**
   * 時系列に並んだログ
   *
   * @generated from field: repeated hdlctrl.v1.GetHeadlessHostLogsResponse.Log logs = 1;
   */
  logs: GetHeadlessHostLogsResponse_Log[];
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostLogsResponse.
 * Use `create(GetHeadlessHostLogsResponseSchema)` to create a new message.
 */
export const GetHeadlessHostLogsResponseSchema: GenMessage<GetHeadlessHostLogsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 22);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostLogsResponse.Log
 */
export type GetHeadlessHostLogsResponse_Log = Message<"hdlctrl.v1.GetHeadlessHostLogsResponse.Log"> & {
  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: bool is_error = 2;
   */
  isError: boolean;

  /**
   * @generated from field: string body = 3;
   */
  body: string;
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostLogsResponse.Log.
 * Use `create(GetHeadlessHostLogsResponse_LogSchema)` to create a new message.
 */
export const GetHeadlessHostLogsResponse_LogSchema: GenMessage<GetHeadlessHostLogsResponse_Log> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 22, 0);

/**
 * @generated from message hdlctrl.v1.SearchUserInfoRequest
 */
export type SearchUserInfoRequest = Message<"hdlctrl.v1.SearchUserInfoRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.SearchUserInfoRequest parameters = 2;
   */
  parameters?: SearchUserInfoRequest$1;
};

/**
 * Describes the message hdlctrl.v1.SearchUserInfoRequest.
 * Use `create(SearchUserInfoRequestSchema)` to create a new message.
 */
export const SearchUserInfoRequestSchema: GenMessage<SearchUserInfoRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 23);

/**
 * @generated from message hdlctrl.v1.KickUserRequest
 */
export type KickUserRequest = Message<"hdlctrl.v1.KickUserRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.KickUserRequest parameters = 2;
   */
  parameters?: KickUserRequest$1;
};

/**
 * Describes the message hdlctrl.v1.KickUserRequest.
 * Use `create(KickUserRequestSchema)` to create a new message.
 */
export const KickUserRequestSchema: GenMessage<KickUserRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 24);

/**
 * @generated from message hdlctrl.v1.KickUserResponse
 */
export type KickUserResponse = Message<"hdlctrl.v1.KickUserResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.KickUserResponse.
 * Use `create(KickUserResponseSchema)` to create a new message.
 */
export const KickUserResponseSchema: GenMessage<KickUserResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 25);

/**
 * @generated from message hdlctrl.v1.BanUserRequest
 */
export type BanUserRequest = Message<"hdlctrl.v1.BanUserRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.BanUserRequest parameters = 2;
   */
  parameters?: BanUserRequest$1;
};

/**
 * Describes the message hdlctrl.v1.BanUserRequest.
 * Use `create(BanUserRequestSchema)` to create a new message.
 */
export const BanUserRequestSchema: GenMessage<BanUserRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 26);

/**
 * @generated from message hdlctrl.v1.BanUserResponse
 */
export type BanUserResponse = Message<"hdlctrl.v1.BanUserResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.BanUserResponse.
 * Use `create(BanUserResponseSchema)` to create a new message.
 */
export const BanUserResponseSchema: GenMessage<BanUserResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 27);

/**
 * @generated from message hdlctrl.v1.FetchWorldInfoRequest
 */
export type FetchWorldInfoRequest = Message<"hdlctrl.v1.FetchWorldInfoRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;
};

/**
 * Describes the message hdlctrl.v1.FetchWorldInfoRequest.
 * Use `create(FetchWorldInfoRequestSchema)` to create a new message.
 */
export const FetchWorldInfoRequestSchema: GenMessage<FetchWorldInfoRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 28);

/**
 * @generated from message hdlctrl.v1.ListHeadlessHostRequest
 */
export type ListHeadlessHostRequest = Message<"hdlctrl.v1.ListHeadlessHostRequest"> & {
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessHostRequest.
 * Use `create(ListHeadlessHostRequestSchema)` to create a new message.
 */
export const ListHeadlessHostRequestSchema: GenMessage<ListHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 29);

/**
 * @generated from message hdlctrl.v1.ListHeadlessHostResponse
 */
export type ListHeadlessHostResponse = Message<"hdlctrl.v1.ListHeadlessHostResponse"> & {
  /**
   * @generated from field: repeated hdlctrl.v1.HeadlessHost hosts = 1;
   */
  hosts: HeadlessHost[];
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessHostResponse.
 * Use `create(ListHeadlessHostResponseSchema)` to create a new message.
 */
export const ListHeadlessHostResponseSchema: GenMessage<ListHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 30);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostRequest
 */
export type GetHeadlessHostRequest = Message<"hdlctrl.v1.GetHeadlessHostRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostRequest.
 * Use `create(GetHeadlessHostRequestSchema)` to create a new message.
 */
export const GetHeadlessHostRequestSchema: GenMessage<GetHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 31);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostResponse
 */
export type GetHeadlessHostResponse = Message<"hdlctrl.v1.GetHeadlessHostResponse"> & {
  /**
   * @generated from field: hdlctrl.v1.HeadlessHost host = 1;
   */
  host?: HeadlessHost;

  /**
   * @generated from field: hdlctrl.v1.HeadlessHostSettings settings = 2;
   */
  settings?: HeadlessHostSettings;
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostResponse.
 * Use `create(GetHeadlessHostResponseSchema)` to create a new message.
 */
export const GetHeadlessHostResponseSchema: GenMessage<GetHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 32);

/**
 * @generated from message hdlctrl.v1.AddHeadlessHostRequest
 */
export type AddHeadlessHostRequest = Message<"hdlctrl.v1.AddHeadlessHostRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string address = 2;
   */
  address: string;
};

/**
 * Describes the message hdlctrl.v1.AddHeadlessHostRequest.
 * Use `create(AddHeadlessHostRequestSchema)` to create a new message.
 */
export const AddHeadlessHostRequestSchema: GenMessage<AddHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 33);

/**
 * @generated from message hdlctrl.v1.AddHeadlessHostResponse
 */
export type AddHeadlessHostResponse = Message<"hdlctrl.v1.AddHeadlessHostResponse"> & {
  /**
   * @generated from field: hdlctrl.v1.HeadlessHost host = 1;
   */
  host?: HeadlessHost;
};

/**
 * Describes the message hdlctrl.v1.AddHeadlessHostResponse.
 * Use `create(AddHeadlessHostResponseSchema)` to create a new message.
 */
export const AddHeadlessHostResponseSchema: GenMessage<AddHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 34);

/**
 * @generated from message hdlctrl.v1.SearchSessionsRequest
 */
export type SearchSessionsRequest = Message<"hdlctrl.v1.SearchSessionsRequest"> & {
  /**
   * @generated from field: hdlctrl.v1.SearchSessionsRequest.SearchParameters parameters = 1;
   */
  parameters?: SearchSessionsRequest_SearchParameters;
};

/**
 * Describes the message hdlctrl.v1.SearchSessionsRequest.
 * Use `create(SearchSessionsRequestSchema)` to create a new message.
 */
export const SearchSessionsRequestSchema: GenMessage<SearchSessionsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 35);

/**
 * @generated from message hdlctrl.v1.SearchSessionsRequest.SearchParameters
 */
export type SearchSessionsRequest_SearchParameters = Message<"hdlctrl.v1.SearchSessionsRequest.SearchParameters"> & {
  /**
   * @generated from field: optional string host_id = 1;
   */
  hostId?: string;

  /**
   * @generated from field: optional hdlctrl.v1.SessionStatus status = 2;
   */
  status?: SessionStatus;
};

/**
 * Describes the message hdlctrl.v1.SearchSessionsRequest.SearchParameters.
 * Use `create(SearchSessionsRequest_SearchParametersSchema)` to create a new message.
 */
export const SearchSessionsRequest_SearchParametersSchema: GenMessage<SearchSessionsRequest_SearchParameters> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 35, 0);

/**
 * @generated from message hdlctrl.v1.SearchSessionsResponse
 */
export type SearchSessionsResponse = Message<"hdlctrl.v1.SearchSessionsResponse"> & {
  /**
   * @generated from field: repeated hdlctrl.v1.Session sessions = 1;
   */
  sessions: Session[];
};

/**
 * Describes the message hdlctrl.v1.SearchSessionsResponse.
 * Use `create(SearchSessionsResponseSchema)` to create a new message.
 */
export const SearchSessionsResponseSchema: GenMessage<SearchSessionsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 36);

/**
 * @generated from message hdlctrl.v1.GetSessionDetailsRequest
 */
export type GetSessionDetailsRequest = Message<"hdlctrl.v1.GetSessionDetailsRequest"> & {
  /**
   * 指定不要
   *
   * @generated from field: string host_id = 1 [deprecated = true];
   * @deprecated
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.GetSessionDetailsRequest.
 * Use `create(GetSessionDetailsRequestSchema)` to create a new message.
 */
export const GetSessionDetailsRequestSchema: GenMessage<GetSessionDetailsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 37);

/**
 * @generated from message hdlctrl.v1.GetSessionDetailsResponse
 */
export type GetSessionDetailsResponse = Message<"hdlctrl.v1.GetSessionDetailsResponse"> & {
  /**
   * @generated from field: hdlctrl.v1.Session session = 1;
   */
  session?: Session;
};

/**
 * Describes the message hdlctrl.v1.GetSessionDetailsResponse.
 * Use `create(GetSessionDetailsResponseSchema)` to create a new message.
 */
export const GetSessionDetailsResponseSchema: GenMessage<GetSessionDetailsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 38);

/**
 * @generated from message hdlctrl.v1.StartWorldRequest
 */
export type StartWorldRequest = Message<"hdlctrl.v1.StartWorldRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.WorldStartupParameters parameters = 2;
   */
  parameters?: WorldStartupParameters;

  /**
   * @generated from field: string memo = 3;
   */
  memo: string;
};

/**
 * Describes the message hdlctrl.v1.StartWorldRequest.
 * Use `create(StartWorldRequestSchema)` to create a new message.
 */
export const StartWorldRequestSchema: GenMessage<StartWorldRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 39);

/**
 * @generated from message hdlctrl.v1.StartWorldResponse
 */
export type StartWorldResponse = Message<"hdlctrl.v1.StartWorldResponse"> & {
  /**
   * @generated from field: hdlctrl.v1.Session opened_session = 1;
   */
  openedSession?: Session;
};

/**
 * Describes the message hdlctrl.v1.StartWorldResponse.
 * Use `create(StartWorldResponseSchema)` to create a new message.
 */
export const StartWorldResponseSchema: GenMessage<StartWorldResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 40);

/**
 * @generated from message hdlctrl.v1.StopSessionRequest
 */
export type StopSessionRequest = Message<"hdlctrl.v1.StopSessionRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.StopSessionRequest.
 * Use `create(StopSessionRequestSchema)` to create a new message.
 */
export const StopSessionRequestSchema: GenMessage<StopSessionRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 41);

/**
 * @generated from message hdlctrl.v1.StopSessionResponse
 */
export type StopSessionResponse = Message<"hdlctrl.v1.StopSessionResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.StopSessionResponse.
 * Use `create(StopSessionResponseSchema)` to create a new message.
 */
export const StopSessionResponseSchema: GenMessage<StopSessionResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 42);

/**
 * @generated from message hdlctrl.v1.DeleteEndedSessionRequest
 */
export type DeleteEndedSessionRequest = Message<"hdlctrl.v1.DeleteEndedSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.DeleteEndedSessionRequest.
 * Use `create(DeleteEndedSessionRequestSchema)` to create a new message.
 */
export const DeleteEndedSessionRequestSchema: GenMessage<DeleteEndedSessionRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 43);

/**
 * @generated from message hdlctrl.v1.DeleteEndedSessionResponse
 */
export type DeleteEndedSessionResponse = Message<"hdlctrl.v1.DeleteEndedSessionResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.DeleteEndedSessionResponse.
 * Use `create(DeleteEndedSessionResponseSchema)` to create a new message.
 */
export const DeleteEndedSessionResponseSchema: GenMessage<DeleteEndedSessionResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 44);

/**
 * @generated from message hdlctrl.v1.SaveSessionWorldRequest
 */
export type SaveSessionWorldRequest = Message<"hdlctrl.v1.SaveSessionWorldRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.SaveSessionWorldRequest.
 * Use `create(SaveSessionWorldRequestSchema)` to create a new message.
 */
export const SaveSessionWorldRequestSchema: GenMessage<SaveSessionWorldRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 45);

/**
 * @generated from message hdlctrl.v1.SaveSessionWorldResponse
 */
export type SaveSessionWorldResponse = Message<"hdlctrl.v1.SaveSessionWorldResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.SaveSessionWorldResponse.
 * Use `create(SaveSessionWorldResponseSchema)` to create a new message.
 */
export const SaveSessionWorldResponseSchema: GenMessage<SaveSessionWorldResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 46);

/**
 * @generated from message hdlctrl.v1.InviteUserRequest
 */
export type InviteUserRequest = Message<"hdlctrl.v1.InviteUserRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from oneof hdlctrl.v1.InviteUserRequest.user
   */
  user: {
    /**
     * @generated from field: string user_id = 3;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string user_name = 4;
     */
    value: string;
    case: "userName";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message hdlctrl.v1.InviteUserRequest.
 * Use `create(InviteUserRequestSchema)` to create a new message.
 */
export const InviteUserRequestSchema: GenMessage<InviteUserRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 47);

/**
 * @generated from message hdlctrl.v1.InviteUserResponse
 */
export type InviteUserResponse = Message<"hdlctrl.v1.InviteUserResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.InviteUserResponse.
 * Use `create(InviteUserResponseSchema)` to create a new message.
 */
export const InviteUserResponseSchema: GenMessage<InviteUserResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 48);

/**
 * @generated from message hdlctrl.v1.UpdateUserRoleRequest
 */
export type UpdateUserRoleRequest = Message<"hdlctrl.v1.UpdateUserRoleRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.UpdateUserRoleRequest parameters = 2;
   */
  parameters?: UpdateUserRoleRequest$1;
};

/**
 * Describes the message hdlctrl.v1.UpdateUserRoleRequest.
 * Use `create(UpdateUserRoleRequestSchema)` to create a new message.
 */
export const UpdateUserRoleRequestSchema: GenMessage<UpdateUserRoleRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 49);

/**
 * @generated from message hdlctrl.v1.UpdateUserRoleResponse
 */
export type UpdateUserRoleResponse = Message<"hdlctrl.v1.UpdateUserRoleResponse"> & {
  /**
   * @generated from field: string role = 1;
   */
  role: string;
};

/**
 * Describes the message hdlctrl.v1.UpdateUserRoleResponse.
 * Use `create(UpdateUserRoleResponseSchema)` to create a new message.
 */
export const UpdateUserRoleResponseSchema: GenMessage<UpdateUserRoleResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 50);

/**
 * @generated from message hdlctrl.v1.UpdateSessionParametersRequest
 */
export type UpdateSessionParametersRequest = Message<"hdlctrl.v1.UpdateSessionParametersRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.UpdateSessionParametersRequest parameters = 2;
   */
  parameters?: UpdateSessionParametersRequest$1;
};

/**
 * Describes the message hdlctrl.v1.UpdateSessionParametersRequest.
 * Use `create(UpdateSessionParametersRequestSchema)` to create a new message.
 */
export const UpdateSessionParametersRequestSchema: GenMessage<UpdateSessionParametersRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 51);

/**
 * @generated from message hdlctrl.v1.UpdateSessionParametersResponse
 */
export type UpdateSessionParametersResponse = Message<"hdlctrl.v1.UpdateSessionParametersResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.UpdateSessionParametersResponse.
 * Use `create(UpdateSessionParametersResponseSchema)` to create a new message.
 */
export const UpdateSessionParametersResponseSchema: GenMessage<UpdateSessionParametersResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 52);

/**
 * @generated from message hdlctrl.v1.UpdateSessionExtraSettingsRequest
 */
export type UpdateSessionExtraSettingsRequest = Message<"hdlctrl.v1.UpdateSessionExtraSettingsRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: optional bool auto_upgrade = 2;
   */
  autoUpgrade?: boolean;

  /**
   * @generated from field: optional string memo = 3;
   */
  memo?: string;
};

/**
 * Describes the message hdlctrl.v1.UpdateSessionExtraSettingsRequest.
 * Use `create(UpdateSessionExtraSettingsRequestSchema)` to create a new message.
 */
export const UpdateSessionExtraSettingsRequestSchema: GenMessage<UpdateSessionExtraSettingsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 53);

/**
 * @generated from message hdlctrl.v1.UpdateSessionExtraSettingsResponse
 */
export type UpdateSessionExtraSettingsResponse = Message<"hdlctrl.v1.UpdateSessionExtraSettingsResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.UpdateSessionExtraSettingsResponse.
 * Use `create(UpdateSessionExtraSettingsResponseSchema)` to create a new message.
 */
export const UpdateSessionExtraSettingsResponseSchema: GenMessage<UpdateSessionExtraSettingsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 54);

/**
 * @generated from message hdlctrl.v1.ListUsersInSessionRequest
 */
export type ListUsersInSessionRequest = Message<"hdlctrl.v1.ListUsersInSessionRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.ListUsersInSessionRequest.
 * Use `create(ListUsersInSessionRequestSchema)` to create a new message.
 */
export const ListUsersInSessionRequestSchema: GenMessage<ListUsersInSessionRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 55);

/**
 * @generated from message hdlctrl.v1.ListUsersInSessionResponse
 */
export type ListUsersInSessionResponse = Message<"hdlctrl.v1.ListUsersInSessionResponse"> & {
  /**
   * @generated from field: repeated headless.v1.UserInSession users = 1;
   */
  users: UserInSession[];
};

/**
 * Describes the message hdlctrl.v1.ListUsersInSessionResponse.
 * Use `create(ListUsersInSessionResponseSchema)` to create a new message.
 */
export const ListUsersInSessionResponseSchema: GenMessage<ListUsersInSessionResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 56);

/**
 * @generated from message hdlctrl.v1.HeadlessHostSettings
 */
export type HeadlessHostSettings = Message<"hdlctrl.v1.HeadlessHostSettings"> & {
  /**
   * @generated from field: optional string universe_id = 1;
   */
  universeId?: string;

  /**
   * @generated from field: float tick_rate = 2;
   */
  tickRate: number;

  /**
   * @generated from field: int32 max_concurrent_asset_transfers = 3;
   */
  maxConcurrentAssetTransfers: number;

  /**
   * @generated from field: optional string username_override = 4;
   */
  usernameOverride?: string;

  /**
   * @generated from field: repeated headless.v1.AllowedAccessEntry allowed_url_hosts = 5;
   */
  allowedUrlHosts: AllowedAccessEntry[];

  /**
   * @generated from field: repeated string auto_spawn_items = 6;
   */
  autoSpawnItems: string[];
};

/**
 * Describes the message hdlctrl.v1.HeadlessHostSettings.
 * Use `create(HeadlessHostSettingsSchema)` to create a new message.
 */
export const HeadlessHostSettingsSchema: GenMessage<HeadlessHostSettings> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 57);

/**
 * @generated from message hdlctrl.v1.HeadlessHost
 */
export type HeadlessHost = Message<"hdlctrl.v1.HeadlessHost"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string resonite_version = 4;
   */
  resoniteVersion: string;

  /**
   * @generated from field: string app_version = 11;
   */
  appVersion: string;

  /**
   * @generated from field: string account_id = 5;
   */
  accountId: string;

  /**
   * @generated from field: string account_name = 6;
   */
  accountName: string;

  /**
   * @generated from field: float fps = 7;
   */
  fps: number;

  /**
   * @generated from field: int64 storage_quota_bytes = 8;
   */
  storageQuotaBytes: bigint;

  /**
   * @generated from field: int64 storage_used_bytes = 9;
   */
  storageUsedBytes: bigint;

  /**
   * @generated from field: hdlctrl.v1.HeadlessHostStatus status = 10;
   */
  status: HeadlessHostStatus;

  /**
   * @generated from field: hdlctrl.v1.HeadlessHostAutoUpdatePolicy auto_update_policy = 12;
   */
  autoUpdatePolicy: HeadlessHostAutoUpdatePolicy;

  /**
   * @generated from field: string memo = 13;
   */
  memo: string;
};

/**
 * Describes the message hdlctrl.v1.HeadlessHost.
 * Use `create(HeadlessHostSchema)` to create a new message.
 */
export const HeadlessHostSchema: GenMessage<HeadlessHost> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 58);

/**
 * @generated from message hdlctrl.v1.Session
 */
export type Session = Message<"hdlctrl.v1.Session"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string host_id = 3;
   */
  hostId: string;

  /**
   * @generated from field: hdlctrl.v1.SessionStatus status = 4;
   */
  status: SessionStatus;

  /**
   * @generated from field: google.protobuf.Timestamp started_at = 5;
   */
  startedAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp ended_at = 6;
   */
  endedAt?: Timestamp;

  /**
   * @generated from field: headless.v1.WorldStartupParameters startup_parameters = 7;
   */
  startupParameters?: WorldStartupParameters;

  /**
   * @generated from field: optional headless.v1.Session current_state = 8;
   */
  currentState?: Session$1;

  /**
   * @generated from field: optional string owner_id = 9;
   */
  ownerId?: string;

  /**
   * @generated from field: bool auto_upgrade = 10;
   */
  autoUpgrade: boolean;

  /**
   * @generated from field: string memo = 11;
   */
  memo: string;
};

/**
 * Describes the message hdlctrl.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema: GenMessage<Session> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 59);

/**
 * @generated from message hdlctrl.v1.HeadlessAccount
 */
export type HeadlessAccount = Message<"hdlctrl.v1.HeadlessAccount"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string user_name = 2;
   */
  userName: string;

  /**
   * @generated from field: string icon_url = 3;
   */
  iconUrl: string;
};

/**
 * Describes the message hdlctrl.v1.HeadlessAccount.
 * Use `create(HeadlessAccountSchema)` to create a new message.
 */
export const HeadlessAccountSchema: GenMessage<HeadlessAccount> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 60);

/**
 * @generated from enum hdlctrl.v1.HeadlessHostStatus
 */
export enum HeadlessHostStatus {
  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_STARTING = 1;
   */
  STARTING = 1,

  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_STOPPING = 3;
   */
  STOPPING = 3,

  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_EXITED = 4;
   */
  EXITED = 4,

  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_CRASHED = 5;
   */
  CRASHED = 5,
}

/**
 * Describes the enum hdlctrl.v1.HeadlessHostStatus.
 */
export const HeadlessHostStatusSchema: GenEnum<HeadlessHostStatus> = /*@__PURE__*/
  enumDesc(file_hdlctrl_v1_controller, 0);

/**
 * @generated from enum hdlctrl.v1.SessionStatus
 */
export enum SessionStatus {
  /**
   * @generated from enum value: SESSION_STATUS_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: SESSION_STATUS_STARTING = 1;
   */
  STARTING = 1,

  /**
   * @generated from enum value: SESSION_STATUS_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: SESSION_STATUS_ENDED = 3;
   */
  ENDED = 3,

  /**
   * @generated from enum value: SESSION_STATUS_CRASHED = 4;
   */
  CRASHED = 4,
}

/**
 * Describes the enum hdlctrl.v1.SessionStatus.
 */
export const SessionStatusSchema: GenEnum<SessionStatus> = /*@__PURE__*/
  enumDesc(file_hdlctrl_v1_controller, 1);

/**
 * @generated from enum hdlctrl.v1.HeadlessHostAutoUpdatePolicy
 */
export enum HeadlessHostAutoUpdatePolicy {
  /**
   * @generated from enum value: HEADLESS_HOST_AUTO_UPDATE_POLICY_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * 自動更新しない
   *
   * @generated from enum value: HEADLESS_HOST_AUTO_UPDATE_POLICY_NEVER = 1;
   */
  NEVER = 1,

  /**
   * ユーザがいない場合のみ自動更新する
   *
   * @generated from enum value: HEADLESS_HOST_AUTO_UPDATE_POLICY_USERS_EMPTY = 2;
   */
  USERS_EMPTY = 2,
}

/**
 * Describes the enum hdlctrl.v1.HeadlessHostAutoUpdatePolicy.
 */
export const HeadlessHostAutoUpdatePolicySchema: GenEnum<HeadlessHostAutoUpdatePolicy> = /*@__PURE__*/
  enumDesc(file_hdlctrl_v1_controller, 2);

/**
 * @generated from service hdlctrl.v1.ControllerService
 */
export const ControllerService: GenService<{
  /**
   * ホスト系
   *
   * @generated from rpc hdlctrl.v1.ControllerService.ListHeadlessHost
   */
  listHeadlessHost: {
    methodKind: "unary";
    input: typeof ListHeadlessHostRequestSchema;
    output: typeof ListHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.GetHeadlessHost
   */
  getHeadlessHost: {
    methodKind: "unary";
    input: typeof GetHeadlessHostRequestSchema;
    output: typeof GetHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.GetHeadlessHostLogs
   */
  getHeadlessHostLogs: {
    methodKind: "unary";
    input: typeof GetHeadlessHostLogsRequestSchema;
    output: typeof GetHeadlessHostLogsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ShutdownHeadlessHost
   */
  shutdownHeadlessHost: {
    methodKind: "unary";
    input: typeof ShutdownHeadlessHostRequestSchema;
    output: typeof ShutdownHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.UpdateHeadlessHostSettings
   */
  updateHeadlessHostSettings: {
    methodKind: "unary";
    input: typeof UpdateHeadlessHostSettingsRequestSchema;
    output: typeof UpdateHeadlessHostSettingsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.RestartHeadlessHost
   */
  restartHeadlessHost: {
    methodKind: "unary";
    input: typeof RestartHeadlessHostRequestSchema;
    output: typeof RestartHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.StartHeadlessHost
   */
  startHeadlessHost: {
    methodKind: "unary";
    input: typeof StartHeadlessHostRequestSchema;
    output: typeof StartHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.AllowHostAccess
   */
  allowHostAccess: {
    methodKind: "unary";
    input: typeof AllowHostAccessRequestSchema;
    output: typeof AllowHostAccessResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.DenyHostAccess
   */
  denyHostAccess: {
    methodKind: "unary";
    input: typeof DenyHostAccessRequestSchema;
    output: typeof DenyHostAccessResponseSchema;
  },
  /**
   * アカウント系
   *
   * @generated from rpc hdlctrl.v1.ControllerService.CreateHeadlessAccount
   */
  createHeadlessAccount: {
    methodKind: "unary";
    input: typeof CreateHeadlessAccountRequestSchema;
    output: typeof CreateHeadlessAccountResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ListHeadlessAccounts
   */
  listHeadlessAccounts: {
    methodKind: "unary";
    input: typeof ListHeadlessAccountsRequestSchema;
    output: typeof ListHeadlessAccountsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ListHeadlessHostImageTags
   */
  listHeadlessHostImageTags: {
    methodKind: "unary";
    input: typeof ListHeadlessHostImageTagsRequestSchema;
    output: typeof ListHeadlessHostImageTagsResponseSchema;
  },
  /**
   * Cloud系
   *
   * @generated from rpc hdlctrl.v1.ControllerService.FetchWorldInfo
   */
  fetchWorldInfo: {
    methodKind: "unary";
    input: typeof FetchWorldInfoRequestSchema;
    output: typeof FetchWorldInfoResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.SearchUserInfo
   */
  searchUserInfo: {
    methodKind: "unary";
    input: typeof SearchUserInfoRequestSchema;
    output: typeof SearchUserInfoResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.GetFriendRequests
   */
  getFriendRequests: {
    methodKind: "unary";
    input: typeof GetFriendRequestsRequestSchema;
    output: typeof GetFriendRequestsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.AcceptFriendRequests
   */
  acceptFriendRequests: {
    methodKind: "unary";
    input: typeof AcceptFriendRequestsRequestSchema;
    output: typeof AcceptFriendRequestsResponseSchema;
  },
  /**
   * セッション系
   *
   * @generated from rpc hdlctrl.v1.ControllerService.SearchSessions
   */
  searchSessions: {
    methodKind: "unary";
    input: typeof SearchSessionsRequestSchema;
    output: typeof SearchSessionsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.GetSessionDetails
   */
  getSessionDetails: {
    methodKind: "unary";
    input: typeof GetSessionDetailsRequestSchema;
    output: typeof GetSessionDetailsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.StartWorld
   */
  startWorld: {
    methodKind: "unary";
    input: typeof StartWorldRequestSchema;
    output: typeof StartWorldResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.StopSession
   */
  stopSession: {
    methodKind: "unary";
    input: typeof StopSessionRequestSchema;
    output: typeof StopSessionResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.DeleteEndedSession
   */
  deleteEndedSession: {
    methodKind: "unary";
    input: typeof DeleteEndedSessionRequestSchema;
    output: typeof DeleteEndedSessionResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.SaveSessionWorld
   */
  saveSessionWorld: {
    methodKind: "unary";
    input: typeof SaveSessionWorldRequestSchema;
    output: typeof SaveSessionWorldResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.InviteUser
   */
  inviteUser: {
    methodKind: "unary";
    input: typeof InviteUserRequestSchema;
    output: typeof InviteUserResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.UpdateUserRole
   */
  updateUserRole: {
    methodKind: "unary";
    input: typeof UpdateUserRoleRequestSchema;
    output: typeof UpdateUserRoleResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.UpdateSessionParameters
   */
  updateSessionParameters: {
    methodKind: "unary";
    input: typeof UpdateSessionParametersRequestSchema;
    output: typeof UpdateSessionParametersResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.UpdateSessionExtraSettings
   */
  updateSessionExtraSettings: {
    methodKind: "unary";
    input: typeof UpdateSessionExtraSettingsRequestSchema;
    output: typeof UpdateSessionExtraSettingsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ListUsersInSession
   */
  listUsersInSession: {
    methodKind: "unary";
    input: typeof ListUsersInSessionRequestSchema;
    output: typeof ListUsersInSessionResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.KickUser
   */
  kickUser: {
    methodKind: "unary";
    input: typeof KickUserRequestSchema;
    output: typeof KickUserResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.BanUser
   */
  banUser: {
    methodKind: "unary";
    input: typeof BanUserRequestSchema;
    output: typeof BanUserResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_hdlctrl_v1_controller, 0);

