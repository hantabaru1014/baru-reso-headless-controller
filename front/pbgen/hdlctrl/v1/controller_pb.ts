// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file hdlctrl/v1/controller.proto (package hdlctrl.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { BanUserRequest as BanUserRequest$1, FetchWorldInfoResponseSchema, KickUserRequest as KickUserRequest$1, SearchUserInfoRequest as SearchUserInfoRequest$1, SearchUserInfoResponseSchema, Session, UpdateSessionParametersRequest as UpdateSessionParametersRequest$1, UpdateUserRoleRequest as UpdateUserRoleRequest$1, UserInSession, WorldStartupParameters } from "../../headless/v1/headless_pb";
import { file_headless_v1_headless } from "../../headless/v1/headless_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file hdlctrl/v1/controller.proto.
 */
export const file_hdlctrl_v1_controller: GenFile = /*@__PURE__*/
  fileDesc("ChtoZGxjdHJsL3YxL2NvbnRyb2xsZXIucHJvdG8SCmhkbGN0cmwudjEioQEKGkdldEhlYWRsZXNzSG9zdExvZ3NSZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSDwoFbGltaXQYAiABKAVIABIrCgV1bnRpbBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIABIrCgVzaW5jZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAEIHCgVxdWVyeSKuAQobR2V0SGVhZGxlc3NIb3N0TG9nc1Jlc3BvbnNlEjkKBGxvZ3MYASADKAsyKy5oZGxjdHJsLnYxLkdldEhlYWRsZXNzSG9zdExvZ3NSZXNwb25zZS5Mb2caVAoDTG9nEi0KCXRpbWVzdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEAoIaXNfZXJyb3IYAiABKAgSDAoEYm9keRgDIAEoCSJgChVTZWFyY2hVc2VySW5mb1JlcXVlc3QSDwoHaG9zdF9pZBgBIAEoCRI2CgpwYXJhbWV0ZXJzGAIgASgLMiIuaGVhZGxlc3MudjEuU2VhcmNoVXNlckluZm9SZXF1ZXN0IlQKD0tpY2tVc2VyUmVxdWVzdBIPCgdob3N0X2lkGAEgASgJEjAKCnBhcmFtZXRlcnMYAiABKAsyHC5oZWFkbGVzcy52MS5LaWNrVXNlclJlcXVlc3QiEgoQS2lja1VzZXJSZXNwb25zZSJSCg5CYW5Vc2VyUmVxdWVzdBIPCgdob3N0X2lkGAEgASgJEi8KCnBhcmFtZXRlcnMYAiABKAsyGy5oZWFkbGVzcy52MS5CYW5Vc2VyUmVxdWVzdCIRCg9CYW5Vc2VyUmVzcG9uc2UiNQoVRmV0Y2hXb3JsZEluZm9SZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSCwoDdXJsGAIgASgJIhkKF0xpc3RIZWFkbGVzc0hvc3RSZXF1ZXN0IkMKGExpc3RIZWFkbGVzc0hvc3RSZXNwb25zZRInCgVob3N0cxgBIAMoCzIYLmhkbGN0cmwudjEuSGVhZGxlc3NIb3N0IiQKFkdldEhlYWRsZXNzSG9zdFJlcXVlc3QSCgoCaWQYASABKAkiQQoXR2V0SGVhZGxlc3NIb3N0UmVzcG9uc2USJgoEaG9zdBgBIAEoCzIYLmhkbGN0cmwudjEuSGVhZGxlc3NIb3N0IjcKFkFkZEhlYWRsZXNzSG9zdFJlcXVlc3QSDAoEbmFtZRgBIAEoCRIPCgdhZGRyZXNzGAIgASgJIkEKF0FkZEhlYWRsZXNzSG9zdFJlc3BvbnNlEiYKBGhvc3QYASABKAsyGC5oZGxjdHJsLnYxLkhlYWRsZXNzSG9zdCInChlSZW1vdmVIZWFkbGVzc0hvc3RSZXF1ZXN0EgoKAmlkGAEgASgJIhwKGlJlbW92ZUhlYWRsZXNzSG9zdFJlc3BvbnNlIiYKE0xpc3RTZXNzaW9uc1JlcXVlc3QSDwoHaG9zdF9pZBgBIAEoCSI+ChRMaXN0U2Vzc2lvbnNSZXNwb25zZRImCghzZXNzaW9ucxgBIAMoCzIULmhlYWRsZXNzLnYxLlNlc3Npb24iPwoYR2V0U2Vzc2lvbkRldGFpbHNSZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSEgoKc2Vzc2lvbl9pZBgCIAEoCSJCChlHZXRTZXNzaW9uRGV0YWlsc1Jlc3BvbnNlEiUKB3Nlc3Npb24YASABKAsyFC5oZWFkbGVzcy52MS5TZXNzaW9uIl0KEVN0YXJ0V29ybGRSZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSNwoKcGFyYW1ldGVycxgCIAEoCzIjLmhlYWRsZXNzLnYxLldvcmxkU3RhcnR1cFBhcmFtZXRlcnMiQgoSU3RhcnRXb3JsZFJlc3BvbnNlEiwKDm9wZW5lZF9zZXNzaW9uGAEgASgLMhQuaGVhZGxlc3MudjEuU2Vzc2lvbiI5ChJTdG9wU2Vzc2lvblJlcXVlc3QSDwoHaG9zdF9pZBgBIAEoCRISCgpzZXNzaW9uX2lkGAIgASgJIhUKE1N0b3BTZXNzaW9uUmVzcG9uc2UiPgoXU2F2ZVNlc3Npb25Xb3JsZFJlcXVlc3QSDwoHaG9zdF9pZBgBIAEoCRISCgpzZXNzaW9uX2lkGAIgASgJIhoKGFNhdmVTZXNzaW9uV29ybGRSZXNwb25zZSJoChFJbnZpdGVVc2VyUmVxdWVzdBIPCgdob3N0X2lkGAEgASgJEhIKCnNlc3Npb25faWQYAiABKAkSEQoHdXNlcl9pZBgDIAEoCUgAEhMKCXVzZXJfbmFtZRgEIAEoCUgAQgYKBHVzZXIiFAoSSW52aXRlVXNlclJlc3BvbnNlImAKFVVwZGF0ZVVzZXJSb2xlUmVxdWVzdBIPCgdob3N0X2lkGAEgASgJEjYKCnBhcmFtZXRlcnMYAiABKAsyIi5oZWFkbGVzcy52MS5VcGRhdGVVc2VyUm9sZVJlcXVlc3QiJgoWVXBkYXRlVXNlclJvbGVSZXNwb25zZRIMCgRyb2xlGAEgASgJInIKHlVwZGF0ZVNlc3Npb25QYXJhbWV0ZXJzUmVxdWVzdBIPCgdob3N0X2lkGAEgASgJEj8KCnBhcmFtZXRlcnMYAiABKAsyKy5oZWFkbGVzcy52MS5VcGRhdGVTZXNzaW9uUGFyYW1ldGVyc1JlcXVlc3QiIQofVXBkYXRlU2Vzc2lvblBhcmFtZXRlcnNSZXNwb25zZSJAChlMaXN0VXNlcnNJblNlc3Npb25SZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSEgoKc2Vzc2lvbl9pZBgCIAEoCSJHChpMaXN0VXNlcnNJblNlc3Npb25SZXNwb25zZRIpCgV1c2VycxgBIAMoCzIaLmhlYWRsZXNzLnYxLlVzZXJJblNlc3Npb24iwwEKDEhlYWRsZXNzSG9zdBIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEg8KB2FkZHJlc3MYAyABKAkSGAoQcmVzb25pdGVfdmVyc2lvbhgEIAEoCRISCgphY2NvdW50X2lkGAUgASgJEhQKDGFjY291bnRfbmFtZRgGIAEoCRILCgNmcHMYByABKAISGwoTc3RvcmFnZV9xdW90YV9ieXRlcxgIIAEoAxIaChJzdG9yYWdlX3VzZWRfYnl0ZXMYCSABKAMypQsKEUNvbnRyb2xsZXJTZXJ2aWNlEl0KEExpc3RIZWFkbGVzc0hvc3QSIy5oZGxjdHJsLnYxLkxpc3RIZWFkbGVzc0hvc3RSZXF1ZXN0GiQuaGRsY3RybC52MS5MaXN0SGVhZGxlc3NIb3N0UmVzcG9uc2USWgoPR2V0SGVhZGxlc3NIb3N0EiIuaGRsY3RybC52MS5HZXRIZWFkbGVzc0hvc3RSZXF1ZXN0GiMuaGRsY3RybC52MS5HZXRIZWFkbGVzc0hvc3RSZXNwb25zZRJmChNHZXRIZWFkbGVzc0hvc3RMb2dzEiYuaGRsY3RybC52MS5HZXRIZWFkbGVzc0hvc3RMb2dzUmVxdWVzdBonLmhkbGN0cmwudjEuR2V0SGVhZGxlc3NIb3N0TG9nc1Jlc3BvbnNlElgKDkZldGNoV29ybGRJbmZvEiEuaGRsY3RybC52MS5GZXRjaFdvcmxkSW5mb1JlcXVlc3QaIy5oZWFkbGVzcy52MS5GZXRjaFdvcmxkSW5mb1Jlc3BvbnNlElgKDlNlYXJjaFVzZXJJbmZvEiEuaGRsY3RybC52MS5TZWFyY2hVc2VySW5mb1JlcXVlc3QaIy5oZWFkbGVzcy52MS5TZWFyY2hVc2VySW5mb1Jlc3BvbnNlElEKDExpc3RTZXNzaW9ucxIfLmhkbGN0cmwudjEuTGlzdFNlc3Npb25zUmVxdWVzdBogLmhkbGN0cmwudjEuTGlzdFNlc3Npb25zUmVzcG9uc2USYAoRR2V0U2Vzc2lvbkRldGFpbHMSJC5oZGxjdHJsLnYxLkdldFNlc3Npb25EZXRhaWxzUmVxdWVzdBolLmhkbGN0cmwudjEuR2V0U2Vzc2lvbkRldGFpbHNSZXNwb25zZRJLCgpTdGFydFdvcmxkEh0uaGRsY3RybC52MS5TdGFydFdvcmxkUmVxdWVzdBoeLmhkbGN0cmwudjEuU3RhcnRXb3JsZFJlc3BvbnNlEk4KC1N0b3BTZXNzaW9uEh4uaGRsY3RybC52MS5TdG9wU2Vzc2lvblJlcXVlc3QaHy5oZGxjdHJsLnYxLlN0b3BTZXNzaW9uUmVzcG9uc2USXQoQU2F2ZVNlc3Npb25Xb3JsZBIjLmhkbGN0cmwudjEuU2F2ZVNlc3Npb25Xb3JsZFJlcXVlc3QaJC5oZGxjdHJsLnYxLlNhdmVTZXNzaW9uV29ybGRSZXNwb25zZRJLCgpJbnZpdGVVc2VyEh0uaGRsY3RybC52MS5JbnZpdGVVc2VyUmVxdWVzdBoeLmhkbGN0cmwudjEuSW52aXRlVXNlclJlc3BvbnNlElcKDlVwZGF0ZVVzZXJSb2xlEiEuaGRsY3RybC52MS5VcGRhdGVVc2VyUm9sZVJlcXVlc3QaIi5oZGxjdHJsLnYxLlVwZGF0ZVVzZXJSb2xlUmVzcG9uc2UScgoXVXBkYXRlU2Vzc2lvblBhcmFtZXRlcnMSKi5oZGxjdHJsLnYxLlVwZGF0ZVNlc3Npb25QYXJhbWV0ZXJzUmVxdWVzdBorLmhkbGN0cmwudjEuVXBkYXRlU2Vzc2lvblBhcmFtZXRlcnNSZXNwb25zZRJjChJMaXN0VXNlcnNJblNlc3Npb24SJS5oZGxjdHJsLnYxLkxpc3RVc2Vyc0luU2Vzc2lvblJlcXVlc3QaJi5oZGxjdHJsLnYxLkxpc3RVc2Vyc0luU2Vzc2lvblJlc3BvbnNlEkUKCEtpY2tVc2VyEhsuaGRsY3RybC52MS5LaWNrVXNlclJlcXVlc3QaHC5oZGxjdHJsLnYxLktpY2tVc2VyUmVzcG9uc2USQgoHQmFuVXNlchIaLmhkbGN0cmwudjEuQmFuVXNlclJlcXVlc3QaGy5oZGxjdHJsLnYxLkJhblVzZXJSZXNwb25zZUK9AQoOY29tLmhkbGN0cmwudjFCD0NvbnRyb2xsZXJQcm90b1ABWlFnaXRodWIuY29tL2hhbnRhYmFydTEwMTQvYmFydS1yZXNvLWhlYWRsZXNzLWNvbnRyb2xsZXIvcGJnZW4vaGRsY3RybC92MTtoZGxjdHJsdjGiAgNIWFiqAgpIZGxjdHJsLlYxygIKSGRsY3RybFxWMeICFkhkbGN0cmxcVjFcR1BCTWV0YWRhdGHqAgtIZGxjdHJsOjpWMWIGcHJvdG8z", [file_headless_v1_headless, file_google_protobuf_timestamp]);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostLogsRequest
 */
export type GetHeadlessHostLogsRequest = Message<"hdlctrl.v1.GetHeadlessHostLogsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from oneof hdlctrl.v1.GetHeadlessHostLogsRequest.query
   */
  query: {
    /**
     * limit が指定されている場合は、最新のログから limit 件取得する
     *
     * @generated from field: int32 limit = 2;
     */
    value: number;
    case: "limit";
  } | {
    /**
     * until が指定されている場合は、until 以前のログを全て取得する
     *
     * @generated from field: google.protobuf.Timestamp until = 3;
     */
    value: Timestamp;
    case: "until";
  } | {
    /**
     * since が指定されている場合は、since 以降のログを全て取得する
     *
     * @generated from field: google.protobuf.Timestamp since = 4;
     */
    value: Timestamp;
    case: "since";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostLogsRequest.
 * Use `create(GetHeadlessHostLogsRequestSchema)` to create a new message.
 */
export const GetHeadlessHostLogsRequestSchema: GenMessage<GetHeadlessHostLogsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 0);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostLogsResponse
 */
export type GetHeadlessHostLogsResponse = Message<"hdlctrl.v1.GetHeadlessHostLogsResponse"> & {
  /**
   * 時系列に並んだログ
   *
   * @generated from field: repeated hdlctrl.v1.GetHeadlessHostLogsResponse.Log logs = 1;
   */
  logs: GetHeadlessHostLogsResponse_Log[];
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostLogsResponse.
 * Use `create(GetHeadlessHostLogsResponseSchema)` to create a new message.
 */
export const GetHeadlessHostLogsResponseSchema: GenMessage<GetHeadlessHostLogsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 1);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostLogsResponse.Log
 */
export type GetHeadlessHostLogsResponse_Log = Message<"hdlctrl.v1.GetHeadlessHostLogsResponse.Log"> & {
  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: bool is_error = 2;
   */
  isError: boolean;

  /**
   * @generated from field: string body = 3;
   */
  body: string;
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostLogsResponse.Log.
 * Use `create(GetHeadlessHostLogsResponse_LogSchema)` to create a new message.
 */
export const GetHeadlessHostLogsResponse_LogSchema: GenMessage<GetHeadlessHostLogsResponse_Log> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 1, 0);

/**
 * @generated from message hdlctrl.v1.SearchUserInfoRequest
 */
export type SearchUserInfoRequest = Message<"hdlctrl.v1.SearchUserInfoRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.SearchUserInfoRequest parameters = 2;
   */
  parameters?: SearchUserInfoRequest$1;
};

/**
 * Describes the message hdlctrl.v1.SearchUserInfoRequest.
 * Use `create(SearchUserInfoRequestSchema)` to create a new message.
 */
export const SearchUserInfoRequestSchema: GenMessage<SearchUserInfoRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 2);

/**
 * @generated from message hdlctrl.v1.KickUserRequest
 */
export type KickUserRequest = Message<"hdlctrl.v1.KickUserRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.KickUserRequest parameters = 2;
   */
  parameters?: KickUserRequest$1;
};

/**
 * Describes the message hdlctrl.v1.KickUserRequest.
 * Use `create(KickUserRequestSchema)` to create a new message.
 */
export const KickUserRequestSchema: GenMessage<KickUserRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 3);

/**
 * @generated from message hdlctrl.v1.KickUserResponse
 */
export type KickUserResponse = Message<"hdlctrl.v1.KickUserResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.KickUserResponse.
 * Use `create(KickUserResponseSchema)` to create a new message.
 */
export const KickUserResponseSchema: GenMessage<KickUserResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 4);

/**
 * @generated from message hdlctrl.v1.BanUserRequest
 */
export type BanUserRequest = Message<"hdlctrl.v1.BanUserRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.BanUserRequest parameters = 2;
   */
  parameters?: BanUserRequest$1;
};

/**
 * Describes the message hdlctrl.v1.BanUserRequest.
 * Use `create(BanUserRequestSchema)` to create a new message.
 */
export const BanUserRequestSchema: GenMessage<BanUserRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 5);

/**
 * @generated from message hdlctrl.v1.BanUserResponse
 */
export type BanUserResponse = Message<"hdlctrl.v1.BanUserResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.BanUserResponse.
 * Use `create(BanUserResponseSchema)` to create a new message.
 */
export const BanUserResponseSchema: GenMessage<BanUserResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 6);

/**
 * @generated from message hdlctrl.v1.FetchWorldInfoRequest
 */
export type FetchWorldInfoRequest = Message<"hdlctrl.v1.FetchWorldInfoRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;
};

/**
 * Describes the message hdlctrl.v1.FetchWorldInfoRequest.
 * Use `create(FetchWorldInfoRequestSchema)` to create a new message.
 */
export const FetchWorldInfoRequestSchema: GenMessage<FetchWorldInfoRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 7);

/**
 * @generated from message hdlctrl.v1.ListHeadlessHostRequest
 */
export type ListHeadlessHostRequest = Message<"hdlctrl.v1.ListHeadlessHostRequest"> & {
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessHostRequest.
 * Use `create(ListHeadlessHostRequestSchema)` to create a new message.
 */
export const ListHeadlessHostRequestSchema: GenMessage<ListHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 8);

/**
 * @generated from message hdlctrl.v1.ListHeadlessHostResponse
 */
export type ListHeadlessHostResponse = Message<"hdlctrl.v1.ListHeadlessHostResponse"> & {
  /**
   * @generated from field: repeated hdlctrl.v1.HeadlessHost hosts = 1;
   */
  hosts: HeadlessHost[];
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessHostResponse.
 * Use `create(ListHeadlessHostResponseSchema)` to create a new message.
 */
export const ListHeadlessHostResponseSchema: GenMessage<ListHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 9);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostRequest
 */
export type GetHeadlessHostRequest = Message<"hdlctrl.v1.GetHeadlessHostRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostRequest.
 * Use `create(GetHeadlessHostRequestSchema)` to create a new message.
 */
export const GetHeadlessHostRequestSchema: GenMessage<GetHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 10);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostResponse
 */
export type GetHeadlessHostResponse = Message<"hdlctrl.v1.GetHeadlessHostResponse"> & {
  /**
   * @generated from field: hdlctrl.v1.HeadlessHost host = 1;
   */
  host?: HeadlessHost;
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostResponse.
 * Use `create(GetHeadlessHostResponseSchema)` to create a new message.
 */
export const GetHeadlessHostResponseSchema: GenMessage<GetHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 11);

/**
 * @generated from message hdlctrl.v1.AddHeadlessHostRequest
 */
export type AddHeadlessHostRequest = Message<"hdlctrl.v1.AddHeadlessHostRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string address = 2;
   */
  address: string;
};

/**
 * Describes the message hdlctrl.v1.AddHeadlessHostRequest.
 * Use `create(AddHeadlessHostRequestSchema)` to create a new message.
 */
export const AddHeadlessHostRequestSchema: GenMessage<AddHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 12);

/**
 * @generated from message hdlctrl.v1.AddHeadlessHostResponse
 */
export type AddHeadlessHostResponse = Message<"hdlctrl.v1.AddHeadlessHostResponse"> & {
  /**
   * @generated from field: hdlctrl.v1.HeadlessHost host = 1;
   */
  host?: HeadlessHost;
};

/**
 * Describes the message hdlctrl.v1.AddHeadlessHostResponse.
 * Use `create(AddHeadlessHostResponseSchema)` to create a new message.
 */
export const AddHeadlessHostResponseSchema: GenMessage<AddHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 13);

/**
 * @generated from message hdlctrl.v1.RemoveHeadlessHostRequest
 */
export type RemoveHeadlessHostRequest = Message<"hdlctrl.v1.RemoveHeadlessHostRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message hdlctrl.v1.RemoveHeadlessHostRequest.
 * Use `create(RemoveHeadlessHostRequestSchema)` to create a new message.
 */
export const RemoveHeadlessHostRequestSchema: GenMessage<RemoveHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 14);

/**
 * @generated from message hdlctrl.v1.RemoveHeadlessHostResponse
 */
export type RemoveHeadlessHostResponse = Message<"hdlctrl.v1.RemoveHeadlessHostResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.RemoveHeadlessHostResponse.
 * Use `create(RemoveHeadlessHostResponseSchema)` to create a new message.
 */
export const RemoveHeadlessHostResponseSchema: GenMessage<RemoveHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 15);

/**
 * @generated from message hdlctrl.v1.ListSessionsRequest
 */
export type ListSessionsRequest = Message<"hdlctrl.v1.ListSessionsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;
};

/**
 * Describes the message hdlctrl.v1.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema: GenMessage<ListSessionsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 16);

/**
 * @generated from message hdlctrl.v1.ListSessionsResponse
 */
export type ListSessionsResponse = Message<"hdlctrl.v1.ListSessionsResponse"> & {
  /**
   * @generated from field: repeated headless.v1.Session sessions = 1;
   */
  sessions: Session[];
};

/**
 * Describes the message hdlctrl.v1.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema: GenMessage<ListSessionsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 17);

/**
 * @generated from message hdlctrl.v1.GetSessionDetailsRequest
 */
export type GetSessionDetailsRequest = Message<"hdlctrl.v1.GetSessionDetailsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.GetSessionDetailsRequest.
 * Use `create(GetSessionDetailsRequestSchema)` to create a new message.
 */
export const GetSessionDetailsRequestSchema: GenMessage<GetSessionDetailsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 18);

/**
 * @generated from message hdlctrl.v1.GetSessionDetailsResponse
 */
export type GetSessionDetailsResponse = Message<"hdlctrl.v1.GetSessionDetailsResponse"> & {
  /**
   * @generated from field: headless.v1.Session session = 1;
   */
  session?: Session;
};

/**
 * Describes the message hdlctrl.v1.GetSessionDetailsResponse.
 * Use `create(GetSessionDetailsResponseSchema)` to create a new message.
 */
export const GetSessionDetailsResponseSchema: GenMessage<GetSessionDetailsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 19);

/**
 * @generated from message hdlctrl.v1.StartWorldRequest
 */
export type StartWorldRequest = Message<"hdlctrl.v1.StartWorldRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.WorldStartupParameters parameters = 2;
   */
  parameters?: WorldStartupParameters;
};

/**
 * Describes the message hdlctrl.v1.StartWorldRequest.
 * Use `create(StartWorldRequestSchema)` to create a new message.
 */
export const StartWorldRequestSchema: GenMessage<StartWorldRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 20);

/**
 * @generated from message hdlctrl.v1.StartWorldResponse
 */
export type StartWorldResponse = Message<"hdlctrl.v1.StartWorldResponse"> & {
  /**
   * @generated from field: headless.v1.Session opened_session = 1;
   */
  openedSession?: Session;
};

/**
 * Describes the message hdlctrl.v1.StartWorldResponse.
 * Use `create(StartWorldResponseSchema)` to create a new message.
 */
export const StartWorldResponseSchema: GenMessage<StartWorldResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 21);

/**
 * @generated from message hdlctrl.v1.StopSessionRequest
 */
export type StopSessionRequest = Message<"hdlctrl.v1.StopSessionRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.StopSessionRequest.
 * Use `create(StopSessionRequestSchema)` to create a new message.
 */
export const StopSessionRequestSchema: GenMessage<StopSessionRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 22);

/**
 * @generated from message hdlctrl.v1.StopSessionResponse
 */
export type StopSessionResponse = Message<"hdlctrl.v1.StopSessionResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.StopSessionResponse.
 * Use `create(StopSessionResponseSchema)` to create a new message.
 */
export const StopSessionResponseSchema: GenMessage<StopSessionResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 23);

/**
 * @generated from message hdlctrl.v1.SaveSessionWorldRequest
 */
export type SaveSessionWorldRequest = Message<"hdlctrl.v1.SaveSessionWorldRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.SaveSessionWorldRequest.
 * Use `create(SaveSessionWorldRequestSchema)` to create a new message.
 */
export const SaveSessionWorldRequestSchema: GenMessage<SaveSessionWorldRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 24);

/**
 * @generated from message hdlctrl.v1.SaveSessionWorldResponse
 */
export type SaveSessionWorldResponse = Message<"hdlctrl.v1.SaveSessionWorldResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.SaveSessionWorldResponse.
 * Use `create(SaveSessionWorldResponseSchema)` to create a new message.
 */
export const SaveSessionWorldResponseSchema: GenMessage<SaveSessionWorldResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 25);

/**
 * @generated from message hdlctrl.v1.InviteUserRequest
 */
export type InviteUserRequest = Message<"hdlctrl.v1.InviteUserRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from oneof hdlctrl.v1.InviteUserRequest.user
   */
  user: {
    /**
     * @generated from field: string user_id = 3;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string user_name = 4;
     */
    value: string;
    case: "userName";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message hdlctrl.v1.InviteUserRequest.
 * Use `create(InviteUserRequestSchema)` to create a new message.
 */
export const InviteUserRequestSchema: GenMessage<InviteUserRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 26);

/**
 * @generated from message hdlctrl.v1.InviteUserResponse
 */
export type InviteUserResponse = Message<"hdlctrl.v1.InviteUserResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.InviteUserResponse.
 * Use `create(InviteUserResponseSchema)` to create a new message.
 */
export const InviteUserResponseSchema: GenMessage<InviteUserResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 27);

/**
 * @generated from message hdlctrl.v1.UpdateUserRoleRequest
 */
export type UpdateUserRoleRequest = Message<"hdlctrl.v1.UpdateUserRoleRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.UpdateUserRoleRequest parameters = 2;
   */
  parameters?: UpdateUserRoleRequest$1;
};

/**
 * Describes the message hdlctrl.v1.UpdateUserRoleRequest.
 * Use `create(UpdateUserRoleRequestSchema)` to create a new message.
 */
export const UpdateUserRoleRequestSchema: GenMessage<UpdateUserRoleRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 28);

/**
 * @generated from message hdlctrl.v1.UpdateUserRoleResponse
 */
export type UpdateUserRoleResponse = Message<"hdlctrl.v1.UpdateUserRoleResponse"> & {
  /**
   * @generated from field: string role = 1;
   */
  role: string;
};

/**
 * Describes the message hdlctrl.v1.UpdateUserRoleResponse.
 * Use `create(UpdateUserRoleResponseSchema)` to create a new message.
 */
export const UpdateUserRoleResponseSchema: GenMessage<UpdateUserRoleResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 29);

/**
 * @generated from message hdlctrl.v1.UpdateSessionParametersRequest
 */
export type UpdateSessionParametersRequest = Message<"hdlctrl.v1.UpdateSessionParametersRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.UpdateSessionParametersRequest parameters = 2;
   */
  parameters?: UpdateSessionParametersRequest$1;
};

/**
 * Describes the message hdlctrl.v1.UpdateSessionParametersRequest.
 * Use `create(UpdateSessionParametersRequestSchema)` to create a new message.
 */
export const UpdateSessionParametersRequestSchema: GenMessage<UpdateSessionParametersRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 30);

/**
 * @generated from message hdlctrl.v1.UpdateSessionParametersResponse
 */
export type UpdateSessionParametersResponse = Message<"hdlctrl.v1.UpdateSessionParametersResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.UpdateSessionParametersResponse.
 * Use `create(UpdateSessionParametersResponseSchema)` to create a new message.
 */
export const UpdateSessionParametersResponseSchema: GenMessage<UpdateSessionParametersResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 31);

/**
 * @generated from message hdlctrl.v1.ListUsersInSessionRequest
 */
export type ListUsersInSessionRequest = Message<"hdlctrl.v1.ListUsersInSessionRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.ListUsersInSessionRequest.
 * Use `create(ListUsersInSessionRequestSchema)` to create a new message.
 */
export const ListUsersInSessionRequestSchema: GenMessage<ListUsersInSessionRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 32);

/**
 * @generated from message hdlctrl.v1.ListUsersInSessionResponse
 */
export type ListUsersInSessionResponse = Message<"hdlctrl.v1.ListUsersInSessionResponse"> & {
  /**
   * @generated from field: repeated headless.v1.UserInSession users = 1;
   */
  users: UserInSession[];
};

/**
 * Describes the message hdlctrl.v1.ListUsersInSessionResponse.
 * Use `create(ListUsersInSessionResponseSchema)` to create a new message.
 */
export const ListUsersInSessionResponseSchema: GenMessage<ListUsersInSessionResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 33);

/**
 * @generated from message hdlctrl.v1.HeadlessHost
 */
export type HeadlessHost = Message<"hdlctrl.v1.HeadlessHost"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string address = 3;
   */
  address: string;

  /**
   * @generated from field: string resonite_version = 4;
   */
  resoniteVersion: string;

  /**
   * @generated from field: string account_id = 5;
   */
  accountId: string;

  /**
   * @generated from field: string account_name = 6;
   */
  accountName: string;

  /**
   * @generated from field: float fps = 7;
   */
  fps: number;

  /**
   * @generated from field: int64 storage_quota_bytes = 8;
   */
  storageQuotaBytes: bigint;

  /**
   * @generated from field: int64 storage_used_bytes = 9;
   */
  storageUsedBytes: bigint;
};

/**
 * Describes the message hdlctrl.v1.HeadlessHost.
 * Use `create(HeadlessHostSchema)` to create a new message.
 */
export const HeadlessHostSchema: GenMessage<HeadlessHost> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 34);

/**
 * @generated from service hdlctrl.v1.ControllerService
 */
export const ControllerService: GenService<{
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ListHeadlessHost
   */
  listHeadlessHost: {
    methodKind: "unary";
    input: typeof ListHeadlessHostRequestSchema;
    output: typeof ListHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.GetHeadlessHost
   */
  getHeadlessHost: {
    methodKind: "unary";
    input: typeof GetHeadlessHostRequestSchema;
    output: typeof GetHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.GetHeadlessHostLogs
   */
  getHeadlessHostLogs: {
    methodKind: "unary";
    input: typeof GetHeadlessHostLogsRequestSchema;
    output: typeof GetHeadlessHostLogsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.FetchWorldInfo
   */
  fetchWorldInfo: {
    methodKind: "unary";
    input: typeof FetchWorldInfoRequestSchema;
    output: typeof FetchWorldInfoResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.SearchUserInfo
   */
  searchUserInfo: {
    methodKind: "unary";
    input: typeof SearchUserInfoRequestSchema;
    output: typeof SearchUserInfoResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ListSessions
   */
  listSessions: {
    methodKind: "unary";
    input: typeof ListSessionsRequestSchema;
    output: typeof ListSessionsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.GetSessionDetails
   */
  getSessionDetails: {
    methodKind: "unary";
    input: typeof GetSessionDetailsRequestSchema;
    output: typeof GetSessionDetailsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.StartWorld
   */
  startWorld: {
    methodKind: "unary";
    input: typeof StartWorldRequestSchema;
    output: typeof StartWorldResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.StopSession
   */
  stopSession: {
    methodKind: "unary";
    input: typeof StopSessionRequestSchema;
    output: typeof StopSessionResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.SaveSessionWorld
   */
  saveSessionWorld: {
    methodKind: "unary";
    input: typeof SaveSessionWorldRequestSchema;
    output: typeof SaveSessionWorldResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.InviteUser
   */
  inviteUser: {
    methodKind: "unary";
    input: typeof InviteUserRequestSchema;
    output: typeof InviteUserResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.UpdateUserRole
   */
  updateUserRole: {
    methodKind: "unary";
    input: typeof UpdateUserRoleRequestSchema;
    output: typeof UpdateUserRoleResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.UpdateSessionParameters
   */
  updateSessionParameters: {
    methodKind: "unary";
    input: typeof UpdateSessionParametersRequestSchema;
    output: typeof UpdateSessionParametersResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ListUsersInSession
   */
  listUsersInSession: {
    methodKind: "unary";
    input: typeof ListUsersInSessionRequestSchema;
    output: typeof ListUsersInSessionResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.KickUser
   */
  kickUser: {
    methodKind: "unary";
    input: typeof KickUserRequestSchema;
    output: typeof KickUserResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.BanUser
   */
  banUser: {
    methodKind: "unary";
    input: typeof BanUserRequestSchema;
    output: typeof BanUserResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_hdlctrl_v1_controller, 0);

