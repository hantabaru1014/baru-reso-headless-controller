// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file hdlctrl/v1/controller.proto (package hdlctrl.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { BanUserRequest as BanUserRequest$1, FetchWorldInfoResponseSchema, KickUserRequest as KickUserRequest$1, SearchUserInfoRequest as SearchUserInfoRequest$1, SearchUserInfoResponseSchema, Session, UpdateSessionParametersRequest as UpdateSessionParametersRequest$1, UpdateUserRoleRequest as UpdateUserRoleRequest$1, UserInSession, WorldStartupParameters } from "../../headless/v1/headless_pb";
import { file_headless_v1_headless } from "../../headless/v1/headless_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file hdlctrl/v1/controller.proto.
 */
export const file_hdlctrl_v1_controller: GenFile = /*@__PURE__*/
  fileDesc("ChtoZGxjdHJsL3YxL2NvbnRyb2xsZXIucHJvdG8SCmhkbGN0cmwudjEiQgoaUmVzdGFydEhlYWRsZXNzSG9zdFJlcXVlc3QSDwoHaG9zdF9pZBgBIAEoCRITCgt3aXRoX3VwZGF0ZRgCIAEoCCJHChtSZXN0YXJ0SGVhZGxlc3NIb3N0UmVzcG9uc2USGAoLbmV3X2hvc3RfaWQYASABKAlIAIgBAUIOCgxfbmV3X2hvc3RfaWQiHAoaUHVsbExhdGVzdEhvc3RJbWFnZVJlcXVlc3QiKwobUHVsbExhdGVzdEhvc3RJbWFnZVJlc3BvbnNlEgwKBGxvZ3MYASABKAkiUAohVXBkYXRlSGVhZGxlc3NIb3N0U2V0dGluZ3NSZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSEQoEbmFtZRgCIAEoCUgAiAEBQgcKBV9uYW1lIiQKIlVwZGF0ZUhlYWRsZXNzSG9zdFNldHRpbmdzUmVzcG9uc2UiLgobU2h1dGRvd25IZWFkbGVzc0hvc3RSZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkiHgocU2h1dGRvd25IZWFkbGVzc0hvc3RSZXNwb25zZSKhAQoaR2V0SGVhZGxlc3NIb3N0TG9nc1JlcXVlc3QSDwoHaG9zdF9pZBgBIAEoCRIPCgVsaW1pdBgCIAEoBUgAEisKBXVudGlsGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAEisKBXNpbmNlGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAQgcKBXF1ZXJ5Iq4BChtHZXRIZWFkbGVzc0hvc3RMb2dzUmVzcG9uc2USOQoEbG9ncxgBIAMoCzIrLmhkbGN0cmwudjEuR2V0SGVhZGxlc3NIb3N0TG9nc1Jlc3BvbnNlLkxvZxpUCgNMb2cSLQoJdGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIQCghpc19lcnJvchgCIAEoCBIMCgRib2R5GAMgASgJImAKFVNlYXJjaFVzZXJJbmZvUmVxdWVzdBIPCgdob3N0X2lkGAEgASgJEjYKCnBhcmFtZXRlcnMYAiABKAsyIi5oZWFkbGVzcy52MS5TZWFyY2hVc2VySW5mb1JlcXVlc3QiVAoPS2lja1VzZXJSZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSMAoKcGFyYW1ldGVycxgCIAEoCzIcLmhlYWRsZXNzLnYxLktpY2tVc2VyUmVxdWVzdCISChBLaWNrVXNlclJlc3BvbnNlIlIKDkJhblVzZXJSZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSLwoKcGFyYW1ldGVycxgCIAEoCzIbLmhlYWRsZXNzLnYxLkJhblVzZXJSZXF1ZXN0IhEKD0JhblVzZXJSZXNwb25zZSI1ChVGZXRjaFdvcmxkSW5mb1JlcXVlc3QSDwoHaG9zdF9pZBgBIAEoCRILCgN1cmwYAiABKAkiGQoXTGlzdEhlYWRsZXNzSG9zdFJlcXVlc3QiQwoYTGlzdEhlYWRsZXNzSG9zdFJlc3BvbnNlEicKBWhvc3RzGAEgAygLMhguaGRsY3RybC52MS5IZWFkbGVzc0hvc3QiKQoWR2V0SGVhZGxlc3NIb3N0UmVxdWVzdBIPCgdob3N0X2lkGAEgASgJIkEKF0dldEhlYWRsZXNzSG9zdFJlc3BvbnNlEiYKBGhvc3QYASABKAsyGC5oZGxjdHJsLnYxLkhlYWRsZXNzSG9zdCI3ChZBZGRIZWFkbGVzc0hvc3RSZXF1ZXN0EgwKBG5hbWUYASABKAkSDwoHYWRkcmVzcxgCIAEoCSJBChdBZGRIZWFkbGVzc0hvc3RSZXNwb25zZRImCgRob3N0GAEgASgLMhguaGRsY3RybC52MS5IZWFkbGVzc0hvc3QiJgoTTGlzdFNlc3Npb25zUmVxdWVzdBIPCgdob3N0X2lkGAEgASgJIj4KFExpc3RTZXNzaW9uc1Jlc3BvbnNlEiYKCHNlc3Npb25zGAEgAygLMhQuaGVhZGxlc3MudjEuU2Vzc2lvbiI/ChhHZXRTZXNzaW9uRGV0YWlsc1JlcXVlc3QSDwoHaG9zdF9pZBgBIAEoCRISCgpzZXNzaW9uX2lkGAIgASgJIkIKGUdldFNlc3Npb25EZXRhaWxzUmVzcG9uc2USJQoHc2Vzc2lvbhgBIAEoCzIULmhlYWRsZXNzLnYxLlNlc3Npb24iXQoRU3RhcnRXb3JsZFJlcXVlc3QSDwoHaG9zdF9pZBgBIAEoCRI3CgpwYXJhbWV0ZXJzGAIgASgLMiMuaGVhZGxlc3MudjEuV29ybGRTdGFydHVwUGFyYW1ldGVycyJCChJTdGFydFdvcmxkUmVzcG9uc2USLAoOb3BlbmVkX3Nlc3Npb24YASABKAsyFC5oZWFkbGVzcy52MS5TZXNzaW9uIjkKElN0b3BTZXNzaW9uUmVxdWVzdBIPCgdob3N0X2lkGAEgASgJEhIKCnNlc3Npb25faWQYAiABKAkiFQoTU3RvcFNlc3Npb25SZXNwb25zZSI+ChdTYXZlU2Vzc2lvbldvcmxkUmVxdWVzdBIPCgdob3N0X2lkGAEgASgJEhIKCnNlc3Npb25faWQYAiABKAkiGgoYU2F2ZVNlc3Npb25Xb3JsZFJlc3BvbnNlImgKEUludml0ZVVzZXJSZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSEgoKc2Vzc2lvbl9pZBgCIAEoCRIRCgd1c2VyX2lkGAMgASgJSAASEwoJdXNlcl9uYW1lGAQgASgJSABCBgoEdXNlciIUChJJbnZpdGVVc2VyUmVzcG9uc2UiYAoVVXBkYXRlVXNlclJvbGVSZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSNgoKcGFyYW1ldGVycxgCIAEoCzIiLmhlYWRsZXNzLnYxLlVwZGF0ZVVzZXJSb2xlUmVxdWVzdCImChZVcGRhdGVVc2VyUm9sZVJlc3BvbnNlEgwKBHJvbGUYASABKAkicgoeVXBkYXRlU2Vzc2lvblBhcmFtZXRlcnNSZXF1ZXN0Eg8KB2hvc3RfaWQYASABKAkSPwoKcGFyYW1ldGVycxgCIAEoCzIrLmhlYWRsZXNzLnYxLlVwZGF0ZVNlc3Npb25QYXJhbWV0ZXJzUmVxdWVzdCIhCh9VcGRhdGVTZXNzaW9uUGFyYW1ldGVyc1Jlc3BvbnNlIkAKGUxpc3RVc2Vyc0luU2Vzc2lvblJlcXVlc3QSDwoHaG9zdF9pZBgBIAEoCRISCgpzZXNzaW9uX2lkGAIgASgJIkcKGkxpc3RVc2Vyc0luU2Vzc2lvblJlc3BvbnNlEikKBXVzZXJzGAEgAygLMhouaGVhZGxlc3MudjEuVXNlckluU2Vzc2lvbiLzAQoMSGVhZGxlc3NIb3N0EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDwoHYWRkcmVzcxgDIAEoCRIYChByZXNvbml0ZV92ZXJzaW9uGAQgASgJEhIKCmFjY291bnRfaWQYBSABKAkSFAoMYWNjb3VudF9uYW1lGAYgASgJEgsKA2ZwcxgHIAEoAhIbChNzdG9yYWdlX3F1b3RhX2J5dGVzGAggASgDEhoKEnN0b3JhZ2VfdXNlZF9ieXRlcxgJIAEoAxIuCgZzdGF0dXMYCiABKA4yHi5oZGxjdHJsLnYxLkhlYWRsZXNzSG9zdFN0YXR1cyrhAQoSSGVhZGxlc3NIb3N0U3RhdHVzEiAKHEhFQURMRVNTX0hPU1RfU1RBVFVTX1VOS05PV04QABIhCh1IRUFETEVTU19IT1NUX1NUQVRVU19TVEFSVElORxABEiAKHEhFQURMRVNTX0hPU1RfU1RBVFVTX1JVTk5JTkcQAhIhCh1IRUFETEVTU19IT1NUX1NUQVRVU19TVE9QUElORxADEh8KG0hFQURMRVNTX0hPU1RfU1RBVFVTX0VYSVRFRBAEEiAKHEhFQURMRVNTX0hPU1RfU1RBVFVTX0NSQVNIRUQQBTLdDgoRQ29udHJvbGxlclNlcnZpY2USXQoQTGlzdEhlYWRsZXNzSG9zdBIjLmhkbGN0cmwudjEuTGlzdEhlYWRsZXNzSG9zdFJlcXVlc3QaJC5oZGxjdHJsLnYxLkxpc3RIZWFkbGVzc0hvc3RSZXNwb25zZRJaCg9HZXRIZWFkbGVzc0hvc3QSIi5oZGxjdHJsLnYxLkdldEhlYWRsZXNzSG9zdFJlcXVlc3QaIy5oZGxjdHJsLnYxLkdldEhlYWRsZXNzSG9zdFJlc3BvbnNlEmYKE0dldEhlYWRsZXNzSG9zdExvZ3MSJi5oZGxjdHJsLnYxLkdldEhlYWRsZXNzSG9zdExvZ3NSZXF1ZXN0GicuaGRsY3RybC52MS5HZXRIZWFkbGVzc0hvc3RMb2dzUmVzcG9uc2USaQoUU2h1dGRvd25IZWFkbGVzc0hvc3QSJy5oZGxjdHJsLnYxLlNodXRkb3duSGVhZGxlc3NIb3N0UmVxdWVzdBooLmhkbGN0cmwudjEuU2h1dGRvd25IZWFkbGVzc0hvc3RSZXNwb25zZRJ7ChpVcGRhdGVIZWFkbGVzc0hvc3RTZXR0aW5ncxItLmhkbGN0cmwudjEuVXBkYXRlSGVhZGxlc3NIb3N0U2V0dGluZ3NSZXF1ZXN0Gi4uaGRsY3RybC52MS5VcGRhdGVIZWFkbGVzc0hvc3RTZXR0aW5nc1Jlc3BvbnNlEmYKE1B1bGxMYXRlc3RIb3N0SW1hZ2USJi5oZGxjdHJsLnYxLlB1bGxMYXRlc3RIb3N0SW1hZ2VSZXF1ZXN0GicuaGRsY3RybC52MS5QdWxsTGF0ZXN0SG9zdEltYWdlUmVzcG9uc2USZgoTUmVzdGFydEhlYWRsZXNzSG9zdBImLmhkbGN0cmwudjEuUmVzdGFydEhlYWRsZXNzSG9zdFJlcXVlc3QaJy5oZGxjdHJsLnYxLlJlc3RhcnRIZWFkbGVzc0hvc3RSZXNwb25zZRJYCg5GZXRjaFdvcmxkSW5mbxIhLmhkbGN0cmwudjEuRmV0Y2hXb3JsZEluZm9SZXF1ZXN0GiMuaGVhZGxlc3MudjEuRmV0Y2hXb3JsZEluZm9SZXNwb25zZRJYCg5TZWFyY2hVc2VySW5mbxIhLmhkbGN0cmwudjEuU2VhcmNoVXNlckluZm9SZXF1ZXN0GiMuaGVhZGxlc3MudjEuU2VhcmNoVXNlckluZm9SZXNwb25zZRJRCgxMaXN0U2Vzc2lvbnMSHy5oZGxjdHJsLnYxLkxpc3RTZXNzaW9uc1JlcXVlc3QaIC5oZGxjdHJsLnYxLkxpc3RTZXNzaW9uc1Jlc3BvbnNlEmAKEUdldFNlc3Npb25EZXRhaWxzEiQuaGRsY3RybC52MS5HZXRTZXNzaW9uRGV0YWlsc1JlcXVlc3QaJS5oZGxjdHJsLnYxLkdldFNlc3Npb25EZXRhaWxzUmVzcG9uc2USSwoKU3RhcnRXb3JsZBIdLmhkbGN0cmwudjEuU3RhcnRXb3JsZFJlcXVlc3QaHi5oZGxjdHJsLnYxLlN0YXJ0V29ybGRSZXNwb25zZRJOCgtTdG9wU2Vzc2lvbhIeLmhkbGN0cmwudjEuU3RvcFNlc3Npb25SZXF1ZXN0Gh8uaGRsY3RybC52MS5TdG9wU2Vzc2lvblJlc3BvbnNlEl0KEFNhdmVTZXNzaW9uV29ybGQSIy5oZGxjdHJsLnYxLlNhdmVTZXNzaW9uV29ybGRSZXF1ZXN0GiQuaGRsY3RybC52MS5TYXZlU2Vzc2lvbldvcmxkUmVzcG9uc2USSwoKSW52aXRlVXNlchIdLmhkbGN0cmwudjEuSW52aXRlVXNlclJlcXVlc3QaHi5oZGxjdHJsLnYxLkludml0ZVVzZXJSZXNwb25zZRJXCg5VcGRhdGVVc2VyUm9sZRIhLmhkbGN0cmwudjEuVXBkYXRlVXNlclJvbGVSZXF1ZXN0GiIuaGRsY3RybC52MS5VcGRhdGVVc2VyUm9sZVJlc3BvbnNlEnIKF1VwZGF0ZVNlc3Npb25QYXJhbWV0ZXJzEiouaGRsY3RybC52MS5VcGRhdGVTZXNzaW9uUGFyYW1ldGVyc1JlcXVlc3QaKy5oZGxjdHJsLnYxLlVwZGF0ZVNlc3Npb25QYXJhbWV0ZXJzUmVzcG9uc2USYwoSTGlzdFVzZXJzSW5TZXNzaW9uEiUuaGRsY3RybC52MS5MaXN0VXNlcnNJblNlc3Npb25SZXF1ZXN0GiYuaGRsY3RybC52MS5MaXN0VXNlcnNJblNlc3Npb25SZXNwb25zZRJFCghLaWNrVXNlchIbLmhkbGN0cmwudjEuS2lja1VzZXJSZXF1ZXN0GhwuaGRsY3RybC52MS5LaWNrVXNlclJlc3BvbnNlEkIKB0JhblVzZXISGi5oZGxjdHJsLnYxLkJhblVzZXJSZXF1ZXN0GhsuaGRsY3RybC52MS5CYW5Vc2VyUmVzcG9uc2VCvQEKDmNvbS5oZGxjdHJsLnYxQg9Db250cm9sbGVyUHJvdG9QAVpRZ2l0aHViLmNvbS9oYW50YWJhcnUxMDE0L2JhcnUtcmVzby1oZWFkbGVzcy1jb250cm9sbGVyL3BiZ2VuL2hkbGN0cmwvdjE7aGRsY3RybHYxogIDSFhYqgIKSGRsY3RybC5WMcoCCkhkbGN0cmxcVjHiAhZIZGxjdHJsXFYxXEdQQk1ldGFkYXRh6gILSGRsY3RybDo6VjFiBnByb3RvMw", [file_headless_v1_headless, file_google_protobuf_timestamp]);

/**
 * @generated from message hdlctrl.v1.RestartHeadlessHostRequest
 */
export type RestartHeadlessHostRequest = Message<"hdlctrl.v1.RestartHeadlessHostRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: bool with_update = 2;
   */
  withUpdate: boolean;
};

/**
 * Describes the message hdlctrl.v1.RestartHeadlessHostRequest.
 * Use `create(RestartHeadlessHostRequestSchema)` to create a new message.
 */
export const RestartHeadlessHostRequestSchema: GenMessage<RestartHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 0);

/**
 * @generated from message hdlctrl.v1.RestartHeadlessHostResponse
 */
export type RestartHeadlessHostResponse = Message<"hdlctrl.v1.RestartHeadlessHostResponse"> & {
  /**
   * @generated from field: optional string new_host_id = 1;
   */
  newHostId?: string;
};

/**
 * Describes the message hdlctrl.v1.RestartHeadlessHostResponse.
 * Use `create(RestartHeadlessHostResponseSchema)` to create a new message.
 */
export const RestartHeadlessHostResponseSchema: GenMessage<RestartHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 1);

/**
 * @generated from message hdlctrl.v1.PullLatestHostImageRequest
 */
export type PullLatestHostImageRequest = Message<"hdlctrl.v1.PullLatestHostImageRequest"> & {
};

/**
 * Describes the message hdlctrl.v1.PullLatestHostImageRequest.
 * Use `create(PullLatestHostImageRequestSchema)` to create a new message.
 */
export const PullLatestHostImageRequestSchema: GenMessage<PullLatestHostImageRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 2);

/**
 * @generated from message hdlctrl.v1.PullLatestHostImageResponse
 */
export type PullLatestHostImageResponse = Message<"hdlctrl.v1.PullLatestHostImageResponse"> & {
  /**
   * @generated from field: string logs = 1;
   */
  logs: string;
};

/**
 * Describes the message hdlctrl.v1.PullLatestHostImageResponse.
 * Use `create(PullLatestHostImageResponseSchema)` to create a new message.
 */
export const PullLatestHostImageResponseSchema: GenMessage<PullLatestHostImageResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 3);

/**
 * @generated from message hdlctrl.v1.UpdateHeadlessHostSettingsRequest
 */
export type UpdateHeadlessHostSettingsRequest = Message<"hdlctrl.v1.UpdateHeadlessHostSettingsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;
};

/**
 * Describes the message hdlctrl.v1.UpdateHeadlessHostSettingsRequest.
 * Use `create(UpdateHeadlessHostSettingsRequestSchema)` to create a new message.
 */
export const UpdateHeadlessHostSettingsRequestSchema: GenMessage<UpdateHeadlessHostSettingsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 4);

/**
 * @generated from message hdlctrl.v1.UpdateHeadlessHostSettingsResponse
 */
export type UpdateHeadlessHostSettingsResponse = Message<"hdlctrl.v1.UpdateHeadlessHostSettingsResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.UpdateHeadlessHostSettingsResponse.
 * Use `create(UpdateHeadlessHostSettingsResponseSchema)` to create a new message.
 */
export const UpdateHeadlessHostSettingsResponseSchema: GenMessage<UpdateHeadlessHostSettingsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 5);

/**
 * @generated from message hdlctrl.v1.ShutdownHeadlessHostRequest
 */
export type ShutdownHeadlessHostRequest = Message<"hdlctrl.v1.ShutdownHeadlessHostRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;
};

/**
 * Describes the message hdlctrl.v1.ShutdownHeadlessHostRequest.
 * Use `create(ShutdownHeadlessHostRequestSchema)` to create a new message.
 */
export const ShutdownHeadlessHostRequestSchema: GenMessage<ShutdownHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 6);

/**
 * @generated from message hdlctrl.v1.ShutdownHeadlessHostResponse
 */
export type ShutdownHeadlessHostResponse = Message<"hdlctrl.v1.ShutdownHeadlessHostResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.ShutdownHeadlessHostResponse.
 * Use `create(ShutdownHeadlessHostResponseSchema)` to create a new message.
 */
export const ShutdownHeadlessHostResponseSchema: GenMessage<ShutdownHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 7);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostLogsRequest
 */
export type GetHeadlessHostLogsRequest = Message<"hdlctrl.v1.GetHeadlessHostLogsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from oneof hdlctrl.v1.GetHeadlessHostLogsRequest.query
   */
  query: {
    /**
     * limit が指定されている場合は、最新のログから limit 件取得する
     *
     * @generated from field: int32 limit = 2;
     */
    value: number;
    case: "limit";
  } | {
    /**
     * until が指定されている場合は、until 以前のログを全て取得する
     *
     * @generated from field: google.protobuf.Timestamp until = 3;
     */
    value: Timestamp;
    case: "until";
  } | {
    /**
     * since が指定されている場合は、since 以降のログを全て取得する
     *
     * @generated from field: google.protobuf.Timestamp since = 4;
     */
    value: Timestamp;
    case: "since";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostLogsRequest.
 * Use `create(GetHeadlessHostLogsRequestSchema)` to create a new message.
 */
export const GetHeadlessHostLogsRequestSchema: GenMessage<GetHeadlessHostLogsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 8);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostLogsResponse
 */
export type GetHeadlessHostLogsResponse = Message<"hdlctrl.v1.GetHeadlessHostLogsResponse"> & {
  /**
   * 時系列に並んだログ
   *
   * @generated from field: repeated hdlctrl.v1.GetHeadlessHostLogsResponse.Log logs = 1;
   */
  logs: GetHeadlessHostLogsResponse_Log[];
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostLogsResponse.
 * Use `create(GetHeadlessHostLogsResponseSchema)` to create a new message.
 */
export const GetHeadlessHostLogsResponseSchema: GenMessage<GetHeadlessHostLogsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 9);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostLogsResponse.Log
 */
export type GetHeadlessHostLogsResponse_Log = Message<"hdlctrl.v1.GetHeadlessHostLogsResponse.Log"> & {
  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: bool is_error = 2;
   */
  isError: boolean;

  /**
   * @generated from field: string body = 3;
   */
  body: string;
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostLogsResponse.Log.
 * Use `create(GetHeadlessHostLogsResponse_LogSchema)` to create a new message.
 */
export const GetHeadlessHostLogsResponse_LogSchema: GenMessage<GetHeadlessHostLogsResponse_Log> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 9, 0);

/**
 * @generated from message hdlctrl.v1.SearchUserInfoRequest
 */
export type SearchUserInfoRequest = Message<"hdlctrl.v1.SearchUserInfoRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.SearchUserInfoRequest parameters = 2;
   */
  parameters?: SearchUserInfoRequest$1;
};

/**
 * Describes the message hdlctrl.v1.SearchUserInfoRequest.
 * Use `create(SearchUserInfoRequestSchema)` to create a new message.
 */
export const SearchUserInfoRequestSchema: GenMessage<SearchUserInfoRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 10);

/**
 * @generated from message hdlctrl.v1.KickUserRequest
 */
export type KickUserRequest = Message<"hdlctrl.v1.KickUserRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.KickUserRequest parameters = 2;
   */
  parameters?: KickUserRequest$1;
};

/**
 * Describes the message hdlctrl.v1.KickUserRequest.
 * Use `create(KickUserRequestSchema)` to create a new message.
 */
export const KickUserRequestSchema: GenMessage<KickUserRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 11);

/**
 * @generated from message hdlctrl.v1.KickUserResponse
 */
export type KickUserResponse = Message<"hdlctrl.v1.KickUserResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.KickUserResponse.
 * Use `create(KickUserResponseSchema)` to create a new message.
 */
export const KickUserResponseSchema: GenMessage<KickUserResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 12);

/**
 * @generated from message hdlctrl.v1.BanUserRequest
 */
export type BanUserRequest = Message<"hdlctrl.v1.BanUserRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.BanUserRequest parameters = 2;
   */
  parameters?: BanUserRequest$1;
};

/**
 * Describes the message hdlctrl.v1.BanUserRequest.
 * Use `create(BanUserRequestSchema)` to create a new message.
 */
export const BanUserRequestSchema: GenMessage<BanUserRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 13);

/**
 * @generated from message hdlctrl.v1.BanUserResponse
 */
export type BanUserResponse = Message<"hdlctrl.v1.BanUserResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.BanUserResponse.
 * Use `create(BanUserResponseSchema)` to create a new message.
 */
export const BanUserResponseSchema: GenMessage<BanUserResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 14);

/**
 * @generated from message hdlctrl.v1.FetchWorldInfoRequest
 */
export type FetchWorldInfoRequest = Message<"hdlctrl.v1.FetchWorldInfoRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string url = 2;
   */
  url: string;
};

/**
 * Describes the message hdlctrl.v1.FetchWorldInfoRequest.
 * Use `create(FetchWorldInfoRequestSchema)` to create a new message.
 */
export const FetchWorldInfoRequestSchema: GenMessage<FetchWorldInfoRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 15);

/**
 * @generated from message hdlctrl.v1.ListHeadlessHostRequest
 */
export type ListHeadlessHostRequest = Message<"hdlctrl.v1.ListHeadlessHostRequest"> & {
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessHostRequest.
 * Use `create(ListHeadlessHostRequestSchema)` to create a new message.
 */
export const ListHeadlessHostRequestSchema: GenMessage<ListHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 16);

/**
 * @generated from message hdlctrl.v1.ListHeadlessHostResponse
 */
export type ListHeadlessHostResponse = Message<"hdlctrl.v1.ListHeadlessHostResponse"> & {
  /**
   * @generated from field: repeated hdlctrl.v1.HeadlessHost hosts = 1;
   */
  hosts: HeadlessHost[];
};

/**
 * Describes the message hdlctrl.v1.ListHeadlessHostResponse.
 * Use `create(ListHeadlessHostResponseSchema)` to create a new message.
 */
export const ListHeadlessHostResponseSchema: GenMessage<ListHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 17);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostRequest
 */
export type GetHeadlessHostRequest = Message<"hdlctrl.v1.GetHeadlessHostRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostRequest.
 * Use `create(GetHeadlessHostRequestSchema)` to create a new message.
 */
export const GetHeadlessHostRequestSchema: GenMessage<GetHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 18);

/**
 * @generated from message hdlctrl.v1.GetHeadlessHostResponse
 */
export type GetHeadlessHostResponse = Message<"hdlctrl.v1.GetHeadlessHostResponse"> & {
  /**
   * @generated from field: hdlctrl.v1.HeadlessHost host = 1;
   */
  host?: HeadlessHost;
};

/**
 * Describes the message hdlctrl.v1.GetHeadlessHostResponse.
 * Use `create(GetHeadlessHostResponseSchema)` to create a new message.
 */
export const GetHeadlessHostResponseSchema: GenMessage<GetHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 19);

/**
 * @generated from message hdlctrl.v1.AddHeadlessHostRequest
 */
export type AddHeadlessHostRequest = Message<"hdlctrl.v1.AddHeadlessHostRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string address = 2;
   */
  address: string;
};

/**
 * Describes the message hdlctrl.v1.AddHeadlessHostRequest.
 * Use `create(AddHeadlessHostRequestSchema)` to create a new message.
 */
export const AddHeadlessHostRequestSchema: GenMessage<AddHeadlessHostRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 20);

/**
 * @generated from message hdlctrl.v1.AddHeadlessHostResponse
 */
export type AddHeadlessHostResponse = Message<"hdlctrl.v1.AddHeadlessHostResponse"> & {
  /**
   * @generated from field: hdlctrl.v1.HeadlessHost host = 1;
   */
  host?: HeadlessHost;
};

/**
 * Describes the message hdlctrl.v1.AddHeadlessHostResponse.
 * Use `create(AddHeadlessHostResponseSchema)` to create a new message.
 */
export const AddHeadlessHostResponseSchema: GenMessage<AddHeadlessHostResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 21);

/**
 * @generated from message hdlctrl.v1.ListSessionsRequest
 */
export type ListSessionsRequest = Message<"hdlctrl.v1.ListSessionsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;
};

/**
 * Describes the message hdlctrl.v1.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema: GenMessage<ListSessionsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 22);

/**
 * @generated from message hdlctrl.v1.ListSessionsResponse
 */
export type ListSessionsResponse = Message<"hdlctrl.v1.ListSessionsResponse"> & {
  /**
   * @generated from field: repeated headless.v1.Session sessions = 1;
   */
  sessions: Session[];
};

/**
 * Describes the message hdlctrl.v1.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema: GenMessage<ListSessionsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 23);

/**
 * @generated from message hdlctrl.v1.GetSessionDetailsRequest
 */
export type GetSessionDetailsRequest = Message<"hdlctrl.v1.GetSessionDetailsRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.GetSessionDetailsRequest.
 * Use `create(GetSessionDetailsRequestSchema)` to create a new message.
 */
export const GetSessionDetailsRequestSchema: GenMessage<GetSessionDetailsRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 24);

/**
 * @generated from message hdlctrl.v1.GetSessionDetailsResponse
 */
export type GetSessionDetailsResponse = Message<"hdlctrl.v1.GetSessionDetailsResponse"> & {
  /**
   * @generated from field: headless.v1.Session session = 1;
   */
  session?: Session;
};

/**
 * Describes the message hdlctrl.v1.GetSessionDetailsResponse.
 * Use `create(GetSessionDetailsResponseSchema)` to create a new message.
 */
export const GetSessionDetailsResponseSchema: GenMessage<GetSessionDetailsResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 25);

/**
 * @generated from message hdlctrl.v1.StartWorldRequest
 */
export type StartWorldRequest = Message<"hdlctrl.v1.StartWorldRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.WorldStartupParameters parameters = 2;
   */
  parameters?: WorldStartupParameters;
};

/**
 * Describes the message hdlctrl.v1.StartWorldRequest.
 * Use `create(StartWorldRequestSchema)` to create a new message.
 */
export const StartWorldRequestSchema: GenMessage<StartWorldRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 26);

/**
 * @generated from message hdlctrl.v1.StartWorldResponse
 */
export type StartWorldResponse = Message<"hdlctrl.v1.StartWorldResponse"> & {
  /**
   * @generated from field: headless.v1.Session opened_session = 1;
   */
  openedSession?: Session;
};

/**
 * Describes the message hdlctrl.v1.StartWorldResponse.
 * Use `create(StartWorldResponseSchema)` to create a new message.
 */
export const StartWorldResponseSchema: GenMessage<StartWorldResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 27);

/**
 * @generated from message hdlctrl.v1.StopSessionRequest
 */
export type StopSessionRequest = Message<"hdlctrl.v1.StopSessionRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.StopSessionRequest.
 * Use `create(StopSessionRequestSchema)` to create a new message.
 */
export const StopSessionRequestSchema: GenMessage<StopSessionRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 28);

/**
 * @generated from message hdlctrl.v1.StopSessionResponse
 */
export type StopSessionResponse = Message<"hdlctrl.v1.StopSessionResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.StopSessionResponse.
 * Use `create(StopSessionResponseSchema)` to create a new message.
 */
export const StopSessionResponseSchema: GenMessage<StopSessionResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 29);

/**
 * @generated from message hdlctrl.v1.SaveSessionWorldRequest
 */
export type SaveSessionWorldRequest = Message<"hdlctrl.v1.SaveSessionWorldRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.SaveSessionWorldRequest.
 * Use `create(SaveSessionWorldRequestSchema)` to create a new message.
 */
export const SaveSessionWorldRequestSchema: GenMessage<SaveSessionWorldRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 30);

/**
 * @generated from message hdlctrl.v1.SaveSessionWorldResponse
 */
export type SaveSessionWorldResponse = Message<"hdlctrl.v1.SaveSessionWorldResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.SaveSessionWorldResponse.
 * Use `create(SaveSessionWorldResponseSchema)` to create a new message.
 */
export const SaveSessionWorldResponseSchema: GenMessage<SaveSessionWorldResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 31);

/**
 * @generated from message hdlctrl.v1.InviteUserRequest
 */
export type InviteUserRequest = Message<"hdlctrl.v1.InviteUserRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from oneof hdlctrl.v1.InviteUserRequest.user
   */
  user: {
    /**
     * @generated from field: string user_id = 3;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string user_name = 4;
     */
    value: string;
    case: "userName";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message hdlctrl.v1.InviteUserRequest.
 * Use `create(InviteUserRequestSchema)` to create a new message.
 */
export const InviteUserRequestSchema: GenMessage<InviteUserRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 32);

/**
 * @generated from message hdlctrl.v1.InviteUserResponse
 */
export type InviteUserResponse = Message<"hdlctrl.v1.InviteUserResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.InviteUserResponse.
 * Use `create(InviteUserResponseSchema)` to create a new message.
 */
export const InviteUserResponseSchema: GenMessage<InviteUserResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 33);

/**
 * @generated from message hdlctrl.v1.UpdateUserRoleRequest
 */
export type UpdateUserRoleRequest = Message<"hdlctrl.v1.UpdateUserRoleRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.UpdateUserRoleRequest parameters = 2;
   */
  parameters?: UpdateUserRoleRequest$1;
};

/**
 * Describes the message hdlctrl.v1.UpdateUserRoleRequest.
 * Use `create(UpdateUserRoleRequestSchema)` to create a new message.
 */
export const UpdateUserRoleRequestSchema: GenMessage<UpdateUserRoleRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 34);

/**
 * @generated from message hdlctrl.v1.UpdateUserRoleResponse
 */
export type UpdateUserRoleResponse = Message<"hdlctrl.v1.UpdateUserRoleResponse"> & {
  /**
   * @generated from field: string role = 1;
   */
  role: string;
};

/**
 * Describes the message hdlctrl.v1.UpdateUserRoleResponse.
 * Use `create(UpdateUserRoleResponseSchema)` to create a new message.
 */
export const UpdateUserRoleResponseSchema: GenMessage<UpdateUserRoleResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 35);

/**
 * @generated from message hdlctrl.v1.UpdateSessionParametersRequest
 */
export type UpdateSessionParametersRequest = Message<"hdlctrl.v1.UpdateSessionParametersRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: headless.v1.UpdateSessionParametersRequest parameters = 2;
   */
  parameters?: UpdateSessionParametersRequest$1;
};

/**
 * Describes the message hdlctrl.v1.UpdateSessionParametersRequest.
 * Use `create(UpdateSessionParametersRequestSchema)` to create a new message.
 */
export const UpdateSessionParametersRequestSchema: GenMessage<UpdateSessionParametersRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 36);

/**
 * @generated from message hdlctrl.v1.UpdateSessionParametersResponse
 */
export type UpdateSessionParametersResponse = Message<"hdlctrl.v1.UpdateSessionParametersResponse"> & {
};

/**
 * Describes the message hdlctrl.v1.UpdateSessionParametersResponse.
 * Use `create(UpdateSessionParametersResponseSchema)` to create a new message.
 */
export const UpdateSessionParametersResponseSchema: GenMessage<UpdateSessionParametersResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 37);

/**
 * @generated from message hdlctrl.v1.ListUsersInSessionRequest
 */
export type ListUsersInSessionRequest = Message<"hdlctrl.v1.ListUsersInSessionRequest"> & {
  /**
   * @generated from field: string host_id = 1;
   */
  hostId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message hdlctrl.v1.ListUsersInSessionRequest.
 * Use `create(ListUsersInSessionRequestSchema)` to create a new message.
 */
export const ListUsersInSessionRequestSchema: GenMessage<ListUsersInSessionRequest> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 38);

/**
 * @generated from message hdlctrl.v1.ListUsersInSessionResponse
 */
export type ListUsersInSessionResponse = Message<"hdlctrl.v1.ListUsersInSessionResponse"> & {
  /**
   * @generated from field: repeated headless.v1.UserInSession users = 1;
   */
  users: UserInSession[];
};

/**
 * Describes the message hdlctrl.v1.ListUsersInSessionResponse.
 * Use `create(ListUsersInSessionResponseSchema)` to create a new message.
 */
export const ListUsersInSessionResponseSchema: GenMessage<ListUsersInSessionResponse> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 39);

/**
 * @generated from message hdlctrl.v1.HeadlessHost
 */
export type HeadlessHost = Message<"hdlctrl.v1.HeadlessHost"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string address = 3;
   */
  address: string;

  /**
   * @generated from field: string resonite_version = 4;
   */
  resoniteVersion: string;

  /**
   * @generated from field: string account_id = 5;
   */
  accountId: string;

  /**
   * @generated from field: string account_name = 6;
   */
  accountName: string;

  /**
   * @generated from field: float fps = 7;
   */
  fps: number;

  /**
   * @generated from field: int64 storage_quota_bytes = 8;
   */
  storageQuotaBytes: bigint;

  /**
   * @generated from field: int64 storage_used_bytes = 9;
   */
  storageUsedBytes: bigint;

  /**
   * @generated from field: hdlctrl.v1.HeadlessHostStatus status = 10;
   */
  status: HeadlessHostStatus;
};

/**
 * Describes the message hdlctrl.v1.HeadlessHost.
 * Use `create(HeadlessHostSchema)` to create a new message.
 */
export const HeadlessHostSchema: GenMessage<HeadlessHost> = /*@__PURE__*/
  messageDesc(file_hdlctrl_v1_controller, 40);

/**
 * @generated from enum hdlctrl.v1.HeadlessHostStatus
 */
export enum HeadlessHostStatus {
  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_STARTING = 1;
   */
  STARTING = 1,

  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_STOPPING = 3;
   */
  STOPPING = 3,

  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_EXITED = 4;
   */
  EXITED = 4,

  /**
   * @generated from enum value: HEADLESS_HOST_STATUS_CRASHED = 5;
   */
  CRASHED = 5,
}

/**
 * Describes the enum hdlctrl.v1.HeadlessHostStatus.
 */
export const HeadlessHostStatusSchema: GenEnum<HeadlessHostStatus> = /*@__PURE__*/
  enumDesc(file_hdlctrl_v1_controller, 0);

/**
 * @generated from service hdlctrl.v1.ControllerService
 */
export const ControllerService: GenService<{
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ListHeadlessHost
   */
  listHeadlessHost: {
    methodKind: "unary";
    input: typeof ListHeadlessHostRequestSchema;
    output: typeof ListHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.GetHeadlessHost
   */
  getHeadlessHost: {
    methodKind: "unary";
    input: typeof GetHeadlessHostRequestSchema;
    output: typeof GetHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.GetHeadlessHostLogs
   */
  getHeadlessHostLogs: {
    methodKind: "unary";
    input: typeof GetHeadlessHostLogsRequestSchema;
    output: typeof GetHeadlessHostLogsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ShutdownHeadlessHost
   */
  shutdownHeadlessHost: {
    methodKind: "unary";
    input: typeof ShutdownHeadlessHostRequestSchema;
    output: typeof ShutdownHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.UpdateHeadlessHostSettings
   */
  updateHeadlessHostSettings: {
    methodKind: "unary";
    input: typeof UpdateHeadlessHostSettingsRequestSchema;
    output: typeof UpdateHeadlessHostSettingsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.PullLatestHostImage
   */
  pullLatestHostImage: {
    methodKind: "unary";
    input: typeof PullLatestHostImageRequestSchema;
    output: typeof PullLatestHostImageResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.RestartHeadlessHost
   */
  restartHeadlessHost: {
    methodKind: "unary";
    input: typeof RestartHeadlessHostRequestSchema;
    output: typeof RestartHeadlessHostResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.FetchWorldInfo
   */
  fetchWorldInfo: {
    methodKind: "unary";
    input: typeof FetchWorldInfoRequestSchema;
    output: typeof FetchWorldInfoResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.SearchUserInfo
   */
  searchUserInfo: {
    methodKind: "unary";
    input: typeof SearchUserInfoRequestSchema;
    output: typeof SearchUserInfoResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ListSessions
   */
  listSessions: {
    methodKind: "unary";
    input: typeof ListSessionsRequestSchema;
    output: typeof ListSessionsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.GetSessionDetails
   */
  getSessionDetails: {
    methodKind: "unary";
    input: typeof GetSessionDetailsRequestSchema;
    output: typeof GetSessionDetailsResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.StartWorld
   */
  startWorld: {
    methodKind: "unary";
    input: typeof StartWorldRequestSchema;
    output: typeof StartWorldResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.StopSession
   */
  stopSession: {
    methodKind: "unary";
    input: typeof StopSessionRequestSchema;
    output: typeof StopSessionResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.SaveSessionWorld
   */
  saveSessionWorld: {
    methodKind: "unary";
    input: typeof SaveSessionWorldRequestSchema;
    output: typeof SaveSessionWorldResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.InviteUser
   */
  inviteUser: {
    methodKind: "unary";
    input: typeof InviteUserRequestSchema;
    output: typeof InviteUserResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.UpdateUserRole
   */
  updateUserRole: {
    methodKind: "unary";
    input: typeof UpdateUserRoleRequestSchema;
    output: typeof UpdateUserRoleResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.UpdateSessionParameters
   */
  updateSessionParameters: {
    methodKind: "unary";
    input: typeof UpdateSessionParametersRequestSchema;
    output: typeof UpdateSessionParametersResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.ListUsersInSession
   */
  listUsersInSession: {
    methodKind: "unary";
    input: typeof ListUsersInSessionRequestSchema;
    output: typeof ListUsersInSessionResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.KickUser
   */
  kickUser: {
    methodKind: "unary";
    input: typeof KickUserRequestSchema;
    output: typeof KickUserResponseSchema;
  },
  /**
   * @generated from rpc hdlctrl.v1.ControllerService.BanUser
   */
  banUser: {
    methodKind: "unary";
    input: typeof BanUserRequestSchema;
    output: typeof BanUserResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_hdlctrl_v1_controller, 0);

