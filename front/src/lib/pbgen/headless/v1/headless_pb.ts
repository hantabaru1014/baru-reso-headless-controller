// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file headless/v1/headless.proto (package headless.v1, syntax proto3)
 

import type {
  GenEnum,
  GenFile,
  GenMessage,
  GenService,
} from "@bufbuild/protobuf/codegenv1";
import {
  enumDesc,
  fileDesc,
  messageDesc,
  serviceDesc,
} from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file headless/v1/headless.proto.
 */
export const file_headless_v1_headless: GenFile =
  /*@__PURE__*/
  fileDesc(
    "ChpoZWFkbGVzcy92MS9oZWFkbGVzcy5wcm90bxILaGVhZGxlc3MudjEiEQoPU2h1dGRvd25SZXF1ZXN0IhIKEFNodXRkb3duUmVzcG9uc2UiFQoTTGlzdFNlc3Npb25zUmVxdWVzdCI+ChRMaXN0U2Vzc2lvbnNSZXNwb25zZRImCghzZXNzaW9ucxgBIAMoCzIULmhlYWRsZXNzLnYxLlNlc3Npb24iTAoRU3RhcnRXb3JsZFJlcXVlc3QSNwoKcGFyYW1ldGVycxgBIAEoCzIjLmhlYWRsZXNzLnYxLldvcmxkU3RhcnR1cFBhcmFtZXRlcnMiQgoSU3RhcnRXb3JsZFJlc3BvbnNlEiwKDm9wZW5lZF9zZXNzaW9uGAEgASgLMhQuaGVhZGxlc3MudjEuU2Vzc2lvbiIoChJTdG9wU2Vzc2lvblJlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoCSIVChNTdG9wU2Vzc2lvblJlc3BvbnNlIlcKEUludml0ZVVzZXJSZXF1ZXN0EhIKCnNlc3Npb25faWQYASABKAkSEQoHdXNlcl9pZBgCIAEoCUgAEhMKCXVzZXJfbmFtZRgDIAEoCUgAQgYKBHVzZXIiFAoSSW52aXRlVXNlclJlc3BvbnNlImkKFVVwZGF0ZVVzZXJSb2xlUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEhEKB3VzZXJfaWQYAiABKAlIABITCgl1c2VyX25hbWUYAyABKAlIABIMCgRyb2xlGAQgASgJQgYKBHVzZXIiJgoWVXBkYXRlVXNlclJvbGVSZXNwb25zZRIMCgRyb2xlGAEgASgJIvYBCh5VcGRhdGVTZXNzaW9uUGFyYW1ldGVyc1JlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoCRIZCgxzZXNzaW9uX25hbWUYAiABKAlIAIgBARIYCgtkZXNjcmlwdGlvbhgDIAEoCUgBiAEBEhYKCW1heF91c2VycxgEIAEoBUgCiAEBEjMKDGFjY2Vzc19sZXZlbBgFIAEoDjIYLmhlYWRsZXNzLnYxLkFjY2Vzc0xldmVsSAOIAQFCDwoNX3Nlc3Npb25fbmFtZUIOCgxfZGVzY3JpcHRpb25CDAoKX21heF91c2Vyc0IPCg1fYWNjZXNzX2xldmVsIiEKH1VwZGF0ZVNlc3Npb25QYXJhbWV0ZXJzUmVzcG9uc2UiLwoZTGlzdFVzZXJzSW5TZXNzaW9uUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJIkcKGkxpc3RVc2Vyc0luU2Vzc2lvblJlc3BvbnNlEikKBXVzZXJzGAEgAygLMhouaGVhZGxlc3MudjEuVXNlckluU2Vzc2lvbiJLCg1Vc2VySW5TZXNzaW9uEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSDAoEcm9sZRgDIAEoCRISCgppc19wcmVzZW50GAQgASgIItcBCgdTZXNzaW9uEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSLgoMYWNjZXNzX2xldmVsGAQgASgOMhguaGVhZGxlc3MudjEuQWNjZXNzTGV2ZWwSGgoNdGh1bWJuYWlsX3VybBgFIAEoCUgAiAEBEj8KEnN0YXJ0dXBfcGFyYW1ldGVycxgGIAEoCzIjLmhlYWRsZXNzLnYxLldvcmxkU3RhcnR1cFBhcmFtZXRlcnNCEAoOX3RodW1ibmFpbF91cmwi4wIKFldvcmxkU3RhcnR1cFBhcmFtZXRlcnMSGQoMc2Vzc2lvbl9uYW1lGAEgASgJSAGIAQESHgoRY3VzdG9tX3Nlc3Npb25faWQYAiABKAlIAogBARIYCgtkZXNjcmlwdGlvbhgDIAEoCUgDiAEBEhYKCW1heF91c2VycxgEIAEoBUgEiAEBEi4KDGFjY2Vzc19sZXZlbBgFIAEoDjIYLmhlYWRsZXNzLnYxLkFjY2Vzc0xldmVsEhgKDmxvYWRfd29ybGRfdXJsGAYgASgJSAASIAoWbG9hZF93b3JsZF9wcmVzZXRfbmFtZRgHIAEoCUgAEh0KFWF1dG9faW52aXRlX3VzZXJuYW1lcxgIIAMoCUIMCgpsb2FkX3dvcmxkQg8KDV9zZXNzaW9uX25hbWVCFAoSX2N1c3RvbV9zZXNzaW9uX2lkQg4KDF9kZXNjcmlwdGlvbkIMCgpfbWF4X3VzZXJzKtIBCgtBY2Nlc3NMZXZlbBIcChhBQ0NFU1NfTEVWRUxfVU5TUEVDSUZJRUQQABIYChRBQ0NFU1NfTEVWRUxfUFJJVkFURRABEhQKEEFDQ0VTU19MRVZFTF9MQU4QAhIZChVBQ0NFU1NfTEVWRUxfQ09OVEFDVFMQAxIeChpBQ0NFU1NfTEVWRUxfQ09OVEFDVFNfUExVUxAEEiEKHUFDQ0VTU19MRVZFTF9SRUdJU1RFUkVEX1VTRVJTEAUSFwoTQUNDRVNTX0xFVkVMX0FOWU9ORRAGMt4FChZIZWFkbGVzc0NvbnRyb2xTZXJ2aWNlEkcKCFNodXRkb3duEhwuaGVhZGxlc3MudjEuU2h1dGRvd25SZXF1ZXN0Gh0uaGVhZGxlc3MudjEuU2h1dGRvd25SZXNwb25zZRJTCgxMaXN0U2Vzc2lvbnMSIC5oZWFkbGVzcy52MS5MaXN0U2Vzc2lvbnNSZXF1ZXN0GiEuaGVhZGxlc3MudjEuTGlzdFNlc3Npb25zUmVzcG9uc2USTQoKU3RhcnRXb3JsZBIeLmhlYWRsZXNzLnYxLlN0YXJ0V29ybGRSZXF1ZXN0Gh8uaGVhZGxlc3MudjEuU3RhcnRXb3JsZFJlc3BvbnNlElAKC1N0b3BTZXNzaW9uEh8uaGVhZGxlc3MudjEuU3RvcFNlc3Npb25SZXF1ZXN0GiAuaGVhZGxlc3MudjEuU3RvcFNlc3Npb25SZXNwb25zZRJNCgpJbnZpdGVVc2VyEh4uaGVhZGxlc3MudjEuSW52aXRlVXNlclJlcXVlc3QaHy5oZWFkbGVzcy52MS5JbnZpdGVVc2VyUmVzcG9uc2USWQoOVXBkYXRlVXNlclJvbGUSIi5oZWFkbGVzcy52MS5VcGRhdGVVc2VyUm9sZVJlcXVlc3QaIy5oZWFkbGVzcy52MS5VcGRhdGVVc2VyUm9sZVJlc3BvbnNlEnQKF1VwZGF0ZVNlc3Npb25QYXJhbWV0ZXJzEisuaGVhZGxlc3MudjEuVXBkYXRlU2Vzc2lvblBhcmFtZXRlcnNSZXF1ZXN0GiwuaGVhZGxlc3MudjEuVXBkYXRlU2Vzc2lvblBhcmFtZXRlcnNSZXNwb25zZRJlChJMaXN0VXNlcnNJblNlc3Npb24SJi5oZWFkbGVzcy52MS5MaXN0VXNlcnNJblNlc3Npb25SZXF1ZXN0GicuaGVhZGxlc3MudjEuTGlzdFVzZXJzSW5TZXNzaW9uUmVzcG9uc2VCwgEKD2NvbS5oZWFkbGVzcy52MUINSGVhZGxlc3NQcm90b1ABWlNnaXRodWIuY29tL2hhbnRhYmFydTEwMTQvYmFydS1yZXNvLWhlYWRsZXNzLWNvbnRyb2xsZXIvcGJnZW4vaGVhZGxlc3MvdjE7aGVhZGxlc3N2MaICA0hYWKoCC0hlYWRsZXNzLlYxygILSGVhZGxlc3NcVjHiAhdIZWFkbGVzc1xWMVxHUEJNZXRhZGF0YeoCDEhlYWRsZXNzOjpWMWIGcHJvdG8z",
  );

/**
 * @generated from message headless.v1.ShutdownRequest
 */
export type ShutdownRequest = Message<"headless.v1.ShutdownRequest"> & {};

/**
 * Describes the message headless.v1.ShutdownRequest.
 * Use `create(ShutdownRequestSchema)` to create a new message.
 */
export const ShutdownRequestSchema: GenMessage<ShutdownRequest> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 0);

/**
 * @generated from message headless.v1.ShutdownResponse
 */
export type ShutdownResponse = Message<"headless.v1.ShutdownResponse"> & {};

/**
 * Describes the message headless.v1.ShutdownResponse.
 * Use `create(ShutdownResponseSchema)` to create a new message.
 */
export const ShutdownResponseSchema: GenMessage<ShutdownResponse> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 1);

/**
 * @generated from message headless.v1.ListSessionsRequest
 */
export type ListSessionsRequest =
  Message<"headless.v1.ListSessionsRequest"> & {};

/**
 * Describes the message headless.v1.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema: GenMessage<ListSessionsRequest> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 2);

/**
 * @generated from message headless.v1.ListSessionsResponse
 */
export type ListSessionsResponse =
  Message<"headless.v1.ListSessionsResponse"> & {
    /**
     * @generated from field: repeated headless.v1.Session sessions = 1;
     */
    sessions: Session[];
  };

/**
 * Describes the message headless.v1.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema: GenMessage<ListSessionsResponse> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 3);

/**
 * @generated from message headless.v1.StartWorldRequest
 */
export type StartWorldRequest = Message<"headless.v1.StartWorldRequest"> & {
  /**
   * @generated from field: headless.v1.WorldStartupParameters parameters = 1;
   */
  parameters?: WorldStartupParameters;
};

/**
 * Describes the message headless.v1.StartWorldRequest.
 * Use `create(StartWorldRequestSchema)` to create a new message.
 */
export const StartWorldRequestSchema: GenMessage<StartWorldRequest> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 4);

/**
 * @generated from message headless.v1.StartWorldResponse
 */
export type StartWorldResponse = Message<"headless.v1.StartWorldResponse"> & {
  /**
   * @generated from field: headless.v1.Session opened_session = 1;
   */
  openedSession?: Session;
};

/**
 * Describes the message headless.v1.StartWorldResponse.
 * Use `create(StartWorldResponseSchema)` to create a new message.
 */
export const StartWorldResponseSchema: GenMessage<StartWorldResponse> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 5);

/**
 * @generated from message headless.v1.StopSessionRequest
 */
export type StopSessionRequest = Message<"headless.v1.StopSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;
};

/**
 * Describes the message headless.v1.StopSessionRequest.
 * Use `create(StopSessionRequestSchema)` to create a new message.
 */
export const StopSessionRequestSchema: GenMessage<StopSessionRequest> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 6);

/**
 * @generated from message headless.v1.StopSessionResponse
 */
export type StopSessionResponse =
  Message<"headless.v1.StopSessionResponse"> & {};

/**
 * Describes the message headless.v1.StopSessionResponse.
 * Use `create(StopSessionResponseSchema)` to create a new message.
 */
export const StopSessionResponseSchema: GenMessage<StopSessionResponse> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 7);

/**
 * @generated from message headless.v1.InviteUserRequest
 */
export type InviteUserRequest = Message<"headless.v1.InviteUserRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from oneof headless.v1.InviteUserRequest.user
   */
  user:
    | {
        /**
         * @generated from field: string user_id = 2;
         */
        value: string;
        case: "userId";
      }
    | {
        /**
         * @generated from field: string user_name = 3;
         */
        value: string;
        case: "userName";
      }
    | { case: undefined; value?: undefined };
};

/**
 * Describes the message headless.v1.InviteUserRequest.
 * Use `create(InviteUserRequestSchema)` to create a new message.
 */
export const InviteUserRequestSchema: GenMessage<InviteUserRequest> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 8);

/**
 * @generated from message headless.v1.InviteUserResponse
 */
export type InviteUserResponse = Message<"headless.v1.InviteUserResponse"> & {};

/**
 * Describes the message headless.v1.InviteUserResponse.
 * Use `create(InviteUserResponseSchema)` to create a new message.
 */
export const InviteUserResponseSchema: GenMessage<InviteUserResponse> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 9);

/**
 * @generated from message headless.v1.UpdateUserRoleRequest
 */
export type UpdateUserRoleRequest =
  Message<"headless.v1.UpdateUserRoleRequest"> & {
    /**
     * @generated from field: string session_id = 1;
     */
    sessionId: string;

    /**
     * @generated from oneof headless.v1.UpdateUserRoleRequest.user
     */
    user:
      | {
          /**
           * @generated from field: string user_id = 2;
           */
          value: string;
          case: "userId";
        }
      | {
          /**
           * @generated from field: string user_name = 3;
           */
          value: string;
          case: "userName";
        }
      | { case: undefined; value?: undefined };

    /**
     * @generated from field: string role = 4;
     */
    role: string;
  };

/**
 * Describes the message headless.v1.UpdateUserRoleRequest.
 * Use `create(UpdateUserRoleRequestSchema)` to create a new message.
 */
export const UpdateUserRoleRequestSchema: GenMessage<UpdateUserRoleRequest> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 10);

/**
 * @generated from message headless.v1.UpdateUserRoleResponse
 */
export type UpdateUserRoleResponse =
  Message<"headless.v1.UpdateUserRoleResponse"> & {
    /**
     * 変更後のロール(無効なロールを指定した場合そのままの可能性)
     *
     * @generated from field: string role = 1;
     */
    role: string;
  };

/**
 * Describes the message headless.v1.UpdateUserRoleResponse.
 * Use `create(UpdateUserRoleResponseSchema)` to create a new message.
 */
export const UpdateUserRoleResponseSchema: GenMessage<UpdateUserRoleResponse> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 11);

/**
 * @generated from message headless.v1.UpdateSessionParametersRequest
 */
export type UpdateSessionParametersRequest =
  Message<"headless.v1.UpdateSessionParametersRequest"> & {
    /**
     * @generated from field: string session_id = 1;
     */
    sessionId: string;

    /**
     * @generated from field: optional string session_name = 2;
     */
    sessionName?: string;

    /**
     * @generated from field: optional string description = 3;
     */
    description?: string;

    /**
     * @generated from field: optional int32 max_users = 4;
     */
    maxUsers?: number;

    /**
     * @generated from field: optional headless.v1.AccessLevel access_level = 5;
     */
    accessLevel?: AccessLevel;
  };

/**
 * Describes the message headless.v1.UpdateSessionParametersRequest.
 * Use `create(UpdateSessionParametersRequestSchema)` to create a new message.
 */
export const UpdateSessionParametersRequestSchema: GenMessage<UpdateSessionParametersRequest> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 12);

/**
 * @generated from message headless.v1.UpdateSessionParametersResponse
 */
export type UpdateSessionParametersResponse =
  Message<"headless.v1.UpdateSessionParametersResponse"> & {};

/**
 * Describes the message headless.v1.UpdateSessionParametersResponse.
 * Use `create(UpdateSessionParametersResponseSchema)` to create a new message.
 */
export const UpdateSessionParametersResponseSchema: GenMessage<UpdateSessionParametersResponse> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 13);

/**
 * @generated from message headless.v1.ListUsersInSessionRequest
 */
export type ListUsersInSessionRequest =
  Message<"headless.v1.ListUsersInSessionRequest"> & {
    /**
     * @generated from field: string session_id = 1;
     */
    sessionId: string;
  };

/**
 * Describes the message headless.v1.ListUsersInSessionRequest.
 * Use `create(ListUsersInSessionRequestSchema)` to create a new message.
 */
export const ListUsersInSessionRequestSchema: GenMessage<ListUsersInSessionRequest> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 14);

/**
 * @generated from message headless.v1.ListUsersInSessionResponse
 */
export type ListUsersInSessionResponse =
  Message<"headless.v1.ListUsersInSessionResponse"> & {
    /**
     * @generated from field: repeated headless.v1.UserInSession users = 1;
     */
    users: UserInSession[];
  };

/**
 * Describes the message headless.v1.ListUsersInSessionResponse.
 * Use `create(ListUsersInSessionResponseSchema)` to create a new message.
 */
export const ListUsersInSessionResponseSchema: GenMessage<ListUsersInSessionResponse> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 15);

/**
 * @generated from message headless.v1.UserInSession
 */
export type UserInSession = Message<"headless.v1.UserInSession"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string role = 3;
   */
  role: string;

  /**
   * @generated from field: bool is_present = 4;
   */
  isPresent: boolean;
};

/**
 * Describes the message headless.v1.UserInSession.
 * Use `create(UserInSessionSchema)` to create a new message.
 */
export const UserInSessionSchema: GenMessage<UserInSession> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 16);

/**
 * @generated from message headless.v1.Session
 */
export type Session = Message<"headless.v1.Session"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: headless.v1.AccessLevel access_level = 4;
   */
  accessLevel: AccessLevel;

  /**
   * @generated from field: optional string thumbnail_url = 5;
   */
  thumbnailUrl?: string;

  /**
   * @generated from field: headless.v1.WorldStartupParameters startup_parameters = 6;
   */
  startupParameters?: WorldStartupParameters;
};

/**
 * Describes the message headless.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema: GenMessage<Session> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 17);

/**
 * @generated from message headless.v1.WorldStartupParameters
 */
export type WorldStartupParameters =
  Message<"headless.v1.WorldStartupParameters"> & {
    /**
     * @generated from field: optional string session_name = 1;
     */
    sessionName?: string;

    /**
     * @generated from field: optional string custom_session_id = 2;
     */
    customSessionId?: string;

    /**
     * @generated from field: optional string description = 3;
     */
    description?: string;

    /**
     * @generated from field: optional int32 max_users = 4;
     */
    maxUsers?: number;

    /**
     * @generated from field: headless.v1.AccessLevel access_level = 5;
     */
    accessLevel: AccessLevel;

    /**
     * @generated from oneof headless.v1.WorldStartupParameters.load_world
     */
    loadWorld:
      | {
          /**
           * @generated from field: string load_world_url = 6;
           */
          value: string;
          case: "loadWorldUrl";
        }
      | {
          /**
           * @generated from field: string load_world_preset_name = 7;
           */
          value: string;
          case: "loadWorldPresetName";
        }
      | { case: undefined; value?: undefined };

    /**
     * @generated from field: repeated string auto_invite_usernames = 8;
     */
    autoInviteUsernames: string[];
  };

/**
 * Describes the message headless.v1.WorldStartupParameters.
 * Use `create(WorldStartupParametersSchema)` to create a new message.
 */
export const WorldStartupParametersSchema: GenMessage<WorldStartupParameters> =
  /*@__PURE__*/
  messageDesc(file_headless_v1_headless, 18);

/**
 * @generated from enum headless.v1.AccessLevel
 */
export enum AccessLevel {
  /**
   * @generated from enum value: ACCESS_LEVEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACCESS_LEVEL_PRIVATE = 1;
   */
  PRIVATE = 1,

  /**
   * @generated from enum value: ACCESS_LEVEL_LAN = 2;
   */
  LAN = 2,

  /**
   * @generated from enum value: ACCESS_LEVEL_CONTACTS = 3;
   */
  CONTACTS = 3,

  /**
   * @generated from enum value: ACCESS_LEVEL_CONTACTS_PLUS = 4;
   */
  CONTACTS_PLUS = 4,

  /**
   * @generated from enum value: ACCESS_LEVEL_REGISTERED_USERS = 5;
   */
  REGISTERED_USERS = 5,

  /**
   * @generated from enum value: ACCESS_LEVEL_ANYONE = 6;
   */
  ANYONE = 6,
}

/**
 * Describes the enum headless.v1.AccessLevel.
 */
export const AccessLevelSchema: GenEnum<AccessLevel> =
  /*@__PURE__*/
  enumDesc(file_headless_v1_headless, 0);

/**
 * @generated from service headless.v1.HeadlessControlService
 */
export const HeadlessControlService: GenService<{
  /**
   * @generated from rpc headless.v1.HeadlessControlService.Shutdown
   */
  shutdown: {
    methodKind: "unary";
    input: typeof ShutdownRequestSchema;
    output: typeof ShutdownResponseSchema;
  };
  /**
   * @generated from rpc headless.v1.HeadlessControlService.ListSessions
   */
  listSessions: {
    methodKind: "unary";
    input: typeof ListSessionsRequestSchema;
    output: typeof ListSessionsResponseSchema;
  };
  /**
   * @generated from rpc headless.v1.HeadlessControlService.StartWorld
   */
  startWorld: {
    methodKind: "unary";
    input: typeof StartWorldRequestSchema;
    output: typeof StartWorldResponseSchema;
  };
  /**
   * @generated from rpc headless.v1.HeadlessControlService.StopSession
   */
  stopSession: {
    methodKind: "unary";
    input: typeof StopSessionRequestSchema;
    output: typeof StopSessionResponseSchema;
  };
  /**
   * @generated from rpc headless.v1.HeadlessControlService.InviteUser
   */
  inviteUser: {
    methodKind: "unary";
    input: typeof InviteUserRequestSchema;
    output: typeof InviteUserResponseSchema;
  };
  /**
   * @generated from rpc headless.v1.HeadlessControlService.UpdateUserRole
   */
  updateUserRole: {
    methodKind: "unary";
    input: typeof UpdateUserRoleRequestSchema;
    output: typeof UpdateUserRoleResponseSchema;
  };
  /**
   * @generated from rpc headless.v1.HeadlessControlService.UpdateSessionParameters
   */
  updateSessionParameters: {
    methodKind: "unary";
    input: typeof UpdateSessionParametersRequestSchema;
    output: typeof UpdateSessionParametersResponseSchema;
  };
  /**
   * @generated from rpc headless.v1.HeadlessControlService.ListUsersInSession
   */
  listUsersInSession: {
    methodKind: "unary";
    input: typeof ListUsersInSessionRequestSchema;
    output: typeof ListUsersInSessionResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_headless_v1_headless, 0);
