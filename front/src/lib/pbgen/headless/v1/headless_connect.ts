// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts,import_extension=none"
// @generated from file headless/v1/headless.proto (package headless.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { InviteUserRequest, InviteUserResponse, ListSessionsRequest, ListSessionsResponse, ListUsersInSessionRequest, ListUsersInSessionResponse, ShutdownRequest, ShutdownResponse, StartWorldRequest, StartWorldResponse, StopSessionRequest, StopSessionResponse, UpdateSessionParametersRequest, UpdateSessionParametersResponse, UpdateUserRoleRequest, UpdateUserRoleResponse } from "./headless_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service headless.v1.HeadlessControlService
 */
export const HeadlessControlService = {
  typeName: "headless.v1.HeadlessControlService",
  methods: {
    /**
     * @generated from rpc headless.v1.HeadlessControlService.Shutdown
     */
    shutdown: {
      name: "Shutdown",
      I: ShutdownRequest,
      O: ShutdownResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc headless.v1.HeadlessControlService.ListSessions
     */
    listSessions: {
      name: "ListSessions",
      I: ListSessionsRequest,
      O: ListSessionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc headless.v1.HeadlessControlService.StartWorld
     */
    startWorld: {
      name: "StartWorld",
      I: StartWorldRequest,
      O: StartWorldResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc headless.v1.HeadlessControlService.StopSession
     */
    stopSession: {
      name: "StopSession",
      I: StopSessionRequest,
      O: StopSessionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc headless.v1.HeadlessControlService.InviteUser
     */
    inviteUser: {
      name: "InviteUser",
      I: InviteUserRequest,
      O: InviteUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc headless.v1.HeadlessControlService.UpdateUserRole
     */
    updateUserRole: {
      name: "UpdateUserRole",
      I: UpdateUserRoleRequest,
      O: UpdateUserRoleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc headless.v1.HeadlessControlService.UpdateSessionParameters
     */
    updateSessionParameters: {
      name: "UpdateSessionParameters",
      I: UpdateSessionParametersRequest,
      O: UpdateSessionParametersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc headless.v1.HeadlessControlService.ListUsersInSession
     */
    listUsersInSession: {
      name: "ListUsersInSession",
      I: ListUsersInSessionRequest,
      O: ListUsersInSessionResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

