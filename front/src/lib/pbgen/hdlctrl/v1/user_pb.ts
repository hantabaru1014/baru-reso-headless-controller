// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file hdlctrl/v1/user.proto (package hdlctrl.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message hdlctrl.v1.GetTokenByAPIKeyRequest
 */
export class GetTokenByAPIKeyRequest extends Message<GetTokenByAPIKeyRequest> {
  /**
   * @generated from field: string api_key = 1;
   */
  apiKey = "";

  constructor(data?: PartialMessage<GetTokenByAPIKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "hdlctrl.v1.GetTokenByAPIKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "api_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTokenByAPIKeyRequest {
    return new GetTokenByAPIKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTokenByAPIKeyRequest {
    return new GetTokenByAPIKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTokenByAPIKeyRequest {
    return new GetTokenByAPIKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetTokenByAPIKeyRequest | PlainMessage<GetTokenByAPIKeyRequest> | undefined, b: GetTokenByAPIKeyRequest | PlainMessage<GetTokenByAPIKeyRequest> | undefined): boolean {
    return proto3.util.equals(GetTokenByAPIKeyRequest, a, b);
  }
}

/**
 * @generated from message hdlctrl.v1.GetTokenByAPIKeyResponse
 */
export class GetTokenByAPIKeyResponse extends Message<GetTokenByAPIKeyResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token = "";

  constructor(data?: PartialMessage<GetTokenByAPIKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "hdlctrl.v1.GetTokenByAPIKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTokenByAPIKeyResponse {
    return new GetTokenByAPIKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTokenByAPIKeyResponse {
    return new GetTokenByAPIKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTokenByAPIKeyResponse {
    return new GetTokenByAPIKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetTokenByAPIKeyResponse | PlainMessage<GetTokenByAPIKeyResponse> | undefined, b: GetTokenByAPIKeyResponse | PlainMessage<GetTokenByAPIKeyResponse> | undefined): boolean {
    return proto3.util.equals(GetTokenByAPIKeyResponse, a, b);
  }
}

